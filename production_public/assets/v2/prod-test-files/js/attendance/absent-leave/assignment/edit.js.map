{"version":3,"file":"../../production_public/assets/v2/prod-test-files/js/attendance/absent-leave/assignment/edit.js","mappings":"cAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAwB,eAAID,IAE5BD,EAAqB,eAAIC,GAC1B,CATD,CASGK,MAAM,K,w5CCqBF,IAAMC,EAAN,cAAkD,KACvDC,cAAgBC,QAGR,KAAAC,gBAA0B,EAG1B,KAAAC,YAAsB,EAGtB,KAAAC,eAAyB,EAGzB,KAAAC,aAAwB,EAGxB,KAAAC,gBAA2B,KAG3B,KAAAC,eAAqC,KAGrC,KAAAC,gBAA0C,KAG1C,KAAAC,kBAAmD,GAGnD,KAAAC,UAAgC,GAGhC,KAAAC,UAAgD,GAGhD,KAAAC,aAAuD,GAGvD,KAAAC,WAAqB,CApCJ,CAsCnBC,oB,2HACJ,EAAMA,kBAAiB,YACvB,SAAWC,MAAK,IAAMC,KAAKH,WAAY,IAEvC,MAAMI,GAAiB,UACvBD,KAAKR,gBAAsC,OAAnBS,EAA2B,KAAO,CAACA,GAC3DD,KAAKT,eAAiB,EAAC,WAEK,OAAxBS,KAAKT,gBACHS,KAAKT,eAAeW,OAAS,IAC/BF,KAAKb,YAAc,EACnBa,KAAKZ,eAAiBY,KAAKT,eAAe,GAAGY,KAAKC,SAElDC,YAAW,KACTL,KAAKb,YAAc,CAAC,GAEnB,MAMPa,KAAKM,kBACLN,KAAKO,cAAcP,KAAKX,oBAClBW,KAAKQ,aACb,G,CAEAC,uBAAyB,CAOzBC,S,MACE,GAAIV,KAAKH,UAAW,CAClB,GAAiC,QAA7B,mBAA6B,eAAEc,gBAAgBC,QACjD,OAAO,IAAI,0DAEb,KAAK,OAA2B,CAACC,OAAQ,4BAAmCC,SAAU,SAAS,GAC7F,OAAO,IAAI,qD,CAIf,GAAId,KAAKJ,aAAaM,OAAS,EAC7B,OAAO,IAAI;;;;;;QAQb,GAA0B,OAAtBF,KAAKJ,aACP,OAAO,IAAI;;;;;;;QAUb,MAAMmB,EAAaf,KAAKJ,aAAa,GAGrC,IAAIoB,EAAc,MAYlB,OATIA,EAFsC,IAAtCD,EAAWE,WAAW9B,YACpB4B,EAAWE,WAAWC,WAAWhB,OAAS,EAC9B,GAAGa,EAAWE,WAAWE,aAAaJ,EAAWE,WAAWG,UAE5D,GAAGL,EAAWE,WAAWE,aAAaJ,EAAWE,WAAWC,cAAcH,EAAWE,WAAWG,UAGlG,GAAGL,EAAWE,WAAWI,mBAIlC,IAAI;;;;;;;;;;;;;;;;;;;;;0BAqBWrB,KAAKN,UAAU4B,KAAKC,IACpB,GAAIA,EAAMC,KAAOT,EAAWU,SAASC,SACrC,OAAO,IAAI,yBAAyBH,EAAMC,gBAAgBD,EAAMI,sB;;;;;;;gDAS1CZ,EAAWU,SAASD;4BACxCT,EAAWU,SAASG;;;;;;;iCAOf5B,KAAK6B,QAAQd,EAAWe;;;;;;iCAMxB9B,KAAK6B,QAAQd,EAAWgB;;;;;;;gDAOThB,EAAWiB;4BAC/BhB;;;;;;;;;uEAS2CD,EAAWkB;;;;;;+EAMHjC,KAAKkC;;;;;;;;;;;;;;;;;KAkBlF,CAEAL,QAAQM,GAKN,OAHWA,EAAKC,eAAe,UAAW,CAAEC,KAAM,YAGpC,IAFJF,EAAKC,eAAe,UAAW,CAAEE,MAAO,YAEtB,IADpBH,EAAKC,eAAe,UAAW,CAAEG,IAAK,WAEhD,CAEAC,eAAiB,CAETlC,kBACN,IAAIjB,GAAe,QAAkB,mBAEjCoD,EAAiC,OAAjBpD,GAAwB,EAAAqD,EAAA,GAAarD,GAAgB,KACzEW,KAAKX,aAAesD,OAAOC,MAAMH,GAAiB,KAAOE,OAAOF,GAEhEzC,KAAKV,iBAAkB,EAAAoD,EAAA,GAAaG,OAAO7C,KAAKX,eAAe,EACjE,CAEckB,cAAcuC,G,yCAC1B,MAAMC,QC5PH,SAAyDD,EAAa,KAAME,EAAqB,I,qCAEtG,MAAMC,GAAc,UAGdC,EAAM,8BAAsC,sCACtC,OAAPJ,EAAc,GAAK,IAAMA,GAAM,EAClCK,QAAa,EAAAC,EAAA,GAAKF,EAAK,CACrBG,OAAQ,MACRC,QAAS,CACPC,cAAe,SAAWN,EAAYO,SAEvC,GACL,IACE,OAAO,IAAI,IAA2B,MAAOL,E,CAC7C,MAAOM,GACPC,QAAQD,MAAM,CAAEA,UAChB,IAAIE,EAAYR,EAEhB,OADAQ,EAAiB,MAAIF,EACd,IAAI,IAA2B,MAAOE,GAAW,E,CAE5D,E,+RDuOmCC,CAAyCd,GAC/C,OAArBC,GACEA,EAAiBc,SAASC,SAAW,aAAcf,EAAiBc,SAASE,KAC/E/D,KAAKJ,aAAe,CAAC,2CAAoDoE,KAAKC,UAAUlB,EAAiBc,SAASE,QAItH/D,KAAKJ,aAAe,IACtB,G,CAEcY,c,yCACZ,MAAMuC,QAAyB,SAC/B,IAAImB,EAAiC,GAEZ,OAArBnB,EACFmB,EAAWC,KAAK,CAAE3C,GAAI,EAAGG,KAAM,mBAEY,IAAtCoB,EAAiBc,SAASC,SAAsB,WAAYf,EAAiBc,SAASE,OAGzFG,EAFiCnB,EAAiBc,SAASE,MAK/D,MAAMK,EAAoC,GAC1CA,EAASD,QAAQnE,KAAKN,aAAcwE,GACpClE,KAAKN,UAAY0E,CACnB,G,CAEMlC,WAAWmC,G,yCACfA,EAAEC,uBErRC,SAAqDxB,G,yCAE1D,MAAMG,GAAc,UAGdC,EAAM,8BAAsC,sCAAwCJ,EACxFyB,EAAiCC,SAASC,cAAc,6DACxDC,EAAW,IAAIC,SAASJ,GAE1B,OAAO,SAAU,CACfK,MAAO,qBAEPC,KAAM,OACNC,UAAW,UACXC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,SAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,UAAU,EACVC,WAAmBC,GAAU,kCAC3B,aAAa,EAAApC,EAAA,GAAKF,EAAK,CACrBG,OAAQ,QACRoC,KAAMf,EACNpB,QAAS,CACPC,cAAe,SAAWN,EAAYO,SAEvC,GAAOzD,MAAMoD,IAGd,MAAMuC,EAAiB,IAAI,IAAqB,OAAQvC,GAAM,EAAOoB,GAC/DoB,EAAYD,EAAe7B,SAEjC,GAAI,cAAe8B,GAAa,iBAAkBA,GAC5CA,EAAUC,aAAa1F,OAAS,EAAG,CAGrC,IAAI2F,EAAmC,GACvCF,EAAUC,aAAaE,SAAQzB,IACbA,EAAEwB,OACVC,SAAQC,IACd,IAAIC,EAAW,CAAEvC,MAAOY,EAAE7C,GAAK,KAAOuE,GACzB,qBAAT1B,EAAE7C,KACJwE,EAAW,CAAEvC,MAAOsC,IAGtBF,EAAO1B,KAAK6B,EAAS,GACrB,IAGJ,MAAMC,GAAM,EAAAC,EAAA,GAAwBL,GACpC,0BACE,GAAGI,I,CAIT,OAAOP,CAAc,IACpBS,OAAM1C,IACP,0BACE,GAAGZ,OAAOY,KACX,GAEL,IACA2C,kBAAmB,KAAO,kBACzBrG,MAAMsG,IAEP,GAAIA,EAAOC,YAAa,CACtB,IAAIC,EAAa,UACfC,GAAY,EACd,MAAMC,EAASJ,EAAO9E,MACtB,GAAIkF,aAAkBC,OAAQ,CAC5B,MAAMC,EAAwCF,EAAO5C,SACrD0C,EAAa1D,OAAO8D,EAAMC,SAE1BJ,EAAYC,EAAO5C,SAASC,O,CAE9B0C,GAAY,SAAU,CACpB5B,MAAO2B,EACP1B,KAAM2B,EAAY,UAAY,QAC9B1B,UAAW0B,EAAY,UAAY,UACnCtB,mBAAoB,YAEtBsB,GAAYnG,YAAW,KACrBwG,OAAOC,SAASC,QAAQ,GACvB,I,IAGT,G,CF8LUC,CAAsChH,KAAKX,aACnD,G,CAEA4H,mBACE,OAAOjH,IACT,GApMO,EAAAkH,OAAS,CACd,IAAG;;KAjEL,IAAC,QAAS,CAAEC,KAAMxE,S,+DAGlB,IAAC,QAAS,CAAEwE,KAAMxE,S,2DAGlB,IAAC,QAAS,CAAEwE,KAAMxE,S,8DAGlB,IAAC,QAAS,CAAEwE,KAAMxE,S,4DAGlB,IAAC,QAAS,CAAEwE,KAAMtE,S,+DAGlB,IAAC,QAAS,CAAEsE,KAAMC,Q,6DAGlB,IAAC,QAAS,CAAED,KAAMC,Q,8DAGlB,IAAC,QAAS,CAAED,KAAMC,Q,gEAGlB,IAAC,QAAS,CAAED,KAAMC,Q,wDAGlB,IAAC,QAAS,CAAED,KAAMC,Q,wDAGlB,IAAC,QAAS,CAAED,KAAMC,Q,2DAGlB,IAAC,QAAS,CAAED,KAAME,U,0DApCPtI,EAAmC,IAD/C,QAAc,2C,2BACFA,E","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/view/attendance/absent_leave/assignment/edit.ts","webpack://webpackNumbers/./src/addons/network/attendance/absent_leave/assignment/get.ts","webpack://webpackNumbers/./src/addons/network/attendance/absent_leave/assignment/patch.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","import \"@@assets/styles/views/admin/register/main.scss\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\nimport '@material/mwc-textarea';\r\nimport '@@addons/widgets/form/new/select';\r\nimport { UserLoginInfo_I } from \"@@addons/interfaces/network_calls/login\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { getActiveBranchIdCookie } from \"@@addons/functions/views/home/branch\";\r\nimport { ClientBranches_I, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\nimport { GroupingsMemberCategories_I } from \"@@addons/interfaces/members/groupings/member_categories\";\r\nimport { GET_ClientBranches } from \"@@addons/network/clients/branches\";\r\nimport { base64Decode, base64Encode } from \"@@addons/functions/base64\";\r\nimport { urlQueryParamsGet } from \"@@addons/functions/url_query_params\";\r\nimport { AttendanceAbsentLeaveStatusModel } from \"@@addons/interfaces/attendance/absent_leave/status\";\r\nimport { AttendanceAbsentLeaveAssignmentModel, Convert as aalamConvert } from \"@@addons/interfaces/attendance/absent_leave/assignment\";\r\nimport { GET_AttendanceAbsentLeaveAssignment } from \"@@addons/network/attendance/absent_leave/assignment/get\";\r\nimport { PATCH_AttendanceAbsentLeaveAssignment } from \"@@addons/network/attendance/absent_leave/assignment/patch\";\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { AppSetup } from \"@@addons/functions/app_settings\";\r\nimport { getAppSettingsExtraSettings } from \"@@addons/functions/app_settings/extra_settings\";\r\nimport { AppSettingsExtraUserAccess } from \"@@addons/functions/app_settings/extra_settings/user_access\";\r\nimport { PAGE__IDS } from \"@@views/attendance/page__id\";\r\n\r\n\r\n@customElement(\"attendance-absent-leave-assignment-edit\")\r\nexport class AttendanceAbsentLeaveAssignmentEdit extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private accountType: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranch: number = 1;\r\n\r\n  @property({ type: Number })\r\n  private assignmentId?: number = 0;\r\n\r\n  @property({ type: String })\r\n  private assignmentIdEnc?: string = null;\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _statuses: AttendanceAbsentLeaveStatusModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _assignments: AttendanceAbsentLeaveAssignmentModel[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        this.accountType = 1;\r\n        this.selectedBranch = this._userLoginInfo[0].user.branchId;\r\n        // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n        setTimeout(() => {\r\n          this.accountType = 0\r\n          // console.log({ \"this.accountType-2\": this.accountType });\r\n        }, 1000);\r\n        // console.log({ \"this.accountType-1\": this.accountType });\r\n\r\n      }\r\n    }\r\n\r\n    this.getAssignmentId();\r\n    this.getAssignment(this.assignmentId);\r\n    await this.getBranches();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.absent_leave_assignment, viewType: \"Edit\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n\r\n    if (this._assignments.length < 1) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n    if (this._assignments === null) {\r\n      return html`\r\n        <div class=\"main-container\">\r\n          <div class=\"flex justify-center\">\r\n            <h4 class=\"text-red-600 text-lg\">\r\n              <span class=\"font-bold\">Group </span>: Not Found</h4>\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n\r\n    const ASSIGNMENT = this._assignments[0];\r\n    // console.log({ ASSIGNMENT });\r\n\r\n    let member_name = \" - \";\r\n    if (ASSIGNMENT.memberInfo.accountType === 1) {\r\n      if (ASSIGNMENT.memberInfo.middlename.length < 1) {\r\n        member_name = `${ASSIGNMENT.memberInfo.firstname} ${ASSIGNMENT.memberInfo.surname}`;\r\n      } else {\r\n        member_name = `${ASSIGNMENT.memberInfo.firstname} ${ASSIGNMENT.memberInfo.middlename} ${ASSIGNMENT.memberInfo.surname}`;\r\n      }\r\n    } else {\r\n      member_name = `${ASSIGNMENT.memberInfo.organizationName}`;\r\n    }\r\n\r\n\r\n    return html`\r\n      <div class=\"shadow bg-white p-2\">\r\n        <div class=\"form-container flex justify-center\">\r\n          <div class=\"app-container- !px-0\">\r\n            <div class=\"app-container--row !px-0\">\r\n              <div class=\"app-container--col-md-12\">\r\n                <header class=\"header warning app-container--col-md-12\">\r\n                  <label for=\"\" class=\"label\">\r\n                    <mwc-icon class=\"icon\">format_strikethrough</mwc-icon>\r\n                    <h1 class=\"h1 !text-red-400\">Change Assignment</h1>\r\n                    <h3 class=\"h3\">Update Assignment!</h3>\r\n                  </label>\r\n                </header>\r\n                <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"attendance-absent-leave-assignment\"\r\n                  enctype=\"multipart/form-data\">\r\n                  <div class=\"row justify-content-center\">\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n                      <mwc-select class=\"w-full\" setSelectedBranchId label=\"Select Branch\" name=\"_branchId_\" id=\"_branchId_\"\r\n                        outlined required>\r\n                        <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n                        ${this._branches.map((value) => {\r\n                          if (value.id === ASSIGNMENT.statusID.branchID) {\r\n                          return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                          }\r\n                        })}\r\n                      </mwc-select>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">Select Status</h4>\r\n                      <mwc-select class=\"w-full\" setSelectedStatusId label=\"Select Status\" name=\"statusId\" id=\"statusId\"\r\n                        outlined required>\r\n                        <mwc-list-item value=\"${ASSIGNMENT.statusID.id}\" selected>\r\n                          ${ASSIGNMENT.statusID.status}\r\n                        </mwc-list-item>\r\n                      </mwc-select>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">From - Date</h4>\r\n                      <mwc-textfield name=\"fromDate\" type=\"date\" class=\"w-full\" id=\"fromDate\" label=\"Select From - Date\"\r\n                        value=\"${this.getDate(ASSIGNMENT.fromDate)}\" outlined required>\r\n                      </mwc-textfield>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-lg-6\">\r\n                      <h4 class=\"font-semibold my-2\">To - Date</h4>\r\n                      <mwc-textfield name=\"toDate\" type=\"date\" class=\"w-full\" id=\"toDate\" label=\"Select To - Date\"\r\n                        value=\"${this.getDate(ASSIGNMENT.toDate)}\" outlined required>\r\n                      </mwc-textfield>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                      <h4 class=\"font-semibold my-2\">Member</h4>\r\n                      <mwc-select class=\"w-full\" setSelectedStatusId label=\"Select Member\" name=\"__memberId__\" id=\"__memberId__\"\r\n                        outlined required>\r\n                        <mwc-list-item value=\"${ASSIGNMENT.memberID}\" selected>\r\n                          ${member_name}\r\n                        </mwc-list-item>\r\n                      </mwc-select>\r\n                    </div>\r\n                    <div class=\"col-md-12 col-lg-12\">\r\n                      <h4 class=\"font-semibold my-2\">\r\n                        Reason <span class=\"text-yellow-400\">[optional]</span>\r\n                      </h4>\r\n                      <mwc-textarea class=\"h-96\" outlined name=\"reason\" id=\"reason\" label=\"Enter Reason [optional]\"\r\n                        placeholder=\"Enter Reason [optional]\" value=\"${ASSIGNMENT.reason}\">\r\n                      </mwc-textarea>\r\n                    </div>\r\n                  </div>\r\n        \r\n                  <div class=\"form-input-container\">\r\n                    <mwc-button label=\"Update\" raised class=\"w-full\" @click=\"${this.submitForm}\">\r\n                    </mwc-button>\r\n                  </div>\r\n        \r\n                  <div class=\"flex form-input-container items-center text-center\">\r\n                    <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                    <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n                      ...\r\n                    </label>\r\n                    <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  getDate(date: Date) {\r\n\r\n    let year = date.toLocaleString('default', { year: \"numeric\" }),\r\n      month = date.toLocaleString('default', { month: \"2-digit\" }),\r\n      day = date.toLocaleString('default', { day: \"2-digit\" });\r\n    return year + \"-\" + month + \"-\" + day;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private getAssignmentId() {\r\n    let assignmentId = urlQueryParamsGet('view-assignment');\r\n    // console.log({ assignmentId });\r\n    let _assignmentId = assignmentId !== null ? base64Decode(assignmentId) : null;\r\n    this.assignmentId = Number.isNaN(_assignmentId) ? null : Number(_assignmentId);\r\n    // console.log({ \"this.assignmentId\": this.assignmentId });\r\n    this.assignmentIdEnc = base64Encode(String(this.assignmentId), true);\r\n  }\r\n\r\n  private async getAssignment(ID: number) {\r\n    const _networkResponse = await GET_AttendanceAbsentLeaveAssignment<any>(ID);\r\n    if (_networkResponse !== null) {\r\n      if (_networkResponse.response.success && 'statusId' in _networkResponse.response.data) {\r\n        this._assignments = [aalamConvert.toAttendanceAbsentLeaveAssignmentModel(JSON.stringify(_networkResponse.response.data))];\r\n        return;\r\n      }\r\n    }\r\n    this._assignments = null;\r\n  }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranches_I> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await PATCH_AttendanceAbsentLeaveAssignment(this.assignmentId);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\n\r\nexport async function GET_AttendanceAbsentLeaveAssignment<Type>(ID: Number = null, url_params: string = \"\", ) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/absent-leave/assignment'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\n\r\n\r\nexport async function PATCH_AttendanceAbsentLeaveAssignment(ID: Number, ): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/absent-leave/assignment/' + ID,\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"attendance-absent-leave-assignment\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Update Assignment?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}"],"names":["root","factory","exports","module","define","amd","self","AttendanceAbsentLeaveAssignmentEdit","constructor","super","startSearchPage","accountType","selectedBranch","assignmentId","assignmentIdEnc","_userLoginInfo","_activeBranchId","_memberCategories","_branches","_statuses","_assignments","_hasSetup","connectedCallback","then","this","activeBranchId","length","user","branchId","setTimeout","getAssignmentId","getAssignment","getBranches","disconnectedCallback","render","expiration_date","expired","pageId","viewType","ASSIGNMENT","member_name","memberInfo","middlename","firstname","surname","organizationName","map","value","id","statusID","branchID","name","status","getDate","fromDate","toDate","memberID","reason","submitForm","date","toLocaleString","year","month","day","firstUpdated","_assignmentId","base64","Number","isNaN","String","ID","_networkResponse","url_params","_get_cookie","url","HTTP","http","method","headers","Authorization","token","error","console","errorHttp","GET_AttendanceAbsentLeaveAssignment","response","success","data","JSON","stringify","__branches","push","new_data","e","preventDefault","formContainer","document","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","body","networkCallRes","_RESPONSE","unknownError","errors","forEach","err","errormsg","res","https_swal_error_format","catch","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","Object","VALUE","message","window","location","reload","PATCH_AttendanceAbsentLeaveAssignment","createRenderRoot","styles","type","Array","Boolean"],"sourceRoot":""}