{"version":3,"file":"../../production_public/assets/v2/prod-test-files/js/attendance/absent-leave/assignment/view.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./node_modules/blocking-elements/dist/blocking-elements.js","webpack://webpackNumbers/./src/addons/functions/date_time/date.ts","webpack://webpackNumbers/./src/addons/functions/date_time/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/group/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/subgroup/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/absent_leave/assignment/approvals.ts","webpack://webpackNumbers/./src/view/attendance/absent_leave/assignment/view.ts","webpack://webpackNumbers/./src/addons/network/attendance/absent_leave/assignment/delete.ts","webpack://webpackNumbers/./src/addons/network/attendance/absent_leave/assignment/download_pdf.ts","webpack://webpackNumbers/./src/addons/network/attendance/absent_leave/assignment/download_excel.ts","webpack://webpackNumbers/./src/view/attendance/page__id.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","/**\n * @license\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(() => {\n    var _a, _b, _c;\n    /* Symbols for private properties */\n    const _blockingElements = Symbol();\n    const _alreadyInertElements = Symbol();\n    const _topElParents = Symbol();\n    const _siblingsToRestore = Symbol();\n    const _parentMO = Symbol();\n    /* Symbols for private static methods */\n    const _topChanged = Symbol();\n    const _swapInertedSibling = Symbol();\n    const _inertSiblings = Symbol();\n    const _restoreInertedSiblings = Symbol();\n    const _getParents = Symbol();\n    const _getDistributedChildren = Symbol();\n    const _isInertable = Symbol();\n    const _handleMutations = Symbol();\n    class BlockingElementsImpl {\n        constructor() {\n            /**\n             * The blocking elements.\n             */\n            this[_a] = [];\n            /**\n             * Used to keep track of the parents of the top element, from the element\n             * itself up to body. When top changes, the old top might have been removed\n             * from the document, so we need to memoize the inerted parents' siblings\n             * in order to restore their inerteness when top changes.\n             */\n            this[_b] = [];\n            /**\n             * Elements that are already inert before the first blocking element is\n             * pushed.\n             */\n            this[_c] = new Set();\n        }\n        destructor() {\n            // Restore original inertness.\n            this[_restoreInertedSiblings](this[_topElParents]);\n            // Note we don't want to make these properties nullable on the class,\n            // since then we'd need non-null casts in many places. Calling a method on\n            // a BlockingElements instance after calling destructor will result in an\n            // exception.\n            const nullable = this;\n            nullable[_blockingElements] = null;\n            nullable[_topElParents] = null;\n            nullable[_alreadyInertElements] = null;\n        }\n        get top() {\n            const elems = this[_blockingElements];\n            return elems[elems.length - 1] || null;\n        }\n        push(element) {\n            if (!element || element === this.top) {\n                return;\n            }\n            // Remove it from the stack, we'll bring it to the top.\n            this.remove(element);\n            this[_topChanged](element);\n            this[_blockingElements].push(element);\n        }\n        remove(element) {\n            const i = this[_blockingElements].indexOf(element);\n            if (i === -1) {\n                return false;\n            }\n            this[_blockingElements].splice(i, 1);\n            // Top changed only if the removed element was the top element.\n            if (i === this[_blockingElements].length) {\n                this[_topChanged](this.top);\n            }\n            return true;\n        }\n        pop() {\n            const top = this.top;\n            top && this.remove(top);\n            return top;\n        }\n        has(element) {\n            return this[_blockingElements].indexOf(element) !== -1;\n        }\n        /**\n         * Sets `inert` to all document elements except the new top element, its\n         * parents, and its distributed content.\n         */\n        [(_a = _blockingElements, _b = _topElParents, _c = _alreadyInertElements, _topChanged)](newTop) {\n            const toKeepInert = this[_alreadyInertElements];\n            const oldParents = this[_topElParents];\n            // No new top, reset old top if any.\n            if (!newTop) {\n                this[_restoreInertedSiblings](oldParents);\n                toKeepInert.clear();\n                this[_topElParents] = [];\n                return;\n            }\n            const newParents = this[_getParents](newTop);\n            // New top is not contained in the main document!\n            if (newParents[newParents.length - 1].parentNode !== document.body) {\n                throw Error('Non-connected element cannot be a blocking element');\n            }\n            // Cast here because we know we'll call _inertSiblings on newParents\n            // below.\n            this[_topElParents] = newParents;\n            const toSkip = this[_getDistributedChildren](newTop);\n            // No previous top element.\n            if (!oldParents.length) {\n                this[_inertSiblings](newParents, toSkip, toKeepInert);\n                return;\n            }\n            let i = oldParents.length - 1;\n            let j = newParents.length - 1;\n            // Find common parent. Index 0 is the element itself (so stop before it).\n            while (i > 0 && j > 0 && oldParents[i] === newParents[j]) {\n                i--;\n                j--;\n            }\n            // If up the parents tree there are 2 elements that are siblings, swap\n            // the inerted sibling.\n            if (oldParents[i] !== newParents[j]) {\n                this[_swapInertedSibling](oldParents[i], newParents[j]);\n            }\n            // Restore old parents siblings inertness.\n            i > 0 && this[_restoreInertedSiblings](oldParents.slice(0, i));\n            // Make new parents siblings inert.\n            j > 0 && this[_inertSiblings](newParents.slice(0, j), toSkip, null);\n        }\n        /**\n         * Swaps inertness between two sibling elements.\n         * Sets the property `inert` over the attribute since the inert spec\n         * doesn't specify if it should be reflected.\n         * https://html.spec.whatwg.org/multipage/interaction.html#inert\n         */\n        [_swapInertedSibling](oldInert, newInert) {\n            const siblingsToRestore = oldInert[_siblingsToRestore];\n            // oldInert is not contained in siblings to restore, so we have to check\n            // if it's inertable and if already inert.\n            if (this[_isInertable](oldInert) && !oldInert.inert) {\n                oldInert.inert = true;\n                siblingsToRestore.add(oldInert);\n            }\n            // If newInert was already between the siblings to restore, it means it is\n            // inertable and must be restored.\n            if (siblingsToRestore.has(newInert)) {\n                newInert.inert = false;\n                siblingsToRestore.delete(newInert);\n            }\n            newInert[_parentMO] = oldInert[_parentMO];\n            newInert[_siblingsToRestore] = siblingsToRestore;\n            oldInert[_parentMO] = undefined;\n            oldInert[_siblingsToRestore] = undefined;\n        }\n        /**\n         * Restores original inertness to the siblings of the elements.\n         * Sets the property `inert` over the attribute since the inert spec\n         * doesn't specify if it should be reflected.\n         * https://html.spec.whatwg.org/multipage/interaction.html#inert\n         */\n        [_restoreInertedSiblings](elements) {\n            for (const element of elements) {\n                const mo = element[_parentMO];\n                mo.disconnect();\n                element[_parentMO] = undefined;\n                const siblings = element[_siblingsToRestore];\n                for (const sibling of siblings) {\n                    sibling.inert = false;\n                }\n                element[_siblingsToRestore] = undefined;\n            }\n        }\n        /**\n         * Inerts the siblings of the elements except the elements to skip. Stores\n         * the inerted siblings into the element's symbol `_siblingsToRestore`.\n         * Pass `toKeepInert` to collect the already inert elements.\n         * Sets the property `inert` over the attribute since the inert spec\n         * doesn't specify if it should be reflected.\n         * https://html.spec.whatwg.org/multipage/interaction.html#inert\n         */\n        [_inertSiblings](elements, toSkip, toKeepInert) {\n            for (const element of elements) {\n                // Assume element is not a Document, so it must have a parentNode.\n                const parent = element.parentNode;\n                const children = parent.children;\n                const inertedSiblings = new Set();\n                for (let j = 0; j < children.length; j++) {\n                    const sibling = children[j];\n                    // Skip the input element, if not inertable or to be skipped.\n                    if (sibling === element || !this[_isInertable](sibling) ||\n                        (toSkip && toSkip.has(sibling))) {\n                        continue;\n                    }\n                    // Should be collected since already inerted.\n                    if (toKeepInert && sibling.inert) {\n                        toKeepInert.add(sibling);\n                    }\n                    else {\n                        sibling.inert = true;\n                        inertedSiblings.add(sibling);\n                    }\n                }\n                // Store the siblings that were inerted.\n                element[_siblingsToRestore] = inertedSiblings;\n                // Observe only immediate children mutations on the parent.\n                const mo = new MutationObserver(this[_handleMutations].bind(this));\n                element[_parentMO] = mo;\n                let parentToObserve = parent;\n                // If we're using the ShadyDOM polyfill, then our parent could be a\n                // shady root, which is an object that acts like a ShadowRoot, but isn't\n                // actually a node in the real DOM. Observe the real DOM parent instead.\n                const maybeShadyRoot = parentToObserve;\n                if (maybeShadyRoot.__shady && maybeShadyRoot.host) {\n                    parentToObserve = maybeShadyRoot.host;\n                }\n                mo.observe(parentToObserve, {\n                    childList: true,\n                });\n            }\n        }\n        /**\n         * Handles newly added/removed nodes by toggling their inertness.\n         * It also checks if the current top Blocking Element has been removed,\n         * notifying and removing it.\n         */\n        [_handleMutations](mutations) {\n            const parents = this[_topElParents];\n            const toKeepInert = this[_alreadyInertElements];\n            for (const mutation of mutations) {\n                // If the target is a shadowRoot, get its host as we skip shadowRoots when\n                // computing _topElParents.\n                const target = mutation.target.host || mutation.target;\n                const idx = target === document.body ?\n                    parents.length :\n                    parents.indexOf(target);\n                const inertedChild = parents[idx - 1];\n                const inertedSiblings = inertedChild[_siblingsToRestore];\n                // To restore.\n                for (let i = 0; i < mutation.removedNodes.length; i++) {\n                    const sibling = mutation.removedNodes[i];\n                    if (sibling === inertedChild) {\n                        console.info('Detected removal of the top Blocking Element.');\n                        this.pop();\n                        return;\n                    }\n                    if (inertedSiblings.has(sibling)) {\n                        sibling.inert = false;\n                        inertedSiblings.delete(sibling);\n                    }\n                }\n                // To inert.\n                for (let i = 0; i < mutation.addedNodes.length; i++) {\n                    const sibling = mutation.addedNodes[i];\n                    if (!this[_isInertable](sibling)) {\n                        continue;\n                    }\n                    if (toKeepInert && sibling.inert) {\n                        toKeepInert.add(sibling);\n                    }\n                    else {\n                        sibling.inert = true;\n                        inertedSiblings.add(sibling);\n                    }\n                }\n            }\n        }\n        /**\n         * Returns if the element is inertable.\n         */\n        [_isInertable](element) {\n            return false === /^(style|template|script)$/.test(element.localName);\n        }\n        /**\n         * Returns the list of newParents of an element, starting from element\n         * (included) up to `document.body` (excluded).\n         */\n        [_getParents](element) {\n            const parents = [];\n            let current = element;\n            // Stop to body.\n            while (current && current !== document.body) {\n                // Skip shadow roots.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    parents.push(current);\n                }\n                // ShadowDom v1\n                if (current.assignedSlot) {\n                    // Collect slots from deepest slot to top.\n                    while (current = current.assignedSlot) {\n                        parents.push(current);\n                    }\n                    // Continue the search on the top slot.\n                    current = parents.pop();\n                    continue;\n                }\n                current = current.parentNode ||\n                    current.host;\n            }\n            return parents;\n        }\n        /**\n         * Returns the distributed children of the element's shadow root.\n         * Returns null if the element doesn't have a shadow root.\n         */\n        [_getDistributedChildren](element) {\n            const shadowRoot = element.shadowRoot;\n            if (!shadowRoot) {\n                return null;\n            }\n            const result = new Set();\n            let i;\n            let j;\n            let nodes;\n            const slots = shadowRoot.querySelectorAll('slot');\n            if (slots.length && slots[0].assignedNodes) {\n                for (i = 0; i < slots.length; i++) {\n                    nodes = slots[i].assignedNodes({\n                        flatten: true,\n                    });\n                    for (j = 0; j < nodes.length; j++) {\n                        if (nodes[j].nodeType === Node.ELEMENT_NODE) {\n                            result.add(nodes[j]);\n                        }\n                    }\n                }\n                // No need to search for <content>.\n            }\n            return result;\n        }\n    }\n    document.$blockingElements =\n        new BlockingElementsImpl();\n})();\n//# sourceMappingURL=blocking-elements.js.map","export const getDate = (date: Date, options?: Intl.DateTimeFormatOptions) => {\r\n  const __date = new Date(),\r\n    _DateString = `${date}`;\r\n  \r\n  let _date = new Date(_DateString);\r\n  return _date.toLocaleDateString('en-US', options);\r\n}","export const dateTime = (date: string = \"\") => {\r\n  // new Date(date)\r\n  let now = new Date(),\r\n    year = now.getFullYear(),\r\n    month = (now.getMonth() + 1),\r\n    day = now.getDate(),\r\n    hour = now.getHours(),\r\n    minutes = now.getMinutes(),\r\n    seconds = now.getSeconds(),\r\n    getDate = year + '-' + month + '-' + day,\r\n    getTime = hour + \":\" + minutes + \":\" + seconds,\r\n    newDateTime = new Date(year, month, day, hour, minutes, seconds),\r\n    dateTime = getDate + ' ' + getTime,\r\n    code = year + month + day + hour + minutes + seconds;\r\n  return { dateTime: newDateTime, __string__: dateTime, __code__: code, };\r\n}\r\n\r\nexport const getDateTime = (date: Date, options?: Intl.DateTimeFormatOptions) => {\r\n  const __date = new Date(),\r\n    _DateString = `${date}`;\r\n  \r\n  let _date = new Date(_DateString);\r\n  return _date.toLocaleString('en-US', options);\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsGroups<Type>(type: Number = null, url_params: string = \"\") {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/group'\r\n    + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsSubGroups<Type>(type: Number = null, url_params: string = \"\") {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/sub-group'\r\n  + (type === null ? \"\" : \"/\" + type) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_AttendanceAbsentLeaveAssignmentApproval(assignmentIds: Array<Number>, approval: 0 | 1 | 2): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const states: Array<Number> = Array(assignmentIds.length).fill(approval);\r\n  let alertTitle: string = \"Unassign\";\r\n  if (approval === 1) {\r\n    alertTitle = \"Approve\";\r\n  } else if (approval === 2) {\r\n    alertTitle = \"Cancel\";\r\n  }\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/absent-leave/assignment/bulk-approvals',\r\n    formData = {\"assignmentIds\": assignmentIds, \"states\": states};\r\n\r\n  return Swal.fire({\r\n    title: `${alertTitle} Assignment(s)?`,\r\n    // text: \"Education status may already be assigned. Proceed with care!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"POST\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"post\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import { getDate } from '@@addons/functions/date_time/date';\r\nimport '@@assets/styles/views/attendance/clocking/main.scss';\r\nimport { LitElement, html, css, TemplateResult, nothing } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport { base64Decode, base64Encode } from '@@addons/functions/base64';\r\nimport { GroupingsMemberCategories_I } from '@@addons/interfaces/members/groupings/member_categories';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-textfield';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport '@@addons/widgets/profile_photo';\r\nimport '@material/mwc-dialog';\r\nimport '@material/mwc-circular-progress';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { urlQueryParams, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport { ClientBranches_I, ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { FilterFieldBox } from '@@addons/classes/filter_field_box';\r\nimport { Button } from '@material/mwc-button';\r\nimport { UserLoginInfo_I } from '@@addons/interfaces/network_calls/login';\r\nimport { GET_ClientBranches } from '@@addons/network/clients/branches';\r\nimport { DELETE_GroupingsGroup } from '@@addons/network/members/groupings/group/group/delete';\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport { AttendanceAbsentLeaveAssignmentModel, Convert as aalamConvert } from \"@@addons/interfaces/attendance/absent_leave/assignment\";\r\nimport { getDateTime } from '@@addons/functions/date_time';\r\nimport { GroupingsGroup_I } from '@@addons/interfaces/members/groupings/group';\r\nimport { GET_MemberGroupingsGroups } from '@@addons/network/members/groupings/group';\r\nimport { GroupingsSubGroup_I } from '@@addons/interfaces/members/groupings/subgroup';\r\nimport { GET_MemberGroupingsSubGroups } from '@@addons/network/members/groupings/subgroup';\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport { AppSettingsExtraUserAccess, PageButtonUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from '@@views/attendance/page__id';\r\nimport { DELETE_AttendanceAbsentLeaveAssignment } from '@@addons/network/attendance/absent_leave/assignment/delete';\r\nimport { POST_AttendanceAbsentLeaveAssignmentApproval } from '@@addons/network/attendance/absent_leave/assignment/approvals';\r\nimport { GET_AttendanceAbsentLeaveAssignmentPDFDownload } from '@@addons/network/attendance/absent_leave/assignment/download_pdf';\r\nimport { GET_AttendanceAbsentLeaveAssignmentEXCELDownload } from '@@addons/network/attendance/absent_leave/assignment/download_excel';\r\n\r\n\r\nlet _branchGroups: { [branch: string]: GroupingsGroup_I[] } = {};\r\nlet _branchSubGroups: { [branch: string]: GroupingsSubGroup_I[]} = {};\r\n@customElement(\"attendance-absent-leave-assignment-view\")\r\nexport class AttendanceAbsentLeaveAssignmentView extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('[filter-section-context=\"btn\"]')\r\n  private filterSectionContextBtn: Button;\r\n\r\n  @query('[filter-section-context=\"container\"]')\r\n  private filterSectionContextContainer: Element;\r\n\r\n  @query('[make-general-posts=\"submit_filter_form\"]')\r\n  private filterSectionContextForm: HTMLFormElement;\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Number })\r\n  private selectedBranch: number = 1;\r\n\r\n  @property({ type: Number })\r\n  private _memberType?: number = 1;\r\n\r\n  @property({ type: Array })\r\n  private _branches: ClientBranches_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _groups: GroupingsGroup_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _subgroups: GroupingsSubGroup_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _userLoginInfo?: UserLoginInfo_I[] = null;\r\n\r\n  @property({ type: Number })\r\n  private selectedGroup: number = 0;\r\n\r\n  // @property({ type: String })\r\n  // private datatablePathUrl: string = \"attendance/absent-leave/assignment\";\r\n  @property({ type: String })\r\n  private datatablePathUrl: string = \"attendance/absent-leave/assignment/members\";\r\n\r\n  @property({ type: Boolean })\r\n  private downloadingFilePdf: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private downloadingFileExcel: boolean = false;\r\n\r\n  private filterBox: FilterFieldBox;\r\n\r\n  @property({ type: Boolean })\r\n  private filterBoxStarted?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private _pageButtonAccess: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n    this._userLoginInfo = [getUserLoginInfoCookie()];\r\n    \r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n\r\n    await this.getGroups();\r\n    await this.getSubGroups();\r\n    await this.getBranches();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      this._pageButtonAccess = PageButtonUserAccess(PAGE__IDS.absent_leave_assignment);\r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.absent_leave_assignment, viewType: \"View\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    return html`\r\n      <div class=\"shadow bg-white p-2\">\r\n        <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n        <span class=\"text-yellow-500\">\r\n          <span class=\"text-green-500\">\r\n            <span class=\"text-red-500\"></span>\r\n          </span>\r\n        </span>\r\n        <div class=\"block my-1\">\r\n          <mwc-button icon=\"open_with\" label=\"Filters\" raised class=\"primary mt-1\"\r\n            filter-section-context=\"btn\" @click=\"${this.filterBox.toggleFilterFields}\">\r\n          </mwc-button>\r\n        </div>\r\n        <div class=\"block my-1\">\r\n          ${this.filterForm}<br />\r\n        </div>\r\n        <div class=\"block my-1\">\r\n          ${this.downloadBtns}\r\n          ${this.table}\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private renderColOne(data: any, type: any, assignmentInfo: AttendanceAbsentLeaveAssignmentModel) {\r\n    const AssignmentInfo = aalamConvert.toAttendanceAbsentLeaveAssignmentModel(JSON.stringify(assignmentInfo)),\r\n      MEMBER_ID = base64Encode(String(AssignmentInfo.memberID), true),\r\n      ASSIGNMENT_ID = AssignmentInfo.id;;\r\n    \r\n    if (AssignmentInfo.memberInfo.accountType === 1) {\r\n      return `\r\n        <div class=\"flex items-center whitespace-normal mb-0\">\r\n          <input id=\"assignment_info\" name=\"assignment_info\" type=\"checkbox\" value=\"${ASSIGNMENT_ID}\"\r\n            class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n          <div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n            <div class=\"flex m-1 justify-evenly\">\r\n              <user-profile-photo class=\"w-32 h-32 mr-1\" rounded 'click-to-open'=\"\"\r\n                click-to-open=\"${this.memberProfileBaseUrl}${MEMBER_ID}\" type=\"member\"\r\n                url=\"${AssignmentInfo.memberInfo.profilePicture}\" size=\"32\"></user-profile-photo>\r\n            </div>\r\n            <div class=\"block m-1\">\r\n              <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n                <b>Name</b>: ${AssignmentInfo.memberInfo.firstname} ${AssignmentInfo.memberInfo.middlename} ${AssignmentInfo.memberInfo.surname}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>`;\r\n    } else {\r\n      return `\r\n        <div class=\"flex items-center whitespace-normal mb-0\">\r\n          <input id=\"assignment_info\" name=\"assignment_info\" type=\"checkbox\" value=\"${ASSIGNMENT_ID}\"\r\n            class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n          <div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n            <div class=\"flex m-1 justify-evenly\">\r\n              <user-profile-photo class=\"w-32 h-32 mr-1\" rounded type=\"member\"\r\n                url=\"${AssignmentInfo.memberInfo.logo}\" size=\"32\"></user-profile-photo>\r\n            </div>\r\n            <div class=\"block m-1\">\r\n              <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n                <b>Name</b>: ${AssignmentInfo.memberInfo.organizationName}\r\n              </span>\r\n            </div>\r\n          </div>\r\n      </div>`;\r\n    }\r\n  }\r\n\r\n  private renderColThree(data: any, type: any, assignmentInfo: AttendanceAbsentLeaveAssignmentModel) {\r\n    const AssignmentInfo = aalamConvert.toAttendanceAbsentLeaveAssignmentModel(JSON.stringify(assignmentInfo)),\r\n      ASSIGNMENT_ID = AssignmentInfo.id;\r\n\r\n      let stateTextColor: string = ``;\r\n  \r\n      if (assignmentInfo.state.id === 0) {\r\n        stateTextColor = `text-yellow-500`;\r\n      } else if (assignmentInfo.state.id === 1) {\r\n        stateTextColor = `text-green-500`;\r\n      } else {\r\n        stateTextColor = `text-red-500`;\r\n      }\r\n    \r\n    return `<div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n      <div class=\"block m-1 shadow p-1 bg-white rounded text-dark\">\r\n        <h6 class=\"whitespace-nowrap text-base font-bold mr-1\">Leave Type</h6>\r\n        <p class=\"text-sm ml-1\">On ${AssignmentInfo.statusID.status} for ${this.get_days(AssignmentInfo.totalDays)}</p>\r\n      </div>\r\n      <div class=\"block m-1 shadow p-1 bg-white rounded ${stateTextColor}\">\r\n        <h6 class=\"whitespace-nowrap text-base font-bold mr-1\">State</h6>\r\n        <p class=\"text-sm ml-1\">${AssignmentInfo.state.name}</p>\r\n      </div>\r\n      <div class=\"block m-1 shadow p-1 bg-white rounded text-dark\">\r\n        <h6 class=\"whitespace-nowrap text-base font-bold mr-1\">Period:</h6>\r\n        <p class=\"text-sm ml-1\">From: ${getDate(AssignmentInfo.fromDate)} To: ${getDate(AssignmentInfo.toDate)}</p>\r\n      </div>\r\n      <div class=\"whitespace-nowrap my-1\">\r\n        ${this.view_assignment_details(AssignmentInfo)}\r\n        <mwc-button class=\"w-full button info\" outlined open-dialog-btn=\"assignment-details-${ASSIGNMENT_ID}\">\r\n          <mwc-icon class=\"mr-1\">info</mwc-icon> Details\r\n        </mwc-button>\r\n      </div>\r\n      ${AssignmentInfo.reason === null? \"\": `<div class=\"whitespace-nowrap my-1\">\r\n        ${this.view_assignment_reason(AssignmentInfo)}\r\n        <mwc-button class=\"w-full button warning\" outlined open-dialog-btn=\"assignment-reason-${ASSIGNMENT_ID}\">\r\n          <mwc-icon class=\"mr-1\">note</mwc-icon> Reason\r\n        </mwc-button>\r\n      </div>` }\r\n    </div>`;\r\n  }\r\n\r\n  private renderColTwo(data: any, type: any, assignmentInfo: AttendanceAbsentLeaveAssignmentModel) {\r\n    const AssignmentInfo = aalamConvert.toAttendanceAbsentLeaveAssignmentModel(JSON.stringify(assignmentInfo))\r\n    // console.log({statusInfo});\r\n    const ASSIGNMENT_ID = AssignmentInfo.id,\r\n      ASSIGNMENT_CODE = base64Encode(String(ASSIGNMENT_ID), true);\r\n    \r\n    // console.log({ASSIGNMENT_ID, ASSIGNMENT_CODE});   \r\n    \r\n    const delete_button = this._pageButtonAccess ? `<mwc-button class=\"w-full button danger\" outlined delete-this-item=\"${ASSIGNMENT_ID}\" onclick=\"${(e: any)=>console.log({e})}\">\r\n      <mwc-icon class=\"mr-1\">delete_forever</mwc-icon> Delete\r\n    </mwc-button>`: '';\r\n    const approve = `<mwc-button class=\"w-full button success my-1\" outlined approve-this-item=\"${ASSIGNMENT_ID}\" onclick=\"${(e: any)=>console.log({e})}\">\r\n      <mwc-icon class=\"mr-1\">check_circle_outline</mwc-icon> Approve\r\n    </mwc-button>`;\r\n    const cancel = `<mwc-button class=\"w-full button warning my-1\" outlined cancel-this-item=\"${ASSIGNMENT_ID}\" onclick=\"${(e: any)=>console.log({e})}\">\r\n      <mwc-icon class=\"mr-1\">cancel</mwc-icon> Cancel\r\n    </mwc-button>`;\r\n\r\n    let stateBtn: string = ``;\r\n\r\n    if (assignmentInfo.state.id === 0) {\r\n      stateBtn = `${approve} ${cancel}`;\r\n    } else if (assignmentInfo.state.id === 1) {\r\n      stateBtn = `${cancel}`;\r\n    } else {\r\n      stateBtn = `${approve}`;\r\n    }\r\n        \r\n    return `\r\n      <div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n        ${stateBtn}\r\n        ${delete_button}\r\n        <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"w-full button warning mr-2 my-1\" href=\"${CONSTANTS.URLS.PDB_CLIENT}absent-leave/edit-al-assignment?view-assignment=${ASSIGNMENT_CODE}\"\r\n          label=\"Update\">\r\n        </link-button>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n    filterNameId_branchId = \"branchId\",\r\n    filterNameId_group = \"groupId\",\r\n    filterNameId_subGroup = \"subgroupId\",\r\n    filterNameId_search = \"search_field\",\r\n    filterNameId_reason = \"reason\",\r\n    filterNameId_fromDate = \"fromDate\",\r\n    filterNameId_toDate = \"toDate\",\r\n    filterNameId_state = \"state\";\r\n\r\n    let newObject:any = {};\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if ((key === filterNameId_branchId) || (key === filterNameId_group)\r\n        || (key === filterNameId_subGroup) || (key === filterNameId_search)\r\n        || (key === filterNameId_reason) || (key === filterNameId_fromDate)\r\n        || (key === filterNameId_toDate) || (key === filterNameId_state)) {\r\n        // console.log({value, });\r\n        \r\n        newObject[key] = value;\r\n      }\r\n    } \r\n\r\n    if (!(filterNameId_branchId in newObject)) {\r\n      let userBranch = 0;\r\n      if (this._userLoginInfo !== null) {\r\n        if (this._userLoginInfo.length > 0) {\r\n          userBranch = this._userLoginInfo[0].user.branchId;\r\n        }\r\n      }\r\n      newObject[filterNameId_branchId] = userBranch;\r\n    }\r\n\r\n    if (!(filterNameId_group in newObject)) {\r\n      if (this._groups.length > 0) {\r\n        newObject[filterNameId_group] = this._groups[0].id;\r\n      }\r\n    } else {\r\n      if (newObject[filterNameId_group].length < 1 || newObject[filterNameId_group] === 0) {\r\n        delete newObject[filterNameId_group];\r\n      }\r\n    }\r\n\r\n    if (!(filterNameId_subGroup in newObject)) {\r\n      if (this._subgroups.length > 0) {\r\n        newObject[filterNameId_subGroup] = this._subgroups[0].id;\r\n      }\r\n    } else {\r\n      if (newObject[filterNameId_subGroup].length < 1 || newObject[filterNameId_subGroup] === 0) {\r\n        delete newObject[filterNameId_subGroup];\r\n      }\r\n    }\r\n\r\n    if (filterNameId_search in newObject) {\r\n      if (newObject[filterNameId_search].length < 1 || newObject[filterNameId_search] === \"\") {\r\n        delete newObject[filterNameId_search];\r\n      }\r\n    }\r\n\r\n    if (filterNameId_reason in newObject) {\r\n      if (newObject[filterNameId_reason].length < 1 || newObject[filterNameId_reason] === \"\") {\r\n        delete newObject[filterNameId_reason];\r\n      }\r\n    }\r\n\r\n    if (filterNameId_fromDate in newObject && filterNameId_toDate in newObject) {\r\n      if (newObject[filterNameId_fromDate] === undefined || newObject[filterNameId_fromDate] === \"\") {\r\n        delete newObject[filterNameId_fromDate];\r\n        delete newObject[filterNameId_toDate];\r\n      }\r\n      if (newObject[filterNameId_toDate] === undefined || newObject[filterNameId_toDate] === \"\") {\r\n        delete newObject[filterNameId_fromDate];\r\n        delete newObject[filterNameId_toDate];\r\n      }\r\n    }\r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin;\r\n  }\r\n\r\n  private get filterForm() {\r\n    let userBranch = 0;\r\n    if (this._userLoginInfo !== null) {\r\n      if (this._userLoginInfo.length > 0) {\r\n        userBranch = this._userLoginInfo[0].user.branchId;\r\n      }\r\n    }\r\n\r\n    let returnHtml = html``;\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_branchId = \"branchId\",\r\n      filterNameId_group = \"groupId\",\r\n      filterNameId_subGroup = \"subgroupId\",\r\n      filterNameId_search = \"search_field\",\r\n      filterNameId_reason = \"reason\",\r\n      filterNameId_fromDate = \"fromDate\",\r\n      filterNameId_toDate = \"toDate\",\r\n      filterNameId_state = \"state\";\r\n\r\n    let filterNameId_branchIdVal: number = userBranch,\r\n      filterNameId_groupVal: number = null,\r\n      filterNameId_subGroupVal: number = null,\r\n      filterNameId_searchVal: string = null,\r\n      filterNameId_reasonVal: string = null,\r\n      filterNameId_fromDateVal: Date = null,\r\n      filterNameId_toDateVal: Date = null,\r\n      filterNameId_stateVal: number = null;\r\n\r\n    for (const key in _urlQueryParams) {\r\n        let value = String(_urlQueryParams[key]);\r\n        value = value === \"\" ? null : value;\r\n        if (key === filterNameId_branchId) {\r\n          filterNameId_branchIdVal = Number(value);\r\n        }\r\n        if (key === filterNameId_group) {\r\n          filterNameId_groupVal = Number(value);\r\n        }\r\n        if (key === filterNameId_subGroup) {\r\n          filterNameId_subGroupVal = Number(value);\r\n        }\r\n        if (key === filterNameId_state) {\r\n          filterNameId_stateVal = Number(value);\r\n        }\r\n        if (key === filterNameId_search) {\r\n          filterNameId_searchVal = String(value);\r\n          if (filterNameId_searchVal === \"null\") {\r\n            filterNameId_searchVal = \"\";\r\n          }\r\n        }\r\n        if (key === filterNameId_reason) {\r\n          filterNameId_reasonVal = String(value);\r\n          if (filterNameId_reasonVal === \"null\") {\r\n            filterNameId_reasonVal = \"\";\r\n          }\r\n        }\r\n        if (key === filterNameId_fromDate) {\r\n          // console.log({\"filterNameId_fromDate-value\": value});\r\n          \r\n          if (value !== null) filterNameId_fromDateVal = new Date(value);\r\n        }\r\n        if (key === filterNameId_toDate) {\r\n          // console.log({\"filterNameId_toDate-value\": value});\r\n          \r\n          if (value !== null) filterNameId_toDateVal = new Date(value);\r\n        }\r\n    }\r\n    \r\n    const branchField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Branch</h4>\r\n          <mwc-select class=\"w-full\" setSelectedBranchId label=\"Select Branch\"\r\n            name=\"${filterNameId_branchId}\" id=\"${filterNameId_branchId}\"\r\n            outlined required @change=\"${this.branchChange}\">\r\n            ${userBranch === 1 ? html`\r\n              <mwc-list-item value=\"0\">Select Branch</mwc-list-item>\r\n              ${this._branches.map((value) => {\r\n                if (filterNameId_branchIdVal === value.id) {\r\n                  return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                } else {\r\n                  return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n                }\r\n              })}\r\n            `: html`\r\n              ${this._branches.map((value) => {\r\n                if (value.id === userBranch) {\r\n                  return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n                }\r\n              })}\r\n            `}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n\r\n    const groupField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Group</h4>\r\n          <mwc-select class=\"w-full\" setSelectedGroupId label=\"Select Group\"\r\n            name=\"${filterNameId_group}\" id=\"${filterNameId_group}\"\r\n            outlined required @change=\"${this.groupChange}\" value=\"${filterNameId_groupVal}\">\r\n            <mwc-list-item value=\"\">Select Group</mwc-list-item>\r\n            ${this._groups.map((value) => {\r\n              if (filterNameId_groupVal === value.id) {\r\n                return html`<mwc-list-item value=\"${value.id}\" selected>${value.group}</mwc-list-item>`;\r\n              } else {\r\n                return html`<mwc-list-item value=\"${value.id}\">${value.group}</mwc-list-item>`;\r\n              }\r\n            })}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n\r\n    const subGroupField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select Sub-Group</h4>\r\n          <mwc-select class=\"w-full\" label=\"Select Sub-Group\"\r\n            name=\"${filterNameId_subGroup}\" id=\"${filterNameId_subGroup}\"\r\n            outlined required value=\"${filterNameId_subGroupVal}\">\r\n            <mwc-list-item value=\"\">Select Sub-Group</mwc-list-item>\r\n            ${this._subgroups.map((value) => {\r\n              if (filterNameId_subGroupVal === value.id) {\r\n                return html`<mwc-list-item value=\"${value.id}\" selected>${value.subgroup}</mwc-list-item>`;\r\n              } else {\r\n                return html`<mwc-list-item value=\"${value.id}\">${value.subgroup}</mwc-list-item>`;\r\n              }\r\n            })}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const states = [\r\n      {id: 0, name: \"Unpproved\"},\r\n      {id: 1, name: \"Approved\"},\r\n      {id: 2, name: \"Canceled\"},\r\n    ]\r\n\r\n    const stateField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Select State</h4>\r\n          <mwc-select class=\"w-full\" label=\"Select State\"\r\n            name=\"${filterNameId_state}\" id=\"${filterNameId_state}\"\r\n            outlined required value=\"${filterNameId_stateVal}\">\r\n            <mwc-list-item value=\"null\">Select State</mwc-list-item>\r\n            ${states.map((value) => {\r\n              if (filterNameId_stateVal === value.id) {\r\n                return html`<mwc-list-item value=\"${value.id}\" selected>${value.name}</mwc-list-item>`;\r\n              } else {\r\n                return html`<mwc-list-item value=\"${value.id}\">${value.name}</mwc-list-item>`;\r\n              }\r\n            })}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n\r\n    const searchField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Search <span class=\"text-yellow-400 uppercase\">[name/ ref-id/ id/ phone/ email]</span></h4>\r\n          <mwc-textfield name=\"${filterNameId_search}\" id=\"${filterNameId_search}\" label=\"Enter Search Term\"\r\n            outlined required value=\"${filterNameId_searchVal === null? \"\": filterNameId_searchVal}\">\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n\r\n    const searchReasonField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">\r\n          <h4 class=\"font-semibold my-2\">Search <span class=\"text-yellow-400 uppercase\">[Reason]</span></h4>\r\n          <mwc-textfield name=\"${filterNameId_reason}\" id=\"${filterNameId_reason}\" label=\"Enter Search Reason\"\r\n            outlined required value=\"${filterNameId_reasonVal === null? \"\": filterNameId_reasonVal}\">\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n\r\n    const filterByDateFields = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-input-container !block\">\r\n              <h4 class=\"font-semibold my-2\">From <span class=\"text-yellow-500 uppercase\">Pick Date</span></h4>\r\n              <mwc-textfield type=\"date\" name=\"${filterNameId_fromDate}\" id=\"${filterNameId_fromDate}\"\r\n                value=\"${this.getDate(filterNameId_fromDateVal)}\" outlined required></mwc-textfield>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <div class=\"form-input-container !block\">\r\n              <h4 class=\"font-semibold my-2\">To <span class=\"text-yellow-500 uppercase\">Pick Date</span></h4>\r\n              <mwc-textfield type=\"date\" name=\"${filterNameId_toDate}\" id=\"${filterNameId_toDate}\"\r\n                value=\"${this.getDate(filterNameId_toDateVal)}\" outlined required></mwc-textfield>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n      returnHtml = html`<form method=\"get\" class=\"form\" make-general-posts=\"submit_filter_form\" filter-section-context=\"container\" hidden>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              ${branchField} ${groupField} ${subGroupField} ${searchField} ${searchReasonField} ${stateField} ${filterByDateFields}\r\n              <div class=\"col-xl-12 col-md-10\">\r\n                <div class=\"form-input-container mt-1\">\r\n                  <mwc-button label=\"Clear\" @click=\"${this.filterBox.clear_filter}\"></mwc-button>\r\n                  <mwc-button label=\"Filter\" raised @click=\"${this.filterBox.submit}\"></mwc-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>`\r\n    return returnHtml;\r\n  }\r\n\r\n  async branchChange(e: Event) {\r\n    // @ts-ignore\r\n    const branchId = Number.isNaN(e.currentTarget.value) ? 0 : Number(e.currentTarget.value);\r\n    this.selectedBranch = branchId;\r\n    // console.log({ \"this.selectedBranch\": this.selectedBranch });\r\n    await this.getGroups(\"?branchId=\" + branchId, branchId);\r\n  }\r\n\r\n  async groupChange(e: Event) {\r\n    // @ts-ignore\r\n    const groupId = Number.isNaN(e.currentTarget.value)? 0: Number(e.currentTarget.value);\r\n    // console.log({ \"this.selectedGroup\": this.selectedGroup });\r\n    await this.getSubGroups(\r\n      \"?groupId=\" + groupId + \"&branchId=\" + this.selectedBranch,\r\n      groupId\r\n    );\r\n\r\n  }\r\n\r\n  private get table_header() {\r\n    return html`\r\n      <div class=\"flex flex-col p-2 mb-2 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 grid-flow-row gap-4 pb-5\">\r\n        <div\r\n          class=\"rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2\">\r\n          <label class=\"flex justify-between items-center\">\r\n            <b>CHECK ALL: </b>\r\n            <input id=\"assignment_info_all\" name=\"assignment_info_all\" type=\"checkbox\"\r\n              class=\"rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n              @change=\"${this.check_all_assignment}\" />\r\n          </label>\r\n        </div>\r\n        <div\r\n          class=\"rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2\">\r\n          <mwc-button class=\"success\" raised assignment_info_all=\"approve\" @click=\"${this.approveMultipleMemberAction}\">\r\n            Approve All Selected</mwc-button>\r\n        </div>\r\n        <div\r\n          class=\"rounded-lg border border-gray-200 bg-white shadow-md dark:border-gray-700 dark:bg-gray-800 flex-col p-2 border-b-2 mb-2\">\r\n          <mwc-button class=\"danger\" raised assignment_info_all=\"cancel\"\r\n            @click=\"${this.cancelMultipleMemberAction}\">Cancel All Selected</mwc-button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member', },\r\n      { title: 'Info', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member', },\r\n      { title: 'Info', },\r\n      { title: 'Action', },\r\n    ];\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"\" + this.datatablePathUrl + \"?datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n    \r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      ${this.table_header}\r\n      <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n        .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    setInterval(() => {\r\n      if (this.filterSectionContextContainer !== null) {\r\n        if (!this.filterBoxStarted) {\r\n          // let branchId = 0;\r\n          // if (this._activeBranchId !== null) {\r\n          //   branchId = this._activeBranchId[0].id;\r\n          // }\r\n          this.filterBox = new FilterFieldBox({\r\n            selectors: {\r\n              container: this.filterSectionContextContainer,\r\n              form: this.filterSectionContextForm,\r\n              filterSectionContextBtn: this.filterSectionContextBtn,\r\n            }, unmutableInputNames: [\r\n              // { name: 'branchId', value: String(branchId) },\r\n            ],\r\n          }); \r\n          this.filterBoxStarted = true;\r\n          this.dialog();\r\n          this.deleteMemberFx();\r\n        }\r\n      }\r\n    });   \r\n  }\r\n\r\n  private get downloadBtns() {\r\n    return html`\r\n      <div class=\"flex mb-4\">\r\n        <div class=\"flex flex-col justify-center items-center mb-4\">\r\n          <mwc-button icon=\"download\" class=\"danger mr-2\" \r\n            label=\"Download Pdf File\" raised @click=\"${this.downloadAssignmentPdf}\">\r\n          </mwc-button> \r\n          ${this.downloadingFilePdf? html`<mwc-circular-progress indeterminate></mwc-circular-progress>`: nothing}\r\n        </div>\r\n        <div class=\"flex flex-col justify-center items-center mb-4\">\r\n          <mwc-button icon=\"download\" class=\"success mr-2\" \r\n            label=\"Download Excel File\" raised @click=\"${this.downloadAssignmentExcel}\">\r\n          </mwc-button> \r\n          ${this.downloadingFileExcel? html`<mwc-circular-progress indeterminate></mwc-circular-progress>`: nothing}\r\n        </div>\r\n      </div>\r\n    `\r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"projects\": this._questionnaireResponses });\r\n    \r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        // @ts-ignore\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'id',\r\n          render: (data: any, type: any, assignmentInfo: any) => __this.renderColOne(data, type, assignmentInfo),\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'memberId',\r\n          render: (data: any, type: any, assignmentInfo: any) => __this.renderColThree(data, type, assignmentInfo),\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'statusId',\r\n          render: (data: any, type: any, assignmentInfo: any) => __this.renderColTwo(data, type, assignmentInfo),\r\n          orderable: true\r\n        },\r\n\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n        __this.deleteMemberFx();\r\n        __this.approveMemberFx();\r\n        __this.cancelMemberFx()\r\n        __this.dialog();\r\n      },\r\n      \"responsive\": false,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        // 'pdf',\r\n        // 'excel',\r\n        // 'copy',\r\n        // 'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  private deleteMemberFx() {\r\n    document.querySelectorAll('[delete-this-item]').forEach((btn) => {\r\n      // console.log({btn})\r\n      btn.addEventListener('click', (e) => {\r\n        // console.log({e})\r\n        // e.preventDefault();\r\n        this.deleteItemFromList(e);\r\n      })\r\n    });\r\n  }\r\n\r\n  private approveMemberFx() {\r\n    document.querySelectorAll('[approve-this-item]').forEach((btn) => {\r\n      // console.log({btn})\r\n      btn.addEventListener('click', (e) => {\r\n        // console.log({e})\r\n        // e.preventDefault();\r\n        this.approveItemFromList(e);\r\n      })\r\n    });\r\n  }\r\n\r\n  private cancelMemberFx() {\r\n    document.querySelectorAll('[cancel-this-item]').forEach((btn) => {\r\n      // console.log({btn})\r\n      btn.addEventListener('click', (e) => {\r\n        // console.log({e})\r\n        // e.preventDefault();\r\n        this.cancelItemFromList(e);\r\n      })\r\n    });\r\n  }\r\n\r\n  private view_assignment_details(assignmentInfo: AttendanceAbsentLeaveAssignmentModel) {    \r\n    let __call__ = assignmentInfo.memberAdditionalInfo?.phone,\r\n      __whatsapp__ = assignmentInfo.memberAdditionalInfo?.whatsapp;\r\n\r\n    return `\r\n      <mwc-dialog open-this-dialog=\"assignment-details-${assignmentInfo.id}\" heading=\"Assignment Details\">\r\n        <div class=\"flex flex-col m-1 justify-evenly whitespace-normal\">\r\n          <div class=\"flex flex-col m-1 justify-evenly\">\r\n            <div class=\"flex flex-col justify-between content-between\">\r\n              <h6 class=\"whitespace-nowrap text-base font-bold mr-1\">Leave Type</h6>\r\n              <p class=\"text-sm ml-1\">On ${assignmentInfo.statusID.status} for ${this.get_days(assignmentInfo.totalDays)}</p>\r\n              <hr/ >\r\n            </div>\r\n            <div class=\"flex flex-col justify-between content-between\">\r\n              <h6 class=\"whitespace-nowrap text-base font-bold mr-1\">Period:</h6>\r\n              <p class=\"text-sm ml-1\">From: ${getDate(assignmentInfo.fromDate)} To: ${getDate(assignmentInfo.toDate)}</p>\r\n              <hr/ >\r\n            </div>\r\n            <div class=\"flex flex-col justify-between content-between\">\r\n              <h6 class=\"whitespace-nowrap text-base font-bold mr-1\">Days Left:</h6>\r\n              <p class=\"text-sm ml-1\">${this.get_days(assignmentInfo.totalDaysLeft)}</p>\r\n              <hr/ >\r\n            </div>\r\n            <div class=\"flex flex-col justify-between content-between\">\r\n              <h6 class=\"whitespace-nowrap text-base font-bold mr-1\">Branch:</h6>\r\n              <p class=\"text-sm ml-1\">${this.get_branch(assignmentInfo.statusID.branchID)}</p>\r\n              <hr/ >\r\n            </div>\r\n            <div class=\"flex flex-col justify-between content-between\">\r\n              <h6 class=\"whitespace-nowrap text-base font-bold mr-1\">Group:</h6>\r\n              <p class=\"text-sm ml-1\">${this.get_group}</p>\r\n              <hr/ >\r\n            </div>\r\n            <div class=\"flex flex-col justify-between content-between\">\r\n              <h6 class=\"whitespace-nowrap text-base font-bold mr-1\">Contact:</h6>\r\n              <p class=\"text-sm ml-1\">\r\n                <a class=\"text-yellow-600\" href=\"tel://${__call__}\">Call</a>/\r\n                <a class=\"text-green-600\" href=\"https://api.whatsapp.com/send?phone=+${__whatsapp__}&amp;text=\">Whatsapp</a>\r\n              </p>\r\n              <hr/ >\r\n            </div>\r\n            <div class=\"flex flex-col justify-between content-between\">\r\n              <h6 class=\"whitespace-nowrap text-base font-bold mr-1\">Last Update:</h6>\r\n              <p class=\"text-sm ml-1\">\r\n                ${assignmentInfo.updatedByInfo === null ? \"-\" : `${assignmentInfo.updatedByInfo.firstname} ${assignmentInfo.updatedByInfo.surname}`}</p>\r\n              <p class=\"text-sm ml-1\">By: ${getDateTime(assignmentInfo.updateDate)}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <mwc-button\r\n          slot=\"secondaryAction\"\r\n          dialogAction=\"close\">\r\n          Cancel\r\n        </mwc-button>\r\n      </mwc-dialog>\r\n    `;\r\n\r\n  }\r\n\r\n  private view_assignment_reason(assignmentInfo: AttendanceAbsentLeaveAssignmentModel) {\r\n    return `\r\n      <mwc-dialog open-this-dialog=\"assignment-reason-${assignmentInfo.id}\" heading=\"Assignment Reason\">\r\n        <div class=\"flex flex-col m-1 justify-evenly whitespace-normal\">\r\n          <div class=\"flex flex-col m-1 justify-evenly\">\r\n            <div class=\"flex flex-col justify-between content-between\">\r\n              <h6 class=\"whitespace-nowrap text-base font-bold mr-1\">Reason</h6>\r\n              <p class=\"text-sm ml-1 whitespace-pre-line\">${assignmentInfo.reason}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <mwc-button\r\n          slot=\"secondaryAction\"\r\n          dialogAction=\"close\">\r\n          Cancel\r\n        </mwc-button>\r\n      </mwc-dialog>\r\n    `;\r\n\r\n  }\r\n\r\n  get_branch(id: number) {\r\n    let branch_name = \"\";\r\n    this._branches.forEach(branch => {\r\n      if (branch.id === id) {\r\n        branch_name = branch.name;\r\n      }\r\n    })\r\n    return branch_name;\r\n  }\r\n\r\n  get get_group() {\r\n    let group_name = \"\";\r\n    for (const key in _branchGroups) {\r\n      const currentGroupList = _branchGroups[key];\r\n\r\n      currentGroupList.forEach(group => {\r\n        if (group.id === this.selectedGroup) {\r\n          group_name = group.group;\r\n        }\r\n      });\r\n    }\r\n\r\n    return group_name;\r\n  }\r\n\r\n  getDate(date: Date) {\r\n    console.log({ \"date_date_date\": date });\r\n    if (date === null) {\r\n      return \"\";\r\n    }\r\n    \r\n    let year = date.toLocaleString('default', { year: \"numeric\" }),\r\n      month = date.toLocaleString('default', { month: \"2-digit\" }),\r\n      day = date.toLocaleString('default', { day: \"2-digit\" });\r\n    return year + \"-\" + month + \"-\" + day;\r\n  }\r\n\r\n  get_days(num?: number) {\r\n    if (num === null) {\r\n      return \"0 days\";\r\n    } \r\n    if (num === 1) {\r\n      return \"1 day\";\r\n    }\r\n    return `${num} days`\r\n  }\r\n\r\n  private async check_all_assignment(e: any) {\r\n    e.preventDefault();\r\n\r\n    document.querySelectorAll('[id=\"assignment_info_all\"][name=\"assignment_info_all\"]').forEach((input: HTMLInputElement) => {\r\n      if (input.checked) {\r\n        document.querySelectorAll('[id=\"assignment_info\"][name=\"assignment_info\"]').forEach((_input_: HTMLInputElement) => {\r\n          _input_.checked = true;\r\n        })\r\n      } else {\r\n        document.querySelectorAll('[id=\"assignment_info\"][name=\"assignment_info\"]').forEach((_input_: HTMLInputElement) => {\r\n          _input_.checked = false;\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  async deleteItemFromList(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    // @ts-ignore\r\n    const _itemId = e.currentTarget.getAttribute('delete-this-item'),\r\n      itemId = Number.isNaN(_itemId) ? 0 : Number(_itemId);\r\n    await DELETE_AttendanceAbsentLeaveAssignment(itemId);\r\n  }\r\n\r\n  private async approveMultipleMemberAction(e: any) {\r\n    e.preventDefault();\r\n\r\n    let ids: Array<number> = [];\r\n\r\n    document.querySelectorAll('[id=\"assignment_info\"][name=\"assignment_info\"]').forEach((input: HTMLInputElement) => {\r\n      if (input.checked) {\r\n        if (!Number.isNaN(input.value)) {\r\n          const value = Number(input.value);\r\n          if (!ids.includes(value)) {\r\n            ids.push(value)\r\n          }\r\n        }\r\n      }\r\n    })\r\n    await POST_AttendanceAbsentLeaveAssignmentApproval(ids, 1);\r\n  }\r\n\r\n  private async cancelMultipleMemberAction(e: any) {\r\n    e.preventDefault();\r\n\r\n    let ids: Array<number> = [];\r\n\r\n    document.querySelectorAll('[id=\"assignment_info\"][name=\"assignment_info\"]').forEach((input: HTMLInputElement) => {\r\n      if (input.checked) {\r\n        if (!Number.isNaN(input.value)) {\r\n          const value = Number(input.value);\r\n          if (!ids.includes(value)) {\r\n            ids.push(value)\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    await POST_AttendanceAbsentLeaveAssignmentApproval(ids, 2);\r\n  }\r\n\r\n  async approveItemFromList(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    // @ts-ignore\r\n    const _itemId = e.currentTarget.getAttribute('approve-this-item'),\r\n      itemId = Number.isNaN(_itemId) ? 0 : Number(_itemId);\r\n      await POST_AttendanceAbsentLeaveAssignmentApproval([itemId], 1);\r\n  }\r\n\r\n  async cancelItemFromList(e: Event) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    // @ts-ignore\r\n    const _itemId = e.currentTarget.getAttribute('cancel-this-item'),\r\n      itemId = Number.isNaN(_itemId) ? 0 : Number(_itemId);\r\n      await POST_AttendanceAbsentLeaveAssignmentApproval([itemId], 2);\r\n  }\r\n\r\n  private dialog() {\r\n    document.querySelectorAll('[open-dialog-btn]').forEach((btn) => {\r\n      // console.log({btn})\r\n      btn.addEventListener('click', (e) => {\r\n        // console.log({e})\r\n        // e.preventDefault();\r\n        this.showDialog(e);\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n  private showDialog(event: any) {\r\n    // event.preventDefault();\r\n    // console.log({event})\r\n\r\n    const dialogId: number = (event.currentTarget.getAttribute('open-dialog-btn'));\r\n    const dialog = this.querySelector('[open-this-dialog=\"' + dialogId + '\"]');\r\n    dialog.setAttribute('open', \"true\");\r\n  }\r\n\r\n  private async getBranches() {\r\n    const _networkResponse = await GET_ClientBranches<ClientBranches_I>();\r\n    let __branches: ClientBranches_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __branches.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: ClientBranches_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __branches = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<ClientBranches_I> = [];\r\n    new_data.push(...this._branches, ...__branches);\r\n    this._branches = new_data;\r\n  }\r\n\r\n  private async getGroups(url_params: string = \"\", branchID: number = null) {\r\n    const KEY = (branchID === null) || branchID < 1 ? \"__\" : String(branchID);\r\n    // console.log({\"_branchGroups\": _branchGroups});\r\n    \r\n    this._groups = [];\r\n    if (KEY in _branchGroups) {\r\n      setTimeout(() => {\r\n        this._groups = _branchGroups[KEY];\r\n      }, 500);\r\n      return;\r\n    }\r\n    \r\n    const _networkResponse = await GET_MemberGroupingsGroups<GroupingsGroup_I>(null, url_params);\r\n    let __groups: GroupingsGroup_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __groups.push({ id: 0, group: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsGroup_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __groups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsGroup_I> = [];\r\n    new_data.push(...this._groups, ...__groups);\r\n    this._groups = new_data;\r\n    _branchGroups[KEY] = this._groups;\r\n  }\r\n\r\n  private async getSubGroups(url_params: string = \"\", groupID: number | null = null) {\r\n    const KEY = (groupID === null) || groupID < 1 ? \"__\" : String(groupID);\r\n    console.log({\"_branchSubGroups\": _branchSubGroups});\r\n    \r\n    this._subgroups = [];\r\n    if (KEY in _branchSubGroups) {\r\n      setTimeout(() => {\r\n        this._subgroups = _branchSubGroups[KEY];\r\n      }, 500);\r\n      return;\r\n    }\r\n    \r\n    const _networkResponse = await GET_MemberGroupingsSubGroups<GroupingsSubGroup_I>(null, url_params);\r\n    let __subgroups: GroupingsSubGroup_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __subgroups.push({ id: 0, subgroup: \"**NOT FOUND**\", date: new Date() });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsSubGroup_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __subgroups = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsSubGroup_I> = [];\r\n    new_data.push(...this._subgroups, ...__subgroups);\r\n    this._subgroups = new_data;\r\n    _branchSubGroups[KEY] = this._subgroups;\r\n  }\r\n\r\n  private async downloadAssignmentPdf() {\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n\r\n    let URL = \"?branchId=\" + branchId + \"&order__by=firstname\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n    \r\n    this.downloadingFilePdf = true;\r\n    setTimeout(() => {\r\n      this.downloadingFilePdf = false;\r\n    }, 2000);\r\n    await GET_AttendanceAbsentLeaveAssignmentPDFDownload<any>(URL);\r\n    this.downloadingFilePdf = false;\r\n  }\r\n\r\n  private async downloadAssignmentExcel() {\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n\r\n    let URL = \"?branchId=\" + branchId + \"&order__by=firstname\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n    \r\n    this.downloadingFileExcel = true;\r\n    await GET_AttendanceAbsentLeaveAssignmentEXCELDownload<any>(URL);\r\n    this.downloadingFileExcel = false;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\n\r\n\r\nexport async function DELETE_AttendanceAbsentLeaveAssignment(ID: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/absent-leave/assignment/' + ID,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Remove Assignment?',\r\n    text: \"You may have members assigned to this assignment. Proceed with care!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http_download } from \"@@addons/functions/https/download\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceAbsentLeaveAssignmentPDFDownload<Type>(url_params: string = \"\",) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/absent-leave/assignment/download-pdf' + (url_params),\r\n    HTTP = await http_download(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return HTTP;\r\n    // return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    // console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http_download } from \"@@addons/functions/https/download\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceAbsentLeaveAssignmentEXCELDownload<Type>(url_params: string = \"\",) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/absent-leave/assignment/download-excel' + (url_params),\r\n    HTTP = await http_download(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return HTTP;\r\n    // return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    // console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","export const PAGE__IDS = {\r\n  \"schedule_meeting_event\": 40,\r\n  \"clocking\": 41,\r\n  \"attendance_history\": 42,\r\n  \"attendees\": 43,\r\n  \"absentees\": 44,\r\n  \"device_request_approval\": 45,\r\n  \"absent_leave_status\": 58,\r\n  \"absent_leave_assignment\": 59,\r\n};\r\n"],"names":["root","factory","exports","module","define","amd","self","_a","_b","_c","_blockingElements","Symbol","_alreadyInertElements","_topElParents","_siblingsToRestore","_parentMO","_topChanged","_swapInertedSibling","_inertSiblings","_restoreInertedSiblings","_getParents","_getDistributedChildren","_isInertable","_handleMutations","BlockingElementsImpl","constructor","this","Set","destructor","nullable","top","elems","length","push","element","remove","i","indexOf","splice","pop","has","newTop","toKeepInert","oldParents","clear","newParents","parentNode","document","body","Error","toSkip","j","slice","oldInert","newInert","siblingsToRestore","inert","add","delete","undefined","elements","disconnect","siblings","sibling","parent","children","inertedSiblings","mo","MutationObserver","bind","parentToObserve","maybeShadyRoot","__shady","host","observe","childList","mutations","parents","mutation","target","idx","inertedChild","removedNodes","console","info","addedNodes","test","localName","current","nodeType","Node","ELEMENT_NODE","assignedSlot","shadowRoot","result","nodes","slots","querySelectorAll","assignedNodes","flatten","$blockingElements","getDate","date","options","Date","toLocaleDateString","getDateTime","toLocaleString","GET_MemberGroupingsGroups","type","url_params","_get_cookie","url","HTTP","method","headers","Authorization","token","error","errorHttp","GET_MemberGroupingsSubGroups","POST_AttendanceAbsentLeaveAssignmentApproval","assignmentIds","approval","states","Array","fill","alertTitle","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","JSON","stringify","then","networkCallRes","_RESPONSE","response","unknownError","errors","forEach","e","err","res","https_swal_error_format","postForm","catch","String","allowOutsideClick","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","message","success","setTimeout","window","location","reload","_branchGroups","_branchSubGroups","AttendanceAbsentLeaveAssignmentView","super","memberProfileBaseUrl","_memberCategories","_activeBranchId","selectedBranch","_memberType","_branches","_groups","_subgroups","_userLoginInfo","selectedGroup","datatablePathUrl","downloadingFilePdf","downloadingFileExcel","filterBoxStarted","_hasSetup","_pageButtonAccess","connectedCallback","activeBranchId","filterBox","selectors","container","filterSectionContextContainer","form","filterSectionContextForm","filterSectionContextBtn","getGroups","getSubGroups","getBranches","disconnectedCallback","render","expiration_date","expired","pageId","viewType","toggleFilterFields","filterForm","downloadBtns","table","renderColOne","data","assignmentInfo","AssignmentInfo","MEMBER_ID","base64","memberID","ASSIGNMENT_ID","id","memberInfo","accountType","profilePicture","firstname","middlename","surname","logo","organizationName","renderColThree","stateTextColor","state","statusID","status","get_days","totalDays","name","fromDate","toDate","view_assignment_details","reason","view_assignment_reason","renderColTwo","ASSIGNMENT_CODE","delete_button","log","approve","cancel","stateBtn","urlQueryString","_urlQueryParams","filterNameId_branchId","filterNameId_group","filterNameId_subGroup","filterNameId_search","filterNameId_reason","filterNameId_fromDate","filterNameId_toDate","newObject","key","userBranch","user","branchId","_urlQueryParamsJoin","returnHtml","filterNameId_state","filterNameId_branchIdVal","filterNameId_groupVal","filterNameId_subGroupVal","filterNameId_searchVal","filterNameId_reasonVal","filterNameId_fromDateVal","filterNameId_toDateVal","filterNameId_stateVal","Number","branchField","branchChange","map","groupField","groupChange","group","subGroupField","subgroup","stateField","searchField","searchReasonField","filterByDateFields","clear_filter","submit","isNaN","currentTarget","groupId","table_header","check_all_assignment","approveMultipleMemberAction","cancelMultipleMemberAction","__tableHeaders","__tableBody","__tableFoot","URL","__dataTable","ajaxHeader","firstUpdated","setInterval","unmutableInputNames","dialog","deleteMemberFx","downloadAssignmentPdf","downloadAssignmentExcel","__this","dataSrc","apiType","orderable","targets","className","checkboxes","selectRow","aoData","approveMemberFx","cancelMemberFx","buttons","select","btn","addEventListener","deleteItemFromList","approveItemFromList","cancelItemFromList","__call__","memberAdditionalInfo","phone","__whatsapp__","whatsapp","totalDaysLeft","get_branch","branchID","get_group","updatedByInfo","updateDate","branch_name","branch","group_name","year","month","day","num","preventDefault","input","checked","_input_","_itemId","getAttribute","itemId","ID","text","DELETE_AttendanceAbsentLeaveAssignment","ids","includes","showDialog","event","dialogId","querySelector","setAttribute","_networkResponse","__branches","new_data","KEY","__groups","groupID","__subgroups","GET_AttendanceAbsentLeaveAssignmentPDFDownload","GET_AttendanceAbsentLeaveAssignmentEXCELDownload","createRenderRoot","styles","Element","HTMLFormElement","Boolean","PAGE__IDS"],"sourceRoot":""}