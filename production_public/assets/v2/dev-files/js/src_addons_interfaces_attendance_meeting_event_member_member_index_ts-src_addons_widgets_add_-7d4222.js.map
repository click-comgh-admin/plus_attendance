{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_addons_interfaces_attendance_meeting_event_member_member_index_ts-src_addons_widgets_add_-7d4222.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/member/group/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/member/member/ind.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/member/member/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/member/member/org.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/member/subgroup/index.ts","webpack://webpackNumbers/./src/addons/widgets/add_remove_widget/index.ts","webpack://webpackNumbers/./src/addons/widgets/form/new/switch.ts","webpack://webpackNumbers/./src/view/attendance/setup/form/edit/links.ts"],"sourcesContent":["import { MeetingEventIDModel } from \"../../schedules/categories\";\r\n\r\nexport class MeetingAttendanceMemberGroupModel {\r\n  id: number;\r\n  meetingEventId: MeetingEventIDModel;\r\n  groupId: number;\r\n  groupInfo: GroupModel;\r\n  asMemberType: boolean;\r\n  updatedBy: number;\r\n  updateDate: Date;\r\n  date: Date;\r\n\r\n  static fromJson(json: any): MeetingAttendanceMemberGroupModel {\r\n    const model = new MeetingAttendanceMemberGroupModel();\r\n    model.id = json.id;\r\n    model.meetingEventId = MeetingEventIDModel.fromJson(json.meetingEventId);\r\n    model.groupId = json.groupId;\r\n    model.groupInfo = GroupModel.fromJson(json.groupInfo);\r\n    model.asMemberType = json.asMemberType;\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = new Date(json.updateDate);\r\n    model.date = new Date(json.date);\r\n\r\n    return model;\r\n  }\r\n\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      meetingEventId: this.meetingEventId.toJson(),\r\n      groupId: this.groupId,\r\n      groupInfo: this.groupInfo.toJson(),\r\n      asMemberType: this.asMemberType,\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate.toISOString(),\r\n      date: this.date.toISOString(),\r\n    };\r\n  }\r\n\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\nexport class GroupModel {\r\n  id: number;\r\n  clientId: number;\r\n  group: string;\r\n  branchId: number;\r\n  memberCategoryId: number;\r\n  createdBy: number;\r\n  updatedBy: number;\r\n  updateDate: Date;\r\n  date: Date;\r\n\r\n  static fromJson(json: any): GroupModel {\r\n    const model = new GroupModel();\r\n    // console.log({ \"json: json\": json });\r\n    model.id = json.id;\r\n    model.clientId = json.clientId;\r\n    model.group = json.group;\r\n    model.branchId = json.branchId;\r\n    model.memberCategoryId = json.memberCategoryId;\r\n    model.createdBy = json.createdBy;\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = new Date(json.updateDate);\r\n    model.date = new Date(json.date);\r\n\r\n    return model;\r\n  }\r\n\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      clientId: this.clientId,\r\n      group: this.group,\r\n      branchId: this.branchId,\r\n      memberCategoryId: this.memberCategoryId,\r\n      createdBy: this.createdBy,\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate.toISOString(),\r\n      date: this.date.toISOString(),\r\n    };\r\n  }\r\n\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\nexport class SubGroupModel {\r\n  id: number;\r\n  clientId: number;\r\n  groupId: number;\r\n  groupInfo: GroupModel;\r\n  branchId: number;\r\n  memberCategoryId: number;\r\n  subgroup: string;\r\n  createdBy: number;\r\n  updatedBy: number;\r\n  updateDate: Date;\r\n  date: Date;\r\n\r\n  static fromJson(json: any): SubGroupModel {\r\n    const model = new SubGroupModel();\r\n    model.id = json.id;\r\n    model.clientId = json.clientId;\r\n    model.groupId = json.groupId;\r\n    model.groupInfo = GroupModel.fromJson(json.groupInfo);\r\n    model.branchId = json.branchId;\r\n    model.memberCategoryId = json.memberCategoryId;\r\n    model.subgroup = json.subgroup;\r\n    model.createdBy = json.createdBy;\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = new Date(json.updateDate);\r\n    model.date = new Date(json.date);\r\n\r\n    return model;\r\n  }\r\n\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      clientId: this.clientId,\r\n      groupId: this.groupId,\r\n      groupInfo: this.groupInfo.toJson(),\r\n      branchId: this.branchId,\r\n      memberCategoryId: this.memberCategoryId,\r\n      subgroup: this.subgroup,\r\n      createdBy: this.createdBy,\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate.toISOString(),\r\n      date: this.date.toISOString(),\r\n    };\r\n  }\r\n\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\n","import { BranchIDModel, ClientIDModel, MemberCategoryIDModel } from \"../../schedules/categories\";\r\n\r\nexport class IndividualMemberModel {\r\n  id: number;\r\n  clientId: ClientIDModel | number;\r\n  firstname: string;\r\n  middlename: string;\r\n  surname: string;\r\n  gender: number;\r\n  profilePicture: string;\r\n  phone: string;\r\n  email: string;\r\n  dateOfBirth: Date;\r\n  religion: number;\r\n  nationality: string;\r\n  countryOfResidence: string;\r\n  stateProvince: string;\r\n  region: number;\r\n  district: number;\r\n  constituency: number;\r\n  electoralArea: number;\r\n  community: string;\r\n  hometown: string;\r\n  houseNoDigitalAddress: string;\r\n  digitalAddress: string;\r\n  level: number;\r\n  status: number;\r\n  accountType: number;\r\n  memberType: number;\r\n  date: Date;\r\n  last_login: string;\r\n  referenceId: string;\r\n  branchId: number;\r\n  editable: boolean;\r\n  profileResume: string;\r\n  profileIdentification: any;\r\n  archived: boolean;\r\n  updatedBy: number;\r\n  updateDate: Date;\r\n  updatedByInfo: UpdatedByInfoModel;\r\n  branchInfo: BranchIDModel;\r\n  categoryInfo: MemberCategoryIDModel;\r\n\r\n  static fromJson(json: any): IndividualMemberModel {\r\n    const model = new IndividualMemberModel();\r\n    model.id = json.id;\r\n    model.clientId = Number.isNaN(json.clientId) ? ClientIDModel.fromJson(json.clientId) : Number(json.clientId);\r\n    model.firstname = json.firstname;\r\n    model.middlename = json.middlename;\r\n    model.surname = json.surname;\r\n    model.gender = json.gender;\r\n    model.profilePicture = json.profilePicture;\r\n    model.phone = json.phone;\r\n    model.email = json.email;\r\n    model.dateOfBirth = new Date(json.dateOfBirth);\r\n    model.religion = json.religion;\r\n    model.nationality = json.nationality;\r\n    model.countryOfResidence = json.countryOfResidence;\r\n    model.stateProvince = json.stateProvince;\r\n    model.region = json.region;\r\n    model.district = json.district;\r\n    model.constituency = json.constituency;\r\n    model.electoralArea = json.electoralArea;\r\n    model.community = json.community;\r\n    model.hometown = json.hometown;\r\n    model.houseNoDigitalAddress = json.houseNoDigitalAddress;\r\n    model.digitalAddress = json.digitalAddress;\r\n    model.level = json.level;\r\n    model.status = json.status;\r\n    model.accountType = json.accountType;\r\n    model.memberType = json.memberType;\r\n    model.date = new Date(json.date);\r\n    model.last_login = json.last_login;\r\n    model.referenceId = json.referenceId;\r\n    model.branchId = json.branchId;\r\n    model.editable = json.editable;\r\n    model.profileResume = json.profileResume;\r\n    model.profileIdentification = json.profileIdentification;\r\n    model.archived = json.archived;\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = new Date(json.updateDate);\r\n    model.updatedByInfo = json.updatedByInfo === null ? null: UpdatedByInfoModel.fromJson(json.updatedByInfo);\r\n    model.branchInfo = json.updatedByInfo === null ? null: BranchIDModel.fromJson(json.branchInfo);\r\n    model.categoryInfo = json.updatedByInfo === null ? null: MemberCategoryIDModel.fromJson(json.categoryInfo);\r\n    return model;\r\n  }\r\n\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      //@ts-ignore\r\n      clientId: Number.isNaN(this.clientId) ? this.clientId.toJson() : this.clientId,\r\n      firstname: this.firstname,\r\n      middlename: this.middlename,\r\n      surname: this.surname,\r\n      gender: this.gender,\r\n      profilePicture: this.profilePicture,\r\n      phone: this.phone,\r\n      email: this.email,\r\n      dateOfBirth: this.dateOfBirth.toISOString(),\r\n      religion: this.religion,\r\n      nationality: this.nationality,\r\n      countryOfResidence: this.countryOfResidence,\r\n      stateProvince: this.stateProvince,\r\n      region: this.region,\r\n      district: this.district,\r\n      constituency: this.constituency,\r\n      electoralArea: this.electoralArea,\r\n      community: this.community,\r\n      hometown: this.hometown,\r\n      houseNoDigitalAddress: this.houseNoDigitalAddress,\r\n      digitalAddress: this.digitalAddress,\r\n      level: this.level,\r\n      status: this.status,\r\n      accountType: this.accountType,\r\n      memberType: this.memberType,\r\n      date: this.date.toISOString(),\r\n      last_login: this.last_login,\r\n      referenceId: this.referenceId,\r\n      branchId: this.branchId,\r\n      editable: this.editable,\r\n      profileResume: this.profileResume,\r\n      profileIdentification: this.profileIdentification,\r\n      archived: this.archived,\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate.toISOString(),\r\n      updatedByInfo: this.updatedByInfo === null? null: this.updatedByInfo.toJson(),\r\n      branchInfo: this.branchInfo === null? null: this.branchInfo.toJson(),\r\n      categoryInfo: this.categoryInfo === null? null: this.categoryInfo.toJson(),\r\n    };\r\n  }\r\n\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\nexport class UpdatedByInfoModel {\r\n  id: number;\r\n  firstname: string;\r\n  surname: string;\r\n  gender: number;\r\n  profilePicture: string;\r\n  dateOfBirth: string;\r\n  phone: string;\r\n  email: string;\r\n  role: number;\r\n  accountId: number;\r\n  branchId: number;\r\n  level: number;\r\n  status: number;\r\n  lastUpdatedBy: number;\r\n  date: string;\r\n  last_login: string;\r\n\r\n  static fromJson(json: any): UpdatedByInfoModel {\r\n    const model = new UpdatedByInfoModel();\r\n    model.id = json.id;\r\n    model.firstname = json.firstname;\r\n    model.surname = json.surname;\r\n    model.gender = json.gender;\r\n    model.profilePicture = json.profilePicture;\r\n    model.dateOfBirth = json.dateOfBirth;\r\n    model.phone = json.phone;\r\n    model.email = json.email;\r\n    model.role = json.role;\r\n    model.accountId = json.accountId;\r\n    model.branchId = json.branchId;\r\n    model.level = json.level;\r\n    model.status = json.status;\r\n    model.lastUpdatedBy = json.lastUpdatedBy;\r\n    model.date = json.date;\r\n    model.last_login = json.last_login;\r\n    return model;\r\n  }\r\n\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      firstname: this.firstname,\r\n      surname: this.surname,\r\n      gender: this.gender,\r\n      profilePicture: this.profilePicture,\r\n      dateOfBirth: this.dateOfBirth,\r\n      phone: this.phone,\r\n      email: this.email,\r\n      role: this.role,\r\n      accountId: this.accountId,\r\n      branchId: this.branchId,\r\n      level: this.level,\r\n      status: this.status,\r\n      lastUpdatedBy: this.lastUpdatedBy,\r\n      date: this.date,\r\n      last_login: this.last_login,\r\n    };\r\n  }\r\n\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\n","import { MeetingEventCategoryModel, MeetingEventIDModel } from \"../../schedules/categories\";\r\nimport { MeetingAttendanceMemberGroupModel } from \"../group\";\r\nimport { MeetingAttendanceMemberSubGroupModel } from \"../subgroup\";\r\nimport { IndividualMemberModel } from \"./ind\";\r\nimport { OrganizationMemberModel } from \"./org\";\r\n\r\n\r\nexport enum AttendanceMemberStatus {\r\n  None = 0,\r\n  Assigned = 1,\r\n  Pending = 3,\r\n  Unassigned = 2,\r\n}\r\n\r\nexport class MeetingAttendanceMemberModel {\r\n  id: number;\r\n  meetingEventId: MeetingEventIDModel;\r\n  memberId: number;\r\n  memberInfo?: IndividualMemberModel | OrganizationMemberModel;\r\n  statusId: MeetingAttendanceMemberStatusIdModel;\r\n  meetingCategoryId?: MeetingEventCategoryModel;\r\n  meetingGroupId?: MeetingAttendanceMemberGroupModel;\r\n  meetingSubgroupId?: MeetingAttendanceMemberSubGroupModel;\r\n  updatedBy: number;\r\n  updateDate: string;\r\n  date: string;\r\n\r\n  static fromJson(json: any): MeetingAttendanceMemberModel {    \r\n    // console.log({ \"MeetingAttendanceMemberModel:json\": json });\r\n    // if (!Number.isNaN(json)) return json;\r\n\r\n    const model = new MeetingAttendanceMemberModel();\r\n    model.id = json.id;\r\n    model.meetingEventId = MeetingEventIDModel.fromJson(json.meetingEventId);\r\n    model.memberId = json.memberId;\r\n    model.memberInfo = json.memberInfo === null || json.memberInfo === undefined ? null : ('certificates' in json.memberInfo ? OrganizationMemberModel.fromJson(json.memberInfo) : IndividualMemberModel.fromJson(json.memberInfo));\r\n    model.statusId = MeetingAttendanceMemberStatusIdModel.fromJson(json.statusId);\r\n    model.meetingCategoryId = json.meetingCategoryId === null ? null : MeetingEventCategoryModel.fromJson(json.meetingCategoryId);\r\n    model.meetingGroupId = json.meetingGroupId === null ? null : MeetingAttendanceMemberGroupModel.fromJson(json.meetingGroupId);\r\n    model.meetingSubgroupId = json.meetingSubgroupId === null ? null : MeetingAttendanceMemberSubGroupModel.fromJson(json.meetingSubgroupId);\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = json.updateDate;\r\n    model.date = json.date;\r\n    return model;\r\n  }\r\n\r\n  toJson(): any {\r\n    // console.log({\"this.meetingEventId\": this.meetingEventId});\r\n    \r\n    try {\r\n      return {\r\n        id: this.id,\r\n        meetingEventId: this.meetingEventId.toJson(),\r\n        memberId: this.memberId,\r\n        memberInfo: this.memberInfo === null ? null : this.memberInfo.toJson(),\r\n        statusId: this.statusId.toJson(),\r\n        meetingCategoryId: this.meetingCategoryId === null ? null : this.meetingCategoryId.toJson(),\r\n        meetingGroupId: this.meetingGroupId === null ? null : this.meetingGroupId.toJson(),\r\n        meetingSubgroupId: this.meetingSubgroupId === null ? null : this.meetingSubgroupId.toJson(),\r\n        updatedBy: this.updatedBy,\r\n        updateDate: this.updateDate,\r\n        date: this.date,\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        id: this.id,\r\n        meetingEventId: this.meetingEventId,\r\n        memberId: this.memberId,\r\n        memberInfo: this.memberInfo === null ? null : this.memberInfo.toJson(),\r\n        statusId: this.statusId.toJson(),\r\n        meetingCategoryId: this.meetingCategoryId === null ? null : this.meetingCategoryId.toJson(),\r\n        meetingGroupId: this.meetingGroupId === null ? null : this.meetingGroupId.toJson(),\r\n        meetingSubgroupId: this.meetingSubgroupId === null ? null : this.meetingSubgroupId.toJson(),\r\n        updatedBy: this.updatedBy,\r\n        updateDate: this.updateDate,\r\n        date: this.date,\r\n      };\r\n    }\r\n  }\r\n\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\n\r\nexport class MeetingAttendanceMemberStatusIdModel {\r\n  id: number;\r\n  status: string;\r\n\r\n  static fromJson(json: any): MeetingAttendanceMemberStatusIdModel {\r\n    const model = new MeetingAttendanceMemberStatusIdModel();\r\n    model.id = json.id;\r\n    model.status = json.status;\r\n    return model;\r\n  }\r\n\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      status: this.status,\r\n    };\r\n  }\r\n\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n","import { BranchIDModel, ClientIDModel, MemberCategoryIDModel } from \"../../schedules/categories\";\r\n\r\nexport class OrganizationMemberModel {\r\n  id: number;\r\n  clientId: ClientIDModel | number;\r\n  organizationName: string;\r\n  contactPersonName: string;\r\n  organizationType: OrganizationTypeModel;\r\n  businessRegistered: boolean;\r\n  organizationPhone: string;\r\n  organizationEmail: string;\r\n  contactPersonGender: number;\r\n  contactPersonPhoto: string;\r\n  dateOfIncorporation: string;\r\n  logo: string;\r\n  contactPersonPhone: string;\r\n  contactPersonEmail: string;\r\n  countryOfBusiness: string;\r\n  stateProvince: string;\r\n  region: number;\r\n  district: number;\r\n  constituency: number;\r\n  electoralArea: number;\r\n  community: string;\r\n  digitalAddress: string;\r\n  level: number;\r\n  status: number;\r\n  accountType: number;\r\n  memberType: number;\r\n  date: string;\r\n  last_login: string;\r\n  referenceId: string;\r\n  branchId: number;\r\n  editable: boolean;\r\n  updatedBy: number;\r\n  updateDate: string;\r\n  updatedByInfo: any;\r\n  branchInfo: BranchIDModel;\r\n  categoryInfo: MemberCategoryIDModel;\r\n  certificates: CertificateModel[];\r\n  identification: string;\r\n\r\n  static fromJson(json: any): OrganizationMemberModel {\r\n    const model = new OrganizationMemberModel();\r\n    model.id = json.id;\r\n    model.clientId = Number.isNaN(json.clientId) ? ClientIDModel.fromJson(json.clientId) : Number(json.clientId);\r\n    model.organizationName = json.organizationName;\r\n    model.contactPersonName = json.contactPersonName;\r\n    model.organizationType = OrganizationTypeModel.fromJson(json.organizationType);\r\n    model.businessRegistered = json.businessRegistered;\r\n    model.organizationPhone = json.organizationPhone;\r\n    model.organizationEmail = json.organizationEmail;\r\n    model.contactPersonGender = json.contactPersonGender;\r\n    model.contactPersonPhoto = json.contactPersonPhoto;\r\n    model.dateOfIncorporation = json.dateOfIncorporation;\r\n    model.logo = json.logo;\r\n    model.contactPersonPhone = json.contactPersonPhone;\r\n    model.contactPersonEmail = json.contactPersonEmail;\r\n    model.countryOfBusiness = json.countryOfBusiness;\r\n    model.stateProvince = json.stateProvince;\r\n    model.region = json.region;\r\n    model.district = json.district;\r\n    model.constituency = json.constituency;\r\n    model.electoralArea = json.electoralArea;\r\n    model.community = json.community;\r\n    model.digitalAddress = json.digitalAddress;\r\n    model.level = json.level;\r\n    model.status = json.status;\r\n    model.accountType = json.accountType;\r\n    model.memberType = json.memberType;\r\n    model.date = json.date;\r\n    model.last_login = json.last_login;\r\n    model.referenceId = json.referenceId;\r\n    model.branchId = json.branchId;\r\n    model.editable = json.editable;\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = json.updateDate;\r\n    model.updatedByInfo = json.updatedByInfo;\r\n    model.branchInfo = BranchIDModel.fromJson(json.branchInfo);\r\n    model.categoryInfo = MemberCategoryIDModel.fromJson(json.categoryInfo);\r\n    model.certificates = json.certificates === null? []: json.certificates.map((certificate: any) =>\r\n      CertificateModel.fromJson(certificate)\r\n    );\r\n    model.identification = json.identification;\r\n    return model;\r\n  }\r\n\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      //@ts-ignore\r\n      clientId: Number.isNaN(this.clientId) ? this.clientId.toJson() : this.clientId,\r\n      organizationName: this.organizationName,\r\n      contactPersonName: this.contactPersonName,\r\n      organizationType: this.organizationType.toJson(),\r\n      businessRegistered: this.businessRegistered,\r\n      organizationPhone: this.organizationPhone,\r\n      organizationEmail: this.organizationEmail,\r\n      contactPersonGender: this.contactPersonGender,\r\n      contactPersonPhoto: this.contactPersonPhoto,\r\n      dateOfIncorporation: this.dateOfIncorporation,\r\n      logo: this.logo,\r\n      contactPersonPhone: this.contactPersonPhone,\r\n      contactPersonEmail: this.contactPersonEmail,\r\n      countryOfBusiness: this.countryOfBusiness,\r\n      stateProvince: this.stateProvince,\r\n      region: this.region,\r\n      district: this.district,\r\n      constituency: this.constituency,\r\n      electoralArea: this.electoralArea,\r\n      community: this.community,\r\n      digitalAddress: this.digitalAddress,\r\n      level: this.level,\r\n      status: this.status,\r\n      accountType: this.accountType,\r\n      memberType: this.memberType,\r\n      date: this.date,\r\n      last_login: this.last_login,\r\n      referenceId: this.referenceId,\r\n      branchId: this.branchId,\r\n      editable: this.editable,\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate,\r\n      updatedByInfo: this.updatedByInfo,\r\n      branchInfo: this.branchInfo.toJson(),\r\n      categoryInfo: this.categoryInfo.toJson(),\r\n      certificates: this.certificates === null? []: this.certificates.map((certificate) => certificate.toJson()),\r\n      identification: this.identification,\r\n    };\r\n  }\r\n\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\nclass OrganizationTypeModel {\r\n  id: number;\r\n  memberId: number;\r\n  clientId: number;\r\n  type: string;\r\n  createdBy: number;\r\n  updatedBy: number;\r\n  updateDate: string;\r\n  date: string;\r\n\r\n  static fromJson(json: any): OrganizationTypeModel {\r\n    const model = new OrganizationTypeModel();\r\n    model.id = json.id;\r\n    model.memberId = json.memberId;\r\n    model.clientId = json.clientId;\r\n    model.type = json.type;\r\n    model.createdBy = json.createdBy;\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = json.updateDate;\r\n    model.date = json.date;\r\n    return model;\r\n  }\r\n\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      memberId: this.memberId,\r\n      clientId: this.clientId,\r\n      type: this.type,\r\n      createdBy: this.createdBy,\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate,\r\n      date: this.date,\r\n    };\r\n  }\r\n\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\nclass CertificateModel {\r\n  id: number;\r\n  memberId: number;\r\n  attachment: AttachmentModel;\r\n  date: string;\r\n\r\n  static fromJson(json: any): CertificateModel {\r\n    const model = new CertificateModel();\r\n    model.id = json.id;\r\n    model.memberId = json.memberId;\r\n    model.attachment = AttachmentModel.fromJson(json.attachment);\r\n    model.date = json.date;\r\n    return model;\r\n  }\r\n\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      memberId: this.memberId,\r\n      attachment: this.attachment.toJson(),\r\n      date: this.date,\r\n    };\r\n  }\r\n\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\nclass AttachmentModel {\r\n  id: number;\r\n  clientId: number;\r\n  attachment: string;\r\n  filename: string;\r\n  source: string;\r\n  size: string;\r\n  folderId: FolderIdModel;\r\n  fileDescription: string;\r\n  createdBy: number;\r\n  updatedBy: number;\r\n  updateDate: string;\r\n  archived: boolean;\r\n  archivedBy: number;\r\n  archivedDate: string;\r\n  date: string;\r\n\r\n  static fromJson(json: any): AttachmentModel {\r\n    const model = new AttachmentModel();\r\n    model.id = json.id;\r\n    model.clientId = json.clientId;\r\n    model.attachment = json.attachment;\r\n    model.filename = json.filename;\r\n    model.source = json.source;\r\n    model.size = json.size;\r\n    model.folderId = FolderIdModel.fromJson(json.folderId);\r\n    model.fileDescription = json.fileDescription;\r\n    model.createdBy = json.createdBy;\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = json.updateDate;\r\n    model.archived = json.archived;\r\n    model.archivedBy = json.archivedBy;\r\n    model.archivedDate = json.archivedDate;\r\n    model.date = json.date;\r\n    return model;\r\n  }\r\n\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      clientId: this.clientId,\r\n      attachment: this.attachment,\r\n      filename: this.filename,\r\n      source: this.source,\r\n      size: this.size,\r\n      folderId: this.folderId.toJson(),\r\n      fileDescription: this.fileDescription,\r\n      createdBy: this.createdBy,\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate,\r\n      archived: this.archived,\r\n      archivedBy: this.archivedBy,\r\n      archivedDate: this.archivedDate,\r\n      date: this.date,\r\n    };\r\n  }\r\n\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\nclass FolderIdModel {\r\n  id: number;\r\n  parentFolder: any;\r\n  clientId: number;\r\n  branchId: number;\r\n  folder: string;\r\n  folderType: number;\r\n  createdBy: number;\r\n  updatedBy: number;\r\n  updateDate: string;\r\n  date: string;\r\n\r\n  static fromJson(json: any): FolderIdModel {\r\n    const model = new FolderIdModel();\r\n    model.id = json.id;\r\n    model.parentFolder = json.parentFolder;\r\n    model.clientId = json.clientId;\r\n    model.branchId = json.branchId;\r\n    model.folder = json.folder;\r\n    model.folderType = json.folderType;\r\n    model.createdBy = json.createdBy;\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = json.updateDate;\r\n    model.date = json.date;\r\n    return model;\r\n  }\r\n\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      parentFolder: this.parentFolder,\r\n      clientId: this.clientId,\r\n      branchId: this.branchId,\r\n      folder: this.folder,\r\n      folderType: this.folderType,\r\n      createdBy: this.createdBy,\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate,\r\n      date: this.date,\r\n    };\r\n  }\r\n\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n","import { MeetingEventIDModel } from \"../../schedules/categories\";\r\nimport { GroupModel } from \"../group\";\r\n\r\nexport class MeetingAttendanceMemberSubGroupModel {\r\n  id: number;\r\n  meetingEventId: MeetingEventIDModel;\r\n  subGroupId: number;\r\n  subGroupInfo: SubGroupModel;\r\n  asMemberType: boolean;\r\n  updatedBy: number;\r\n  updateDate: Date;\r\n  date: Date;\r\n\r\n  static fromJson(json: any): MeetingAttendanceMemberSubGroupModel {\r\n    const model = new MeetingAttendanceMemberSubGroupModel();\r\n    model.id = json.id;\r\n    model.meetingEventId = MeetingEventIDModel.fromJson(json.meetingEventId);\r\n    model.subGroupId = json.subGroupId;\r\n    model.subGroupInfo = SubGroupModel.fromJson(json.subGroupInfo);\r\n    model.asMemberType = json.asMemberType;\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = new Date(json.updateDate);\r\n    model.date = new Date(json.date);\r\n\r\n    return model;\r\n  }\r\n\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      meetingEventId: this.meetingEventId.toJson(),\r\n      subGroupId: this.subGroupId,\r\n      subGroupInfo: this.subGroupInfo.toJson(),\r\n      asMemberType: this.asMemberType,\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate.toISOString(),\r\n      date: this.date.toISOString(),\r\n    };\r\n  }\r\n\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\nexport class SubGroupModel {\r\n  id: number;\r\n  clientId: number;\r\n  groupId: GroupModel;\r\n  branchId: number;\r\n  memberCategoryId: number;\r\n  subgroup: string;\r\n  createdBy: number;\r\n  updatedBy: number;\r\n  updateDate: Date;\r\n  date: Date;\r\n\r\n  static fromJson(json: any): SubGroupModel {\r\n    const model = new SubGroupModel();\r\n    model.id = json.id;\r\n    model.clientId = json.clientId;\r\n    model.groupId = GroupModel.fromJson(json.groupId);\r\n    model.branchId = json.branchId;\r\n    model.memberCategoryId = json.memberCategoryId;\r\n    model.subgroup = json.subgroup;\r\n    model.createdBy = json.createdBy;\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = new Date(json.updateDate);\r\n    model.date = new Date(json.date);\r\n\r\n    return model;\r\n  }\r\n\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      clientId: this.clientId,\r\n      groupId: this.groupId.toJson(),\r\n      branchId: this.branchId,\r\n      memberCategoryId: this.memberCategoryId,\r\n      subgroup: this.subgroup,\r\n      createdBy: this.createdBy,\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate.toISOString(),\r\n      date: this.date.toISOString(),\r\n    };\r\n  }\r\n\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\n","import { LitElement, html, nothing, TemplateResult, } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-icon-button';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-list';\r\nimport '@material/mwc-dialog';\r\nimport '@material/mwc-textfield';\r\nimport { stringToHTML } from '@@addons/functions/stringToHTML';\r\n\r\n\r\n@customElement(\"multiple-widgets\")\r\nexport class MultipleWidgets extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public index?: number = 0;\r\n\r\n  // @property({ type: String })\r\n  // public widget?: string = '';\r\n\r\n  // @property({ type: Object })\r\n  // public widget?: TemplateResult<1> = html``;\r\n\r\n  private _widget: TemplateResult<1> = html``;\r\n\r\n  public set widget(value: TemplateResult<1>) {\r\n    this._widget = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get widget(): TemplateResult<1> {\r\n    return this._widget;\r\n  }\r\n\r\n  @property({ type: Boolean })\r\n  public no_delete?: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public single?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public _single?: string = '[]';\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({ \"fetchTypes\": this.fetchTypes });\r\n    if (this.single) {\r\n      this._single = '';\r\n    } else {\r\n      this._single = '[]';\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"container\">\r\n        <header class=\"form-input-container\">\r\n          ${this.no_delete ? nothing : html`\r\n            <mwc-icon-button icon=\"delete_forever\" class=\"danger\"\r\n              @click=\"${this.deleteQuestion}\"></mwc-icon-button>`\r\n          }\r\n        </header>\r\n        <main>\r\n          ${this.widget}\r\n        </main>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private deleteQuestion(e: { preventDefault: () => void; }) {\r\n    e.preventDefault();\r\n\r\n    this.remove();\r\n  }\r\n\r\n  async firstUpdated() {}\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@material/mwc-formfield';\r\nimport '@material/mwc-switch';\r\n\r\n@customElement('switch-input')\r\nexport class SwitchInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public selected: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public value: string = \"1\";\r\n\r\n  @property({ type: Boolean })\r\n  public isSelected: boolean = this.selected;\r\n\r\n  static styles = [\r\n    css`\r\n      :host {\r\n        display: block;\r\n      }\r\n    `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"w-full !py-4 px-2 !flex !justify-between border border-gray-400 rounded-md\">\r\n        <mwc-formfield class=\"w-full text-gray-400\" label=\"${this.label}\" alignEnd spaceBetween>\r\n          ${this.switch}\r\n          <input type=\"hidden\" name=\"${this.name}\" id=\"${this.name}\" value=\"${this.selected? 'on': 'off'}\" />\r\n        </mwc-formfield>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get switch() {\r\n    if (this.selected) {\r\n      return html`\r\n        <mwc-switch selected name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <mwc-switch name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private switchAction(switchActionEvent: { target: { selected: boolean; value: string; }; }) {\r\n    // console.log({switchActionEvent});\r\n    this.isSelected = switchActionEvent.target.selected;\r\n    // console.log({\"this.isSelected\": this.isSelected});\r\n    this.querySelectorAll('[name=\"' + this.name + '\"]').forEach((input: HTMLInputElement) => {\r\n      input.value = this.isSelected? \"on\": \"off\";\r\n    })\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport \"@@addons/widgets/buttons/link-buttons/link-button\";\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { urlQueryParamsGet } from '@@addons/functions/url_query_params';\r\n\r\n\r\n@customElement(\"attendance-setup-form-edit-links\")\r\nexport class AttendanceSetupFormEditLinks extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  private meetingEventId?: number = 0;\r\n\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.getMeetingEventId();\r\n\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    // console.log({ \"CONSTANTS.URLS.PDB_CLIENT\": CONSTANTS.URLS.PDB_CLIENT })\r\n    return html`\r\n      <link-button isblockcontent=\"false\" aClass=\"\" raised bClass=\"button primary mr-2\"\r\n        href=\"${CONSTANTS.URLS.PDB_CLIENT}settings/edit/schedule?meeting-event-id=${this.meetingEventId}\"\r\n        label=\"Edit Schedule\"></link-button>\r\n      <link-button isblockcontent=\"false\" aClass=\"\" bClass=\"button primary mr-2\"\r\n        href=\"${CONSTANTS.URLS.PDB_CLIENT}settings/edit/admin?meeting-event-id=${this.meetingEventId}\"\r\n        label=\"Edit Admin(s)\"></link-button>\r\n      <link-button isblockcontent=\"false\" aClass=\"\" bClass=\"button success mr-2\"\r\n        href=\"${CONSTANTS.URLS.PDB_CLIENT}settings/edit/attachments?meeting-event-id=${this.meetingEventId}\"\r\n        label=\"Edit Attachment(s)\"></link-button>\r\n      <link-button isblockcontent=\"false\" aClass=\"\" bClass=\"button success mr-2\"\r\n        href=\"${CONSTANTS.URLS.PDB_CLIENT}settings/meeting-agendas?meeting-event-id=${this.meetingEventId}\"\r\n        label=\"Agenda(s)\"></link-button>\r\n      <link-button isblockcontent=\"false\" aClass=\"\" bClass=\"button info mr-2\"\r\n        href=\"${CONSTANTS.URLS.PDB_CLIENT}settings/edit/break?meeting-event-id=${this.meetingEventId}\"\r\n        label=\"Edit Break\"></link-button>\r\n      <link-button isblockcontent=\"false\" aClass=\"\" bClass=\"button warning mr-2\"\r\n        href=\"${CONSTANTS.URLS.PDB_CLIENT}settings/edit/date?meeting-event-id=${this.meetingEventId}\"\r\n        label=\"Edit Date(s)\"></link-button>\r\n      <link-button isblockcontent=\"false\" aClass=\"\" bClass=\"button danger mr-2\"\r\n        href=\"${CONSTANTS.URLS.PDB_CLIENT}settings/edit/day?meeting-event-id=${this.meetingEventId}\"\r\n        label=\"Edit Day(s)\"></link-button>\r\n      <link-button isblockcontent=\"false\" aClass=\"\" bClass=\"button primary mr-2\"\r\n        href=\"${CONSTANTS.URLS.PDB_CLIENT}settings/edit/group?meeting-event-id=${this.meetingEventId}\"\r\n        label=\"Edit Group(s)\"></link-button>\r\n      <link-button isblockcontent=\"false\" aClass=\"\" bClass=\"button success mr-2\"\r\n        href=\"${CONSTANTS.URLS.PDB_CLIENT}settings/edit/sub-group?meeting-event-id=${this.meetingEventId}\"\r\n        label=\"Edit Sub-Group(s)\"></link-button>\r\n      <link-button isblockcontent=\"false\" aClass=\"\" bClass=\"button info mr-2\"\r\n        href=\"${CONSTANTS.URLS.PDB_CLIENT}settings/edit/location?meeting-event-id=${this.meetingEventId}\"\r\n        label=\"Edit Location\"></link-button>\r\n      <link-button isblockcontent=\"false\" aClass=\"\" bClass=\"button warning mr-2\"\r\n        href=\"${CONSTANTS.URLS.PDB_CLIENT}settings/edit/member?meeting-event-id=${this.meetingEventId}\"\r\n        label=\"Edit Member(s)\"></link-button>\r\n      <link-button isblockcontent=\"false\" aClass=\"\" bClass=\"button danger mr-2\"\r\n        href=\"${CONSTANTS.URLS.PDB_CLIENT}settings/edit/sms?meeting-event-id=${this.meetingEventId}\"\r\n        label=\"Edit SMS\"></link-button>\r\n      <link-button isblockcontent=\"false\" aClass=\"\" bClass=\"button warning mr-2\"\r\n        href=\"${CONSTANTS.URLS.PDB_CLIENT}settings/categories?meeting-event-id=${this.meetingEventId}\"\r\n        label=\"Edit Categories\"></link-button>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private getMeetingEventId() {\r\n    let meetingEventId = urlQueryParamsGet('meeting-event-id');\r\n    let _meetingEventId = meetingEventId !== null ? Number(meetingEventId) : null;\r\n    this.meetingEventId = Number.isNaN(_meetingEventId) ? null : _meetingEventId;\r\n    // console.log({ \"this.urlQueryParams\": this.urlQueryParams, \"this.meetingEventId\": this.meetingEventId });\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["MeetingAttendanceMemberGroupModel","fromJson","json","model","id","meetingEventId","MeetingEventIDModel","groupId","groupInfo","GroupModel","asMemberType","updatedBy","updateDate","Date","date","toJson","this","toISOString","toString","JSON","stringify","clientId","group","branchId","memberCategoryId","createdBy","SubGroupModel","subgroup","IndividualMemberModel","Number","isNaN","ClientIDModel","firstname","middlename","surname","gender","profilePicture","phone","email","dateOfBirth","religion","nationality","countryOfResidence","stateProvince","region","district","constituency","electoralArea","community","hometown","houseNoDigitalAddress","digitalAddress","level","status","accountType","memberType","last_login","referenceId","editable","profileResume","profileIdentification","archived","updatedByInfo","UpdatedByInfoModel","branchInfo","BranchIDModel","categoryInfo","MemberCategoryIDModel","role","accountId","lastUpdatedBy","AttendanceMemberStatus","MeetingAttendanceMemberModel","memberId","memberInfo","undefined","OrganizationMemberModel","statusId","MeetingAttendanceMemberStatusIdModel","meetingCategoryId","MeetingEventCategoryModel","meetingGroupId","meetingSubgroupId","MeetingAttendanceMemberSubGroupModel","error","organizationName","contactPersonName","organizationType","OrganizationTypeModel","businessRegistered","organizationPhone","organizationEmail","contactPersonGender","contactPersonPhoto","dateOfIncorporation","logo","contactPersonPhone","contactPersonEmail","countryOfBusiness","certificates","map","certificate","CertificateModel","identification","type","attachment","AttachmentModel","filename","source","size","folderId","FolderIdModel","fileDescription","archivedBy","archivedDate","parentFolder","folder","folderType","subGroupId","subGroupInfo","MultipleWidgets","LitElement","constructor","super","index","_widget","html","no_delete","single","_single","widget","value","requestUpdate","connectedCallback","disconnectedCallback","render","nothing","deleteQuestion","e","preventDefault","remove","firstUpdated","createRenderRoot","property","Boolean","String","customElement","SwitchInput","name","label","selected","isSelected","switch","switchAction","switchActionEvent","target","querySelectorAll","forEach","input","styles","css","AttendanceSetupFormEditLinks","getMeetingEventId","CONSTANTS","URLS","PDB_CLIENT","urlQueryParamsGet","_meetingEventId"],"sourceRoot":""}