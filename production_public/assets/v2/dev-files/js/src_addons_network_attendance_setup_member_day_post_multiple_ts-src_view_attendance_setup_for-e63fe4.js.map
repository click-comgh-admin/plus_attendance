{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_addons_network_attendance_setup_member_day_post_multiple_ts-src_view_attendance_setup_for-e63fe4.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/member/member/day.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/member/day/post_multiple.ts","webpack://webpackNumbers/./src/view/attendance/setup/form/edit/member/days/inputs.ts","webpack://webpackNumbers/./src/view/attendance/setup/form/edit/member/days/multiple.ts"],"sourcesContent":["import { MeetingEventIDModel } from \"../../schedules/categories\";\r\nimport { IndividualMemberModel } from \"./ind\";\r\nimport { OrganizationMemberModel } from \"./org\";\r\nimport { MeetingAttendanceMemberModel } from \"./\";\r\n\r\n// Export class for the \"MemberMeetingEventDay\" containing all the fields\r\nexport class MemberMeetingEventDayModel {\r\n  id: number;\r\n  meetingEventId: MeetingEventIDModel;\r\n  dayId: DayIdFullModel;\r\n  memberId: MeetingAttendanceMemberModel;\r\n  updatedBy: number;\r\n  updateDate: Date;\r\n  date: Date;\r\n  memberInfo?: IndividualMemberModel | OrganizationMemberModel | null;\r\n\r\n  // toJson method to convert the object to a JSON string\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      meetingEventId: this.meetingEventId.toJson(),\r\n      dayId: this.dayId.toJson(),\r\n      memberId: this.memberId.toJson(),\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate.toISOString(),\r\n      date: this.date.toISOString(),\r\n      memberInfo: this.memberInfo === null || this.memberInfo === undefined ? null : this.memberInfo.toJson(),\r\n    };\r\n  }\r\n\r\n  // fromJson method to create an object from a JSON string\r\n  static fromJson(json: any): MemberMeetingEventDayModel {\r\n    const model = new MemberMeetingEventDayModel();\r\n    model.id = json.id;\r\n    model.meetingEventId = MeetingEventIDModel.fromJson(json.meetingEventId);\r\n    model.dayId = DayIdFullModel.fromJson(json.dayId);\r\n    model.memberId = MeetingAttendanceMemberModel.fromJson(json.memberId);\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = new Date(json.updateDate);\r\n    model.date = new Date(json.date);\r\n    model.memberInfo = json.memberInfo === null || json.memberInfo === undefined ? null : ('certificates' in json.memberInfo ? OrganizationMemberModel.fromJson(json.memberInfo) : IndividualMemberModel.fromJson(json.memberInfo));\r\n\r\n    // console.log({\"model-model--model\": model});\r\n    \r\n    return model;\r\n  }\r\n\r\n  // toString method to return a string representation of the object\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\n\r\n// Export class for the \"dayId\" field\r\nexport class DayIdModel {\r\n  id: number;\r\n  date: Date;\r\n\r\n  // toJson method to convert the object to a JSON string\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      date: this.date.toISOString(),\r\n    };\r\n  }\r\n\r\n  // fromJson method to create an object from a JSON string\r\n  static fromJson(json: any): DayIdModel {\r\n    const model = new DayIdModel();\r\n    model.id = json.id;\r\n    model.date = new Date(json.date);\r\n    return model;\r\n  }\r\n\r\n  // toString method to return a string representation of the object\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\n\r\n// Export class for the \"dayId\" field\r\nexport class DayIdFullModel {\r\n  id: number;\r\n  meetingEventId: MeetingEventIDModel;\r\n  dayId: number;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  updatedBy: number;\r\n  updateDate: Date;\r\n  date: Date;\r\n\r\n  // toJson method to convert the object to a JSON string\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      meetingEventId: this.meetingEventId.toJson(),\r\n      dayId: this.dayId,\r\n      startDate: this.startDate.toISOString(),\r\n      endDate: this.endDate.toISOString(),\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate.toISOString(),\r\n      date: this.date.toISOString(),\r\n    };\r\n  }\r\n\r\n  // fromJson method to create an object from a JSON string\r\n  static fromJson(json: any): DayIdFullModel {\r\n    const model = new DayIdFullModel();\r\n    model.id = json.id;\r\n    model.meetingEventId = MeetingEventIDModel.fromJson(json.meetingEventId);\r\n    model.dayId = json.dayId;\r\n    model.startDate = new Date(json.startDate);\r\n    model.endDate = new Date(json.endDate);\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = new Date(json.updateDate);\r\n    model.date = new Date(json.date);\r\n    return model;\r\n  }\r\n\r\n  // toString method to return a string representation of the object\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\n\r\nexport class MemberMeetingEventDayFormInputModel {\r\n  meetingEventId: number;\r\n  dayId: number;\r\n  memberId: number;\r\n\r\n  toJson(): object {\r\n    return {\r\n      meetingEventId: this.meetingEventId,\r\n      dayId: this.dayId,\r\n      memberId: this.memberId,\r\n    };\r\n  }\r\n\r\n  static fromJson(json: any): MemberMeetingEventDayFormInputModel {\r\n    const model = new MemberMeetingEventDayFormInputModel();\r\n    model.meetingEventId = json.meetingEventId;\r\n    model.dayId = json.dayId;\r\n    model.memberId = json.memberId;\r\n    return model;\r\n  }\r\n\r\n  toString(): string {\r\n    return `MemberMeetingEventDayFormInputModel(meetingEventId=${this.meetingEventId}, dayId=${this.dayId}, memberId=${this.memberId})`;\r\n  }\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { MemberMeetingEventDayFormInputModel } from \"@@addons/interfaces/attendance/meeting_event/member/member/day\";\r\n\r\n\r\nexport async function POST_AttendanceScheduleMemberDayBulk(dayInfos: Array<MemberMeetingEventDayFormInputModel>): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/member-day/bulk',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"add-schedule-member-day\"]'),\r\n    formData = JSON.stringify(dayInfos);\r\n\r\n  return Swal.fire({\r\n    title: 'Add Member Day(s)?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        // try {\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSES = networkCallRes.multipleResponse;\r\n        // console.log({ _RESPONSES });\r\n        let errors: Array<{ error: string }> = [];\r\n        if (_RESPONSES !== null) {\r\n          _RESPONSES.forEach((_RESPONSE, i) => {\r\n            // console.log({ \"_RESPONSE._RESPONSE\": _RESPONSE });\r\n            if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n              if (_RESPONSE.unknownError.length > 0) {\r\n                // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n                _RESPONSE.unknownError.forEach(e => {\r\n                  const _errors = e.errors;\r\n                  _errors.forEach(err => {\r\n                    errors.push({ error: `[${\"Entry\".toUpperCase()} ${i+1}] - ${err}` });\r\n                  });\r\n                });\r\n              } else {\r\n                if (_RESPONSE.nameError.length > 0) {\r\n                  // console.log({\"_RESPONSE.nameError\": _RESPONSE.nameError});\r\n\r\n                  _RESPONSE.nameError.forEach(e => {\r\n                    const _errorId = e.id;\r\n                    const _errors = e.errors;\r\n                    _errors.forEach(err => {\r\n                      errors.push({ error: `[${\"Entry\".toUpperCase()} ${i+1}] - ${_errorId.toUpperCase()} :: ${err}` });\r\n                    });\r\n                  });\r\n                }\r\n\r\n              }\r\n            }\r\n          });\r\n\r\n        }\r\n        if (errors.length > 0) {\r\n          const res = https_swal_error_format(errors);\r\n          return Swal.showValidationMessage(\r\n            `${res}`\r\n          );\r\n        }\r\n        return networkCallRes;\r\n        // } catch (error) {\r\n        //   console.error({ error });\r\n        //   let errorHttp = HTTP;\r\n        //   errorHttp['error'] = error;\r\n        //   const networkCallRes = new NetWorkCallResponses(\"post\", errorHttp, true, formContainer);\r\n        //   networkCallRes.postForm\r\n        //   return networkCallRes;\r\n        // }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import { DayOfWeek_I } from '@@addons/interfaces/attendance/day_of_week';\r\nimport { MeetingEventScheduleDay_I } from '@@addons/interfaces/attendance/meeting_event/day';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"member-day-inputs-component\")\r\nexport class MemberDayInputsComponent extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Array })\r\n  public daysOfWeek: DayOfWeek_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  public meetingDays: MeetingEventScheduleDay_I[] = [];\r\n\r\n  @property({ type: String })\r\n  private inputId = Math.random().toString(36).substring(2, 22);\r\n\r\n  @property({ type: String })\r\n  public dayValue?: string;\r\n\r\n  @property({ type: String })\r\n  public startDateValue?: string;\r\n\r\n  @property({ type: String })\r\n  public endDateValue?: string;\r\n\r\n  @property({ type: Boolean })\r\n  public smallView: boolean = false;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({\"this.meetingDays\": this.meetingDays, \"this.daysOfWeek\": this.daysOfWeek});\r\n    \r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    const meetingDays__ = this.meetingDays.map((value) => {\r\n      return html`<mwc-list-item value=\"${value.id}\">${this.getDayOfWeek(value.dayId).day}</mwc-list-item>`;\r\n    });\r\n\r\n    return html`\r\n      <div class=\"container my-4\" id=\"form_input--${this.inputId}\">\r\n        <div class=\"row justify-center\">\r\n          <div class=\"${this.smallView? 'col-md-12': 'col-md-6 col-lg-4'}\">\r\n            <h4 class=\"font-semibold my-2\">Select Day</h4>\r\n            <mwc-select name=\"dayId\" class=\"w-full\" id=\"dayId--${this.inputId}\" label=\"Select Day\" outlined\r\n              required @change=\"${this.handleDayChange}\">\r\n              <mwc-list-item value=\"\">Select Day</mwc-list-item>\r\n              ${html`${meetingDays__}`}\r\n            </mwc-select>\r\n          </div>\r\n          <div class=\"${this.smallView? 'col-md-12': 'col-md-6 col-lg-8'}\">\r\n            <div class=\"container px-0\">\r\n              <div class=\"row justify-center\">\r\n                <div class=\"${this.smallView? 'col-md-12': 'col-md-12 col-lg-6'}\">\r\n                  <h4 class=\"font-semibold my-2\">Select Start Date</h4>\r\n                  <mwc-textfield name=\"startDate\" multiple type=\"date\" class=\"w-full\" id=\"startDate--${this.inputId}\"\r\n                    label=\"Select Date\" outlined required @change=\"${this.handleStartDateChange}\" disabled>\r\n                  </mwc-textfield>\r\n                </div>\r\n                <div class=\"${this.smallView? 'col-md-12': 'col-md-12 col-lg-6'}\">\r\n                  <h4 class=\"font-semibold my-2\">Select End Date</h4>\r\n                  <mwc-textfield name=\"endDate\" multiple type=\"date\" class=\"w-full\" id=\"endDate--${this.inputId}\"\r\n                    label=\"Select Date\" outlined required @change=\"${this.handleEndDateChange}\" disabled>\r\n                  </mwc-textfield>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  getDayOfWeek(dayId: Number): DayOfWeek_I {\r\n    let day: DayOfWeek_I = {id:0, date: new Date(), day: \"-\"};\r\n    this.daysOfWeek.forEach(dayOfWeek => {\r\n      if (dayOfWeek.id === dayId) {\r\n        day = dayOfWeek;\r\n      }\r\n    });\r\n\r\n    return day;\r\n  }\r\n\r\n  getMeetingDay(value: Number): MeetingEventScheduleDay_I {\r\n    let day: MeetingEventScheduleDay_I = {id:0, date: new Date(),};\r\n    this.meetingDays.forEach(meetingDay => {\r\n      if (meetingDay.id === value) {\r\n        day = meetingDay;\r\n      }\r\n    });\r\n\r\n    return day;\r\n  }\r\n\r\n  handleDayChange(event: Event) {\r\n    // @ts-ignore\r\n    const dayValue = event.target.value;\r\n    this.dayValue = dayValue;\r\n\r\n    Array.from(this.querySelectorAll(`[id=\"startDate--${this.inputId}\"]`)).forEach(element => {\r\n      // @ts-ignore\r\n      element.value = this.getMeetingDay(Number.isNaN(this.dayValue)? 0: Number(this.dayValue)).startDate;\r\n\r\n      // @ts-ignore\r\n      this.startDateValue = element.value;\r\n    });\r\n    Array.from(this.querySelectorAll(`[id=\"endDate--${this.inputId}\"]`)).forEach(element => {\r\n      // @ts-ignore\r\n      element.value = this.getMeetingDay(Number.isNaN(this.dayValue)? 0: Number(this.dayValue)).endDate;\r\n\r\n      // @ts-ignore\r\n      this.endDateValue = element.value;\r\n    });\r\n    \r\n\r\n    // console.log({\r\n    //   \"handleDayChange.event.target\": event,\r\n    //   \"handleDayChange.dayValue\": this.dayValue,\r\n    //   \"handleDayChange.startDateValue\": this.startDateValue,\r\n    //   \"handleDayChange.endDateValue\": this.endDateValue,\r\n    // });\r\n\r\n  }\r\n\r\n  handleStartDateChange(event: Event) {\r\n    // @ts-ignore\r\n    this.startDateValue = event.target.value;\r\n    // console.log({\r\n    //   \"handleStartDateChange.event.target\": event.target.value,\r\n    //   \"handleStartDateChange.dayValue\": this.dayValue,\r\n    //   \"handleStartDateChange.startDateValue\": this.startDateValue,\r\n    //   \"handleStartDateChange.endDateValue\": this.endDateValue\r\n    // });\r\n  }\r\n\r\n  handleEndDateChange(event: Event) {\r\n    // @ts-ignore\r\n    this.endDateValue = event.target.value;\r\n    // console.log({\r\n    //   \"handleEndDateChange.event.target\": event.target.value,\r\n    //   \"handleEndDateChange.dayValue\": this.dayValue,\r\n    //   \"handleEndDateChange.startDateValue\": this.startDateValue,\r\n    //   \"handleEndDateChange.endDateValue\": this.endDateValue\r\n    // });\r\n  }\r\n\r\n  firstUpdated() {\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { LitElement, html, css, nothing, TemplateResult } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\nimport './inputs';\r\nimport { DayOfWeek_I } from '@@addons/interfaces/attendance/day_of_week';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-circular-progress';\r\nimport { MeetingEventScheduleDay_I } from '@@addons/interfaces/attendance/meeting_event/day';\r\nimport { MemberMeetingEventDayFormInputModel } from '@@addons/interfaces/attendance/meeting_event/member/member/day';\r\n\r\n@customElement(\"member-day-multiple-inputs-component\")\r\nexport class MemberDayMultipleInputsComponent extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public meetingEventId: number;\r\n\r\n  @property({ type: Number })\r\n  public meetingMemberId: number;\r\n\r\n  @property({ type: Number })\r\n  public currentObjectCount: number = 0;\r\n\r\n  @property({ type: Array })\r\n  public multipleDayObjects: MemberMeetingEventDayFormInputModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private removedInputIndex: number[] = [];\r\n\r\n  @property({ type: Array })\r\n  private addedInputIndex: number[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  private meetingDaysCalled: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private loading: boolean = true;\r\n\r\n  @property({ type: Array })\r\n  public meetingDays: MeetingEventScheduleDay_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  public daysOfWeek: DayOfWeek_I[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  public smallView: boolean = false;\r\n\r\n  // @property({ type: Array })\r\n  // private inputs: Array<MemberDayInputsComponent> = [];\r\n\r\n  // private _inputs: Array<MemberDayInputsComponent> = [];\r\n\r\n  // private set inputs(value: Array<MemberDayInputsComponent>) {\r\n  //   this._inputs = value;\r\n  //   this.requestUpdate();\r\n  // }\r\n\r\n  // private get inputs(): Array<MemberDayInputsComponent> {\r\n  //   return this._inputs;\r\n  // }\r\n\r\n  private _inputs: Array<TemplateResult> = [];\r\n\r\n  private set inputs(value: Array<TemplateResult>) {\r\n    this._inputs = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  private get inputs(): Array<TemplateResult> {\r\n    return this._inputs;\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // document.onreadystatechange = (event) => {\r\n    //   console.log({\"event-event\": event});\r\n\r\n    //   this.addInput(new Event('click'));\r\n    // //   if (document.readyState == \"complete\") this.addInput(new Event('click'));\r\n    // }\r\n\r\n    // console.log({\"meetingEventId\": this.meetingEventId, \"meetingMemberId\": this.meetingMemberId});\r\n    \r\n\r\n    setInterval(() => {\r\n      if (this.meetingDaysCalled == false && this.meetingDays.length > 0) {\r\n        this.addInput(new Event('click'));\r\n\r\n        this.loading = false;\r\n        this.meetingDaysCalled = true;\r\n      }\r\n    }, 1);\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  // addInput(event: Event) {\r\n  //   let newInput = new MemberDayInputsComponent();\r\n  //   newInput.meetingDays = this.meetingDays;\r\n  //   // console.log({ \"newInput-newInput\": newInput });\r\n\r\n  //   let inputs = this.inputs;\r\n  //   inputs.push(newInput);\r\n\r\n  //   setTimeout(() => {\r\n  //     this.inputs = inputs;\r\n  //   }, 10);\r\n  //   // console.log({ \"newInput-this.inputs\": this.inputs });\r\n  // }\r\n\r\n  addInput(event: Event) {\r\n    this.currentObjectCount = this.currentObjectCount + 1;\r\n    let newInput = this.smallView? html`<member-day-inputs-component day-inputs-component--object=\"${this.currentObjectCount}\" \r\n      .meetingDays=\"${this.meetingDays}\" .daysOfWeek=\"${this.daysOfWeek}\" smallView>\r\n    </member-day-inputs-component>`: html`<member-day-inputs-component day-inputs-component--object=\"${this.currentObjectCount}\" \r\n      .meetingDays=\"${this.meetingDays}\" .daysOfWeek=\"${this.daysOfWeek}\">\r\n    </member-day-inputs-component>`;\r\n    // newInput.meetingDays = this.meetingDays;\r\n    // console.log({ \"newInput-newInput\": newInput });\r\n\r\n    let inputs = this.inputs;\r\n    inputs.push(newInput);\r\n\r\n    let addedInputIndex = this.addedInputIndex;\r\n    addedInputIndex.push(this.currentObjectCount - 1);\r\n\r\n    setTimeout(() => {\r\n      this.inputs = inputs;\r\n      this.addedInputIndex = addedInputIndex;\r\n      this.multipleInputsHaveChanged(new Event(\"change\"))\r\n    }, 10);\r\n    // console.log({ \"newInput-this.inputs\": this.inputs });\r\n  }\r\n\r\n  removeInput(index: number) {\r\n    // console.log({ \"this.inputs\": this.inputs });\r\n\r\n\r\n    if (this.currentInputList.length - 1 > 0) {\r\n      let inputs = this.inputs;\r\n\r\n      this.removedInputIndex.push(index);\r\n\r\n      delete inputs[index];\r\n      // inputs.splice(index, 1);\r\n\r\n      setTimeout(() => {\r\n        this.inputs = inputs;\r\n\r\n        this.multipleInputsHaveChanged(new Event(\"change\"))\r\n      }, 10);\r\n    }\r\n  }\r\n\r\n  get currentInputList() {\r\n    let currentList: Array<any> = [];\r\n\r\n    const inputs = this.inputs;\r\n\r\n    inputs.join(\"-\").split(\"-\").forEach(_ => _.length == 0 ? null : currentList.push(_));\r\n\r\n    return currentList;\r\n  }\r\n\r\n  render() {\r\n    // console.log({ \"inputs-inputs.inputs\": this.inputs });\r\n    return this.loading ? html`<div class=\"flex justify-center\">\r\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n      </div>` : html`\r\n      <div @change=\"${this.multipleInputsHaveChanged}\">\r\n          ${this.inputs.map((input, index) => html`\r\n              <div class=\"border rounded-md mb-1\">\r\n                <h3 class=\"shadow p-3 font-bold\">Day Info ${index + 1}</h3>\r\n                <!-- ${\"\" /** input.render()  */} -->\r\n                ${input}\r\n                ${(this.currentInputList.length - 1 > 0) ? html`<div class=\"flex justify-end\">\r\n                  <mwc-button @click=${() => this.removeInput(index)} type=\"button\" class=\"button danger text-right m-1\" raised>Remove</mwc-button>\r\n                  </div>` : nothing}\r\n              </div>\r\n            `,)}\r\n        <div class=\"flex justify-end\">\r\n          <mwc-button @click=${this.addInput} type=\"button\" class=\"button warning text-right m-1\" raised>Add Meeting/ Event Day</mwc-button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  multipleInputsHaveChanged(event: Event) {\r\n\r\n    this.addedInputIndex\r\n\r\n    const inputComponents = Array.from(document.querySelectorAll('[day-inputs-component--object]'));\r\n    // console.log({ inputComponents, \"this.removedInputIndex\": this.removedInputIndex });\r\n\r\n    const notRemovedComponents: Array<any> = [];\r\n\r\n    this.addedInputIndex.forEach((inputIndex) => {\r\n\r\n      if (!this.removedInputIndex.includes(inputIndex)) {\r\n\r\n        if (!notRemovedComponents.includes(inputIndex)) {\r\n          notRemovedComponents.push(inputIndex);\r\n        }\r\n      }\r\n    });\r\n\r\n    // console.log({notRemovedComponents});\r\n\r\n\r\n    this.multipleDayObjects = notRemovedComponents.map((input) => {\r\n      const inputComponent = Array.from(document.querySelectorAll('[day-inputs-component--object=\"' + (input + 1) + '\"]'));\r\n      // console.log({ \"inputComponent---inputComponent\": inputComponent, input });\r\n\r\n      return inputComponent.map(inputElement => {\r\n        // console.log({ \"inputElement---inputElement\": inputElement });\r\n\r\n        let newObject = new MemberMeetingEventDayFormInputModel();\r\n        newObject.meetingEventId = this.meetingEventId;\r\n        // @ts-ignore\r\n        newObject.dayId = Number(inputElement.dayValue ?? 0);\r\n        // @ts-ignore\r\n        newObject.memberId = this.meetingMemberId;\r\n        return newObject;\r\n      })[0];\r\n    });\r\n \r\n\r\n    // console.log({ \"multiple_day_objects\": this.multipleDayObjects });\r\n\r\n  }\r\n\r\n  firstUpdated() {\r\n\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["MemberMeetingEventDayModel","toJson","id","this","meetingEventId","dayId","memberId","updatedBy","updateDate","toISOString","date","memberInfo","undefined","static","json","model","MeetingEventIDModel","DayIdFullModel","fromJson","MeetingAttendanceMemberModel","Date","OrganizationMemberModel","IndividualMemberModel","toString","JSON","stringify","DayIdModel","startDate","endDate","MemberMeetingEventDayFormInputModel","POST_AttendanceScheduleMemberDayBulk","dayInfos","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","formContainer","document","querySelector","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSES","multipleResponse","errors","forEach","_RESPONSE","i","unknownError","length","e","err","push","error","toUpperCase","nameError","_errorId","res","https_swal_error_format","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","response","message","success","setTimeout","window","location","reload","MemberDayInputsComponent","LitElement","constructor","super","daysOfWeek","meetingDays","inputId","Math","random","substring","smallView","connectedCallback","disconnectedCallback","render","meetingDays__","map","html","getDayOfWeek","day","handleDayChange","handleStartDateChange","handleEndDateChange","dayOfWeek","getMeetingDay","meetingDay","event","dayValue","target","Array","from","querySelectorAll","element","Number","isNaN","startDateValue","endDateValue","firstUpdated","createRenderRoot","styles","css","property","type","Boolean","customElement","MemberDayMultipleInputsComponent","currentObjectCount","multipleDayObjects","removedInputIndex","addedInputIndex","meetingDaysCalled","loading","_inputs","inputs","requestUpdate","setInterval","addInput","Event","newInput","multipleInputsHaveChanged","removeInput","index","currentInputList","currentList","join","split","_","input","nothing","notRemovedComponents","inputIndex","includes","inputElement","newObject","meetingMemberId"],"sourceRoot":""}