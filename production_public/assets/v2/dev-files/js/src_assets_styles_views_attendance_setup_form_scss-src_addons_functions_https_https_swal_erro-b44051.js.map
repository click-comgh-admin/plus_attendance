{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_assets_styles_views_attendance_setup_form_scss-src_addons_functions_https_https_swal_erro-b44051.js","mappings":"0SAAO,MAAMA,EAAc,yOAKdC,EAA0B,CAACC,EAAYC,GAAW,KAE7D,GAAIC,MAAMC,QAAQH,GAAQ,CAExB,IAAII,GADUH,EAAWH,EAAc,IAChB,OAavB,OAZ0BE,EAGpBK,SAASC,IAGXF,GADkB,iBAATE,EACG,OAAOA,WAEP,OAAOA,EAAKN,c,IAIrBI,GAAsB,O,CAE7B,MAAM,IAAIG,MAAM,gC,4ZClBpB,MAWaC,EAAc,CAAOC,EAAeC,EAAcC,IAA2B,OAAD,6BACvF,MAAMC,EAAM,EAAAC,UAAA,0BAAsC,uBAChDC,EAAaH,EACbI,GAAQ,IAAAC,YAAWF,GAEnBG,EADWC,KAAKC,UAAU,CAAE,OAAS,IAAAC,cAAaL,KAMpD,GArBsB,CAACM,IACvB,MAAMC,EAAM,IAAIC,KAIhB,OAHuBC,KAAKC,IAAIJ,EAAKK,UAAYJ,EAAII,WACV,KAEnB,E,EAcJC,CAFD,IAAIJ,MAAK,IAAAP,YAAWF,EAAa,WAsBlD,OAAOC,QAjBD,IAAAa,MAAKhB,EAAK,CACdiB,OAAQ,OACRC,KAAMb,IACL,GAAMc,MAAYC,GAAa,OAAD,6BAE/B,GAAIA,EAASC,SAASlB,MAAQiB,EAASC,SAASC,KAAOF,EAASC,SAASE,OAAQ,CAE/E,MAAMpB,GAAQ,IAAAqB,cAAaC,OAAOL,EAASC,SAASlB,SACpD,IAAAuB,aAAYxB,EAAYC,EAAO,KAC/B,IAAAwB,qBAAoBzB,EAAa,SAAS,IAAIS,MAAOiB,cAAe,G,YAI9DC,EAAiBhC,EAAOC,EAAMC,EAExC,KAIJ,IAEM8B,EAAmB,CAAOhC,EAAeC,EAAcC,IAA2B,OAAD,6BACrF,MAAMC,EAAM,EAAAC,UAAA,0BAAsC,mBAChDC,EAAaH,EAEbM,EADWC,KAAKC,UAAU,CAAE,MAASV,EAAO,GAAMC,UAG9C,IAAAkB,MAAKhB,EAAK,CACdiB,OAAQ,OACRC,KAAMb,IACL,GAAMc,MAAMC,IAEb,GAAIA,EAASC,SAASlB,MAAO,CAC3B,MAAMA,GAAQ,IAAAqB,cAAaC,OAAOL,EAASC,SAASlB,SACpD,IAAAuB,aAAYxB,EAAYC,EAAO,KAC/B,IAAAwB,qBAAoBzB,EAAa,SAAS,IAAIS,MAAOiB,cAAe,G,IAK1E,IACaE,EAAa,CAAOjC,EAAekC,EAAYhC,IAA2B,OAAD,6BACpF,MAAMD,GAAO,IAAA0B,cAAaC,OAAOM,IAC/B7B,EAAaH,EAIfiC,OAAoB,YAAI,CAAEC,WAAY,CAAEC,IAAK,CAAErC,MAAOA,EAAOkC,GAAIjC,EAAMI,WAAYA,KAIhE,KAHC,IAAAE,YAAWF,SAIvB2B,EAAiBhC,EAAOC,EAAMC,SAE9BH,EAAYC,EAAOC,EAAMC,EAEnC,G,mICpFO,MAAMoC,EAAiB,KAC5B,MAAMC,EAAkB,IAAIC,gBAAgBL,OAAOM,SAASC,QAG5D,OAFeC,OAAOC,YAAYL,EAAgBM,UAErC,EAEFC,EAAqBC,IAChC,MAAMR,EAAkB,IAAIC,gBAAgBL,OAAOM,SAASC,QACtDM,EAASL,OAAOC,YAAYL,EAAgBM,WAClD,IAAII,EAAgB,KACpB,IAAK,MAAMC,KAAOF,EACZE,IAAQH,IACVE,EAAQD,EAAOE,IAGnB,OAAOD,CAAK,EAEDE,EAAwBJ,GACX,IAAIP,gBAAgBL,OAAOM,SAASC,QAC7BU,OAAOL,GAI3BM,EAAsBC,IAGjC,IAAIC,EAAiB,GACjBC,EAAQ,EACZ,IAAK,MAAMN,KAAOI,EAChBE,GAAS,EACTD,GAAU,GAAIC,EAAQ,EAAK,IAAK,KAAKN,KAAOI,EAAOJ,KAErD,OAAOK,CAAM,C,6RChCR,MAAME,EAQXC,gBAAgBC,GACd,MAAMC,EAAQ,IAAIH,EAOlB,OANAG,EAAM1B,GAAKyB,EAAKzB,GAChB0B,EAAMC,eAAiBC,EAAoBC,SAASJ,EAAKE,gBACzDD,EAAMI,iBAAmBC,EAAsBF,SAASJ,EAAKK,kBAC7DJ,EAAMM,UAAYP,EAAKO,UACvBN,EAAMO,WAAa,IAAIrD,KAAK6C,EAAKQ,YACjCP,EAAMhD,KAAO,IAAIE,KAAK6C,EAAK/C,MACpBgD,CACT,CAEAQ,SACE,MAAO,CACLlC,GAAImC,KAAKnC,GACT2B,eAAgBQ,KAAKR,eAAeO,SACpCJ,iBAAkBK,KAAKL,iBAAiBI,SACxCF,UAAWG,KAAKH,UAChBC,WAAYE,KAAKF,WAAWG,cAC5B1D,KAAMyD,KAAKzD,KAAK0D,cAEpB,CAEAC,WACE,OAAO9D,KAAKC,UAAU2D,KAAKD,SAAU,KAAM,EAC7C,EAGK,MAAMN,EA4BXJ,gBAAgBC,GACd,MAAMC,EAAQ,IAAIE,EA2BlB,OA1BAF,EAAM1B,GAAKyB,EAAKzB,GAChB0B,EAAM1D,KAAOyD,EAAKzD,KAClB0D,EAAMY,WAAab,EAAKa,WACxBZ,EAAMa,KAAOd,EAAKc,KAClBb,EAAMc,SAAWC,EAAcZ,SAASJ,EAAKe,UAC7Cd,EAAMgB,SAAWC,EAAcd,SAASJ,EAAKiB,UAC7ChB,EAAMI,iBAAmBC,EAAsBF,SAASJ,EAAKK,kBAC7DJ,EAAMkB,YAAcnB,EAAKmB,YACzBlB,EAAMmB,UAAYpB,EAAKoB,UACvBnB,EAAMoB,UAAYrB,EAAKqB,UACvBpB,EAAMqB,aAAetB,EAAKsB,aAC1BrB,EAAMsB,WAAavB,EAAKuB,WACxBtB,EAAMuB,aAAexB,EAAKwB,aAC1BvB,EAAMwB,QAAUzB,EAAKyB,QACrBxB,EAAMyB,YAAc1B,EAAK0B,YACzBzB,EAAM0B,mBAAqB3B,EAAK2B,mBAChC1B,EAAM2B,mBAAqB5B,EAAK4B,mBAChC3B,EAAM4B,gBAAkB7B,EAAK6B,gBAC7B5B,EAAM6B,0BAA4B9B,EAAK8B,0BACvC7B,EAAM8B,wBAA0B/B,EAAK+B,wBACrC9B,EAAM+B,OAAShC,EAAKgC,OACpB/B,EAAMgC,WAAajC,EAAKiC,WACxBhC,EAAMM,UAAYP,EAAKO,UACvBN,EAAMO,WAAa,IAAIrD,KAAK6C,EAAKQ,YACjCP,EAAMhD,KAAO,IAAIE,KAAK6C,EAAK/C,MAC3BgD,EAAMiC,kBAAoBlC,EAAKkC,kBAAkBC,KAAKC,GAAcC,EAAqBjC,SAASgC,KAC3FnC,CACT,CAEAQ,SACE,MAAO,CACLlC,GAAImC,KAAKnC,GACThC,KAAMmE,KAAKnE,KACXsE,WAAYH,KAAKG,WACjBC,KAAMJ,KAAKI,KACXC,SAAUL,KAAKK,SAASN,SACxBQ,SAAUP,KAAKO,SAASR,SACxBJ,iBAAkBK,KAAKL,iBAAiBI,SACxCU,YAAaT,KAAKS,YAClBC,UAAWV,KAAKU,UAChBC,UAAWX,KAAKW,UAChBC,aAAcZ,KAAKY,aACnBC,WAAYb,KAAKa,WACjBC,aAAcd,KAAKc,aACnBC,QAASf,KAAKe,QACdC,YAAahB,KAAKgB,YAClBC,mBAAoBjB,KAAKiB,mBACzBC,mBAAoBlB,KAAKkB,mBACzBC,gBAAiBnB,KAAKmB,gBACtBC,0BAA2BpB,KAAKoB,0BAChCC,wBAAyBrB,KAAKqB,wBAC9BC,OAAQtB,KAAKsB,OACbC,WAAYvB,KAAKuB,WACjB1B,UAAWG,KAAKH,UAChBC,WAAYE,KAAKF,WAAWG,cAC5B1D,KAAMyD,KAAKzD,KAAK0D,cAChBuB,kBAAmBxB,KAAKwB,kBAAkBC,KAAKC,GAA+BA,EAAK3B,WAEvF,CAEAG,WACE,OAAO9D,KAAKC,UAAU2D,KAAKD,SAAU,KAAM,EAC7C,EAGK,MAAMS,EASXnB,gBAAgBC,GACd,MAAMC,EAAQ,IAAIiB,EAQlB,OAPAjB,EAAM1B,GAAKyB,EAAKzB,GAChB0B,EAAMa,KAAOd,EAAKc,KAClBb,EAAMqC,UAAYtC,EAAKsC,UACvBrC,EAAMsC,UAAYvC,EAAKuC,UACvBtC,EAAMuC,aAAe,IAAIrF,KAAK6C,EAAKwC,cACnCvC,EAAMM,UAAYP,EAAKO,UACvBN,EAAMO,WAAa,IAAIrD,KAAK6C,EAAKQ,YAC1BP,CACT,CAEAQ,SACE,MAAO,CACLlC,GAAImC,KAAKnC,GACTuC,KAAMJ,KAAKI,KACXwB,UAAW5B,KAAK4B,UAChBC,UAAW7B,KAAK6B,UAChBC,aAAc9B,KAAK8B,aAAa7B,cAChCJ,UAAWG,KAAKH,UAChBC,WAAYE,KAAKF,WAAWG,cAEhC,CAEAC,WACE,OAAO9D,KAAKC,UAAU2D,KAAKD,SAAU,KAAM,EAC7C,EAGK,MAAMO,EA8BXjB,gBAAgBC,GACd,MAAMC,EAAQ,IAAIe,EA6BlB,OA5BAf,EAAM1B,GAAKyB,EAAKzB,GAChB0B,EAAMa,KAAOd,EAAKc,KAClBb,EAAMwC,YAAczC,EAAKyC,YACzBxC,EAAMyC,QAAU1C,EAAK0C,QACrBzC,EAAM0C,cAAgB3C,EAAK2C,cAC3B1C,EAAM2C,mBAAqB5C,EAAK4C,mBAChC3C,EAAM4C,iBAAmB7C,EAAK6C,iBAC9B5C,EAAM6C,gBAAkB9C,EAAK8C,gBAC7B7C,EAAM8C,eAAiB/C,EAAK+C,eAC5B9C,EAAM+C,eAAiBhD,EAAKgD,eAC5B/C,EAAMgD,yBAA2BjD,EAAKiD,yBACtChD,EAAMiD,OAASlD,EAAKkD,OACpBjD,EAAMkD,SAAWnD,EAAKmD,SACtBlD,EAAMmD,aAAepD,EAAKoD,aAC1BnD,EAAMoD,UAAYrD,EAAKqD,UACvBpD,EAAMqD,qBAAuBtD,EAAKsD,qBAClCrD,EAAMsD,iBAAmB,IAAIpG,KAAK6C,EAAKuD,kBACvCtD,EAAMuD,gBAAkBxD,EAAKwD,gBAC7BvD,EAAMwD,KAAOzD,EAAKyD,KAClBxD,EAAMyD,OAAS1D,EAAK0D,OACpBzD,EAAM0D,QAAU3D,EAAK2D,QACrB1D,EAAM2D,gBAAkBtD,EAAsBF,SAASJ,EAAK4D,iBAC5D3D,EAAM4D,QAAU7D,EAAK6D,QACrB5D,EAAMuC,aAAe,IAAIrF,KAAK6C,EAAKwC,cACnCvC,EAAMM,UAAYP,EAAKO,UACvBN,EAAMO,WAAa,IAAIrD,KAAK6C,EAAKQ,YACjCP,EAAM6D,iBAAmBC,EAAsB3D,SAASJ,EAAK8D,kBAC7D7D,EAAM+D,YAAchE,EAAKgE,YAAY7B,KAAKC,GAAc6B,EAAiB7D,SAASgC,KAC3EnC,CACT,CAEAQ,SACE,MAAO,CACLlC,GAAImC,KAAKnC,GACTuC,KAAMJ,KAAKI,KACX2B,YAAa/B,KAAK+B,YAClBC,QAAShC,KAAKgC,QACdC,cAAejC,KAAKiC,cACpBC,mBAAoBlC,KAAKkC,mBACzBC,iBAAkBnC,KAAKmC,iBACvBC,gBAAiBpC,KAAKoC,gBACtBC,eAAgBrC,KAAKqC,eACrBC,eAAgBtC,KAAKsC,eACrBC,yBAA0BvC,KAAKuC,yBAC/BC,OAAQxC,KAAKwC,OACbC,SAAUzC,KAAKyC,SACfC,aAAc1C,KAAK0C,aACnBC,UAAW3C,KAAK2C,UAChBC,qBAAsB5C,KAAK4C,qBAC3BC,iBAAkB7C,KAAK6C,iBAAiB5C,cACxC6C,gBAAiB9C,KAAK8C,gBACtBC,KAAM/C,KAAK+C,KACXC,OAAQhD,KAAKgD,OACbC,QAASjD,KAAKiD,QACdC,gBAAiBlD,KAAKkD,gBAAgBnD,SACtCoD,QAASnD,KAAKmD,QACdrB,aAAc9B,KAAK8B,aAAa7B,cAChCJ,UAAWG,KAAKH,UAChBC,WAAYE,KAAKF,WAAWG,cAC5BmD,iBAAkBpD,KAAKoD,iBAAiBrD,SACxCuD,YAAatD,KAAKsD,YAAY7B,KAAKC,GAA2BA,EAAK3B,WAEvE,CAEAG,WACE,OAAO9D,KAAKC,UAAU2D,KAAKD,SAAU,KAAM,EAC7C,EAGK,MAAMH,EASXP,gBAAgBC,GACd,MAAMC,EAAQ,IAAIK,EAQlB,OAPAL,EAAM1B,GAAKyB,EAAKzB,GAChB0B,EAAMc,SAAWmD,OAAOC,MAAMnE,EAAKe,UAAYC,EAAcZ,SAASJ,EAAKe,UAAYmD,OAAOlE,EAAKe,UACnGd,EAAMmE,SAAWpE,EAAKoE,SACtBnE,EAAMsC,UAAYvC,EAAKuC,UACvBtC,EAAMM,UAAYP,EAAKO,UACvBN,EAAMO,WAAaR,EAAKQ,WAAa,IAAIrD,KAAK6C,EAAKQ,YAAc,KACjEP,EAAMhD,KAAO+C,EAAK/C,KAAO,IAAIE,KAAK6C,EAAK/C,MAAQ,KACxCgD,CACT,CAEAQ,SACE,MAAO,CACLlC,GAAImC,KAAKnC,GAETwC,SAAUmD,OAAOC,MAAMzD,KAAKK,UAAYL,KAAKK,SAASN,SAAWC,KAAKK,SACtEqD,SAAU1D,KAAK0D,SACf7B,UAAW7B,KAAK6B,UAChBhC,UAAWG,KAAKH,UAChBC,WAAYE,KAAKF,WAAaE,KAAKF,WAAWG,cAAgB,KAC9D1D,KAAMyD,KAAKzD,KAAOyD,KAAKzD,KAAK0D,cAAgB,KAEhD,CAEAC,WACE,OAAO9D,KAAKC,UAAU2D,KAAKD,SAAU,KAAM,EAC7C,EAGK,MAAMwD,EAMXlE,gBAAgBC,GACd,MAAMC,EAAQ,IAAIgE,EAKlB,OAJAhE,EAAM1B,GAAKyB,EAAKzB,GAChB0B,EAAMa,KAAOd,EAAKc,KAClBb,EAAMoE,MAAQrE,EAAKqE,MACnBpE,EAAMqE,KAAOtE,EAAKsE,KACXrE,CACT,CAEAQ,SACE,MAAO,CACLlC,GAAImC,KAAKnC,GACTuC,KAAMJ,KAAKI,KACXuD,MAAO3D,KAAK2D,MACZC,KAAM5D,KAAK4D,KAEf,CAEA1D,WACE,OAAO9D,KAAKC,UAAU2D,KAAKD,SAAU,KAAM,EAC7C,EAGK,MAAMsD,EAQXhE,gBAAgBC,GACd,MAAMC,EAAQ,IAAI8D,EAOlB,OANA9D,EAAM1B,GAAKyB,EAAKzB,GAChB0B,EAAMsE,OAASvE,EAAKuE,OACpBtE,EAAMuE,UAAYxE,EAAKwE,UACvBvE,EAAMwE,gBAAkBzE,EAAKyE,gBAC7BxE,EAAMyE,mBAAqBC,EAAuBvE,SAASJ,EAAK0E,oBAChEzE,EAAM2E,aAAe,IAAIzH,KAAK6C,EAAK4E,cAC5B3E,CACT,CAEAQ,SACE,MAAO,CACLlC,GAAImC,KAAKnC,GACTgG,OAAQ7D,KAAK6D,OACbC,UAAW9D,KAAK8D,UAChBC,gBAAiB/D,KAAK+D,gBACtBC,mBAAoBhE,KAAKgE,mBAAmBjE,SAC5CmE,aAAclE,KAAKkE,aAAajE,cAEpC,CAEAC,WACE,OAAO9D,KAAKC,UAAU2D,KAAKD,SAAU,KAAM,EAC7C,EAGK,MAAMkE,EAIX5E,gBAAgBC,GACd,MAAMC,EAAQ,IAAI0E,EAGlB,OAFA1E,EAAM,YAAc4E,EAAYzE,SAASJ,EAAK,aAC9CC,EAAM,YAAc4E,EAAYzE,SAASJ,EAAK,aACvCC,CACT,CAEAQ,SACE,MAAO,CACL,WAAYC,KAAK,YAAYD,SAC7B,WAAYC,KAAK,YAAYD,SAEjC,CAEAG,WACE,OAAO9D,KAAKC,UAAU2D,KAAKD,SAAU,KAAM,EAC7C,EAGK,MAAMoE,EAMX9E,gBAAgBC,GACd,MAAMC,EAAQ,IAAI4E,EAKlB,OAJA5E,EAAM6E,UAAY9E,EAAK8E,UACvB7E,EAAM8E,YAAc/E,EAAK+E,YACzB9E,EAAM+E,WAAa,IAAI7H,KAAK6C,EAAKgF,YACjC/E,EAAMgF,YAAcjF,EAAKiF,YAClBhF,CACT,CAEAQ,SACE,MAAO,CACLqE,UAAWpE,KAAKoE,UAChBC,YAAarE,KAAKqE,YAClBC,WAAYtE,KAAKsE,WAAWrE,cAC5BsE,YAAavE,KAAKuE,YAEtB,CAEArE,WACE,OAAO9D,KAAKC,UAAU2D,KAAKD,SAAU,KAAM,EAC7C,EAGK,MAAM4B,EAQXtC,gBAAgBC,GACd,MAAMC,EAAQ,IAAIoC,EAOlB,OANApC,EAAM1B,GAAKyB,EAAKzB,GAChB0B,EAAMC,eAAiBF,EAAKE,eAC5BD,EAAMI,iBAAmBC,EAAsBF,SAASJ,EAAKK,kBAC7DJ,EAAMM,UAAYP,EAAKO,UACvBN,EAAMO,WAAa,IAAIrD,KAAK6C,EAAKQ,YACjCP,EAAMhD,KAAO,IAAIE,KAAK6C,EAAK/C,MACpBgD,CACT,CAEAQ,SACE,MAAO,CACLlC,GAAImC,KAAKnC,GACT2B,eAAgBQ,KAAKR,eACrBG,iBAAkBK,KAAKL,iBAAiBI,SACxCF,UAAWG,KAAKH,UAChBC,WAAYE,KAAKF,WAAWG,cAC5B1D,KAAMyD,KAAKzD,KAAK0D,cAEpB,CAEAC,WACE,OAAO9D,KAAKC,UAAU2D,KAAKD,SAAU,KAAM,EAC7C,E,kDCxcK,MAAMyE,EAAY,CACvB,uBAA0B,GAC1B,SAAY,GACZ,mBAAsB,GACtB,UAAa,GACb,UAAa,GACb,wBAA2B,GAC3B,oBAAuB,GACvB,wBAA2B,G","sources":["webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/functions/login/main.ts","webpack://webpackNumbers/./src/addons/functions/url_query_params/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/schedules/categories/index.ts","webpack://webpackNumbers/./src/view/attendance/page__id.ts"],"sourcesContent":["export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { base64Decode, base64Encode } from \"@@addons/functions/base64\";\r\nimport { get_cookie, set_cookies, set_cookies_minutes } from \"@@addons/functions/cookies\";\r\nimport { LoginTokenType_I, } from '@@addons/interfaces/network_calls/login/login_token';\r\n\r\nconst get_differences = (date: Date) => {\r\n  const now = new Date();\r\n  const msBetweenDates = Math.abs(date.getTime() - now.getTime());\r\n  const hoursBetweenDated = msBetweenDates / (60 * 60 * 1000);\r\n  // console.log({ msBetweenDates, hoursBetweenDated, });\r\n  if (hoursBetweenDated < 24) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\nexport const verifyToken = async (email: string, _id_: string, type: LoginTokenType_I) => {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/verify-token',\r\n    cookieName = type,\r\n    token = get_cookie(cookieName),\r\n    userInfo = JSON.stringify({ \"token\": base64Decode(token) }),\r\n    formData = userInfo;\r\n  const cookieDate = new Date(get_cookie(cookieName + \"_date\"));\r\n  // console.log({ \"force_check, now\": get_differences(cookieDate) });\r\n  const force_check = get_differences(cookieDate);\r\n\r\n  if (!force_check) {\r\n    await http(url, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    }, true).then(async (response) => {\r\n      // console.log({ response: response });\r\n      if (response.jsonData.token & response.jsonData.user & response.jsonData.expiry) {\r\n        // console.log({\"valid token\": true, \"response.jsonData.token\": response.jsonData.token})\r\n        const token = base64Encode(String(response.jsonData.token));\r\n        set_cookies(cookieName, token, 10);\r\n        set_cookies_minutes(cookieName + \"_date\", new Date().toUTCString(), 10);\r\n        // console.log({ \"response.token\": response.token });\r\n      } else {\r\n        // console.log({\"valid token\": false, \"response.jsonData.token\": response.jsonData.token})\r\n        await generateNewToken(email, _id_, type);\r\n      }\r\n    });\r\n  } else {\r\n    return token;\r\n  }\r\n}\r\n\r\nconst generateNewToken = async (email: string, _id_: string, type: LoginTokenType_I) => {\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/login-id',\r\n    cookieName = type,\r\n    userInfo = JSON.stringify({ \"email\": email, \"id\": _id_ }),\r\n    formData = userInfo;\r\n\r\n  await http(url, {\r\n    method: \"POST\",\r\n    body: formData,\r\n  }, true).then((response) => {\r\n    // console.log({ response: response });\r\n    if (response.jsonData.token) {\r\n      const token = base64Encode(String(response.jsonData.token));\r\n      set_cookies(cookieName, token, 10);\r\n      set_cookies_minutes(cookieName + \"_date\", new Date().toUTCString(), 10);\r\n      // console.log({ \"response.token\": response.token });\r\n    }\r\n\r\n  });\r\n}\r\nexport const tokenLogin = async (email: string, id: Number, type: LoginTokenType_I) => {\r\n  const _id_ = base64Encode(String(id)),\r\n    cookieName = type;\r\n  // console.log({\"_id__id__id_\": _id_});\r\n  // console.log({ email, id });\r\n  // @ts-ignore\r\n  window['supersecret'] = { unknowable: { ops: { email: email, id: _id_, cookieName: cookieName } } };\r\n  const _get_cookie = get_cookie(cookieName);\r\n  // console.log({ _get_cookie });\r\n\r\n  if (_get_cookie == '') {\r\n    await generateNewToken(email, _id_, type);\r\n  } else {\r\n    await verifyToken(email, _id_, type);\r\n  }\r\n};","export const urlQueryParams = () => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n\r\n  return params;\r\n}\r\nexport const urlQueryParamsGet = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  let value: string = null;\r\n  for (const key in params) {\r\n    if (key === query) {\r\n      value = params[key]\r\n    }\r\n  }\r\n  return value;\r\n}\r\nexport const urlQueryParamsGetAll = (query: string) => {\r\n  const urlSearchParams = new URLSearchParams(window.location.search);\r\n  const params = urlSearchParams.getAll(query);\r\n  return params;\r\n}\r\n\r\nexport const urlQueryParamsJoin = (object:{\r\n  [k: string]: string;\r\n}) => {\r\n  let urlStr: string = \"\";\r\n  let index = 0;\r\n  for (const key in object) {\r\n    index += 1; \r\n    urlStr += `${(index > 1) ? \"&\": \"\"}${key}=${object[key]}`;\r\n  }\r\n  return urlStr;\r\n}","export class MeetingEventCategoryModel {\n  id: number;\n  meetingEventId: MeetingEventIDModel;\n  memberCategoryId: MemberCategoryIDModel;\n  updatedBy: number;\n  updateDate: Date;\n  date: Date;\n\n  static fromJson(json: any): MeetingEventCategoryModel {\n    const model = new MeetingEventCategoryModel();\n    model.id = json.id;\n    model.meetingEventId = MeetingEventIDModel.fromJson(json.meetingEventId);\n    model.memberCategoryId = MemberCategoryIDModel.fromJson(json.memberCategoryId);\n    model.updatedBy = json.updatedBy;\n    model.updateDate = new Date(json.updateDate);\n    model.date = new Date(json.date);\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      meetingEventId: this.meetingEventId.toJson(),\n      memberCategoryId: this.memberCategoryId.toJson(),\n      updatedBy: this.updatedBy,\n      updateDate: this.updateDate.toISOString(),\n      date: this.date.toISOString(),\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class MeetingEventIDModel {\n  id: number;\n  type: number;\n  memberType: number;\n  name: string;\n  clientId: ClientIDModel;\n  branchId: BranchIDModel;\n  memberCategoryId: MemberCategoryIDModel;\n  meetingSpan: number;\n  startTime: string;\n  closeTime: string;\n  latenessTime: null;\n  isRecuring: boolean;\n  hasBreakTime: boolean;\n  hasDuty: boolean;\n  hasOvertime: boolean;\n  virtualMeetingLink: string;\n  virtualMeetingType: number;\n  meetingLocation: number;\n  expectedMonthlyAttendance: number;\n  activeMonthlyAttendance: number;\n  agenda: string;\n  agendaFile: string;\n  updatedBy: number;\n  updateDate: Date;\n  date: Date;\n  meetingCategories: MeetingCategoryModel[];\n\n  static fromJson(json: any): MeetingEventIDModel {\n    const model = new MeetingEventIDModel();\n    model.id = json.id;\n    model.type = json.type;\n    model.memberType = json.memberType;\n    model.name = json.name;\n    model.clientId = ClientIDModel.fromJson(json.clientId);\n    model.branchId = BranchIDModel.fromJson(json.branchId);\n    model.memberCategoryId = MemberCategoryIDModel.fromJson(json.memberCategoryId);\n    model.meetingSpan = json.meetingSpan;\n    model.startTime = json.startTime;\n    model.closeTime = json.closeTime;\n    model.latenessTime = json.latenessTime;\n    model.isRecuring = json.isRecuring;\n    model.hasBreakTime = json.hasBreakTime;\n    model.hasDuty = json.hasDuty;\n    model.hasOvertime = json.hasOvertime;\n    model.virtualMeetingLink = json.virtualMeetingLink;\n    model.virtualMeetingType = json.virtualMeetingType;\n    model.meetingLocation = json.meetingLocation;\n    model.expectedMonthlyAttendance = json.expectedMonthlyAttendance;\n    model.activeMonthlyAttendance = json.activeMonthlyAttendance;\n    model.agenda = json.agenda;\n    model.agendaFile = json.agendaFile;\n    model.updatedBy = json.updatedBy;\n    model.updateDate = new Date(json.updateDate);\n    model.date = new Date(json.date);\n    model.meetingCategories = json.meetingCategories.map((item: any) => MeetingCategoryModel.fromJson(item));\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      type: this.type,\n      memberType: this.memberType,\n      name: this.name,\n      clientId: this.clientId.toJson(),\n      branchId: this.branchId.toJson(),\n      memberCategoryId: this.memberCategoryId.toJson(),\n      meetingSpan: this.meetingSpan,\n      startTime: this.startTime,\n      closeTime: this.closeTime,\n      latenessTime: this.latenessTime,\n      isRecuring: this.isRecuring,\n      hasBreakTime: this.hasBreakTime,\n      hasDuty: this.hasDuty,\n      hasOvertime: this.hasOvertime,\n      virtualMeetingLink: this.virtualMeetingLink,\n      virtualMeetingType: this.virtualMeetingType,\n      meetingLocation: this.meetingLocation,\n      expectedMonthlyAttendance: this.expectedMonthlyAttendance,\n      activeMonthlyAttendance: this.activeMonthlyAttendance,\n      agenda: this.agenda,\n      agendaFile: this.agendaFile,\n      updatedBy: this.updatedBy,\n      updateDate: this.updateDate.toISOString(),\n      date: this.date.toISOString(),\n      meetingCategories: this.meetingCategories.map((item: MeetingCategoryModel) => item.toJson()),\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class BranchIDModel {\n  id: number;\n  name: string;\n  accountId: number;\n  createdBy: number;\n  creationDate: Date;\n  updatedBy: number;\n  updateDate: Date;\n\n  static fromJson(json: any): BranchIDModel {\n    const model = new BranchIDModel();\n    model.id = json.id;\n    model.name = json.name;\n    model.accountId = json.accountId;\n    model.createdBy = json.createdBy;\n    model.creationDate = new Date(json.creationDate);\n    model.updatedBy = json.updatedBy;\n    model.updateDate = new Date(json.updateDate);\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      name: this.name,\n      accountId: this.accountId,\n      createdBy: this.createdBy,\n      creationDate: this.creationDate.toISOString(),\n      updatedBy: this.updatedBy,\n      updateDate: this.updateDate.toISOString(),\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class ClientIDModel {\n  id: number;\n  name: string;\n  accountType: number;\n  country: string;\n  stateProvince: string;\n  applicantFirstname: string;\n  applicantSurname: string;\n  applicantGender: number;\n  applicantPhone: string;\n  applicantEmail: string;\n  applicantDesignationRole: number;\n  region: number;\n  district: number;\n  constituency: number;\n  community: string;\n  subscriptionDuration: string;\n  subscriptionDate: Date;\n  subscriptionFee: string;\n  logo: string;\n  status: number;\n  archive: number;\n  accountCategory: MemberCategoryIDModel;\n  website: string;\n  creationDate: Date;\n  updatedBy: number;\n  updateDate: Date;\n  subscriptionInfo: SubscriptionInfoModel;\n  countryInfo: CountryInfoModel[];\n\n  static fromJson(json: any): ClientIDModel {\n    const model = new ClientIDModel();\n    model.id = json.id;\n    model.name = json.name;\n    model.accountType = json.accountType;\n    model.country = json.country;\n    model.stateProvince = json.stateProvince;\n    model.applicantFirstname = json.applicantFirstname;\n    model.applicantSurname = json.applicantSurname;\n    model.applicantGender = json.applicantGender;\n    model.applicantPhone = json.applicantPhone;\n    model.applicantEmail = json.applicantEmail;\n    model.applicantDesignationRole = json.applicantDesignationRole;\n    model.region = json.region;\n    model.district = json.district;\n    model.constituency = json.constituency;\n    model.community = json.community;\n    model.subscriptionDuration = json.subscriptionDuration;\n    model.subscriptionDate = new Date(json.subscriptionDate);\n    model.subscriptionFee = json.subscriptionFee;\n    model.logo = json.logo;\n    model.status = json.status;\n    model.archive = json.archive;\n    model.accountCategory = MemberCategoryIDModel.fromJson(json.accountCategory);\n    model.website = json.website;\n    model.creationDate = new Date(json.creationDate);\n    model.updatedBy = json.updatedBy;\n    model.updateDate = new Date(json.updateDate);\n    model.subscriptionInfo = SubscriptionInfoModel.fromJson(json.subscriptionInfo);\n    model.countryInfo = json.countryInfo.map((item: any) => CountryInfoModel.fromJson(item));\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      name: this.name,\n      accountType: this.accountType,\n      country: this.country,\n      stateProvince: this.stateProvince,\n      applicantFirstname: this.applicantFirstname,\n      applicantSurname: this.applicantSurname,\n      applicantGender: this.applicantGender,\n      applicantPhone: this.applicantPhone,\n      applicantEmail: this.applicantEmail,\n      applicantDesignationRole: this.applicantDesignationRole,\n      region: this.region,\n      district: this.district,\n      constituency: this.constituency,\n      community: this.community,\n      subscriptionDuration: this.subscriptionDuration,\n      subscriptionDate: this.subscriptionDate.toISOString(),\n      subscriptionFee: this.subscriptionFee,\n      logo: this.logo,\n      status: this.status,\n      archive: this.archive,\n      accountCategory: this.accountCategory.toJson(),\n      website: this.website,\n      creationDate: this.creationDate.toISOString(),\n      updatedBy: this.updatedBy,\n      updateDate: this.updateDate.toISOString(),\n      subscriptionInfo: this.subscriptionInfo.toJson(),\n      countryInfo: this.countryInfo.map((item: CountryInfoModel) => item.toJson()),\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class MemberCategoryIDModel {\n  id: number;\n  clientId: ClientIDModel | number;\n  category: string;\n  createdBy: number;\n  updatedBy: number;\n  updateDate: Date | null;\n  date: Date | null;\n\n  static fromJson(json: any): MemberCategoryIDModel {\n    const model = new MemberCategoryIDModel();\n    model.id = json.id;\n    model.clientId = Number.isNaN(json.clientId) ? ClientIDModel.fromJson(json.clientId) : Number(json.clientId);\n    model.category = json.category;\n    model.createdBy = json.createdBy;\n    model.updatedBy = json.updatedBy;\n    model.updateDate = json.updateDate ? new Date(json.updateDate) : null;\n    model.date = json.date ? new Date(json.date) : null;\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      //@ts-ignore\n      clientId: Number.isNaN(this.clientId) ? this.clientId.toJson() : this.clientId,\n      category: this.category,\n      createdBy: this.createdBy,\n      updatedBy: this.updatedBy,\n      updateDate: this.updateDate ? this.updateDate.toISOString() : null,\n      date: this.date ? this.date.toISOString() : null,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class CountryInfoModel {\n  id: number;\n  name: string;\n  short: string;\n  code: string;\n\n  static fromJson(json: any): CountryInfoModel {\n    const model = new CountryInfoModel();\n    model.id = json.id;\n    model.name = json.name;\n    model.short = json.short;\n    model.code = json.code;\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      name: this.name,\n      short: this.short,\n      code: this.code,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class SubscriptionInfoModel {\n  id: number;\n  client: string;\n  client_id: string;\n  subscription_id: string;\n  subscribed_modules: SubscribedModulesModel;\n  date_created: Date;\n\n  static fromJson(json: any): SubscriptionInfoModel {\n    const model = new SubscriptionInfoModel();\n    model.id = json.id;\n    model.client = json.client;\n    model.client_id = json.client_id;\n    model.subscription_id = json.subscription_id;\n    model.subscribed_modules = SubscribedModulesModel.fromJson(json.subscribed_modules);\n    model.date_created = new Date(json.date_created);\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      client: this.client,\n      client_id: this.client_id,\n      subscription_id: this.subscription_id,\n      subscribed_modules: this.subscribed_modules.toJson(),\n      date_created: this.date_created.toISOString(),\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class SubscribedModulesModel {\n  \"Module 1\": ModuleModel;\n  \"Module 2\": ModuleModel;\n\n  static fromJson(json: any): SubscribedModulesModel {\n    const model = new SubscribedModulesModel();\n    model[\"Module 1\"] = ModuleModel.fromJson(json[\"Module 1\"]);\n    model[\"Module 2\"] = ModuleModel.fromJson(json[\"Module 2\"]);\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      \"Module 1\": this[\"Module 1\"].toJson(),\n      \"Module 2\": this[\"Module 2\"].toJson(),\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class ModuleModel {\n  module_id: number;\n  module_name: string;\n  expires_on: Date;\n  amount_paid: number;\n\n  static fromJson(json: any): ModuleModel {\n    const model = new ModuleModel();\n    model.module_id = json.module_id;\n    model.module_name = json.module_name;\n    model.expires_on = new Date(json.expires_on);\n    model.amount_paid = json.amount_paid;\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      module_id: this.module_id,\n      module_name: this.module_name,\n      expires_on: this.expires_on.toISOString(),\n      amount_paid: this.amount_paid,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class MeetingCategoryModel {\n  id: number;\n  meetingEventId: number;\n  memberCategoryId: MemberCategoryIDModel;\n  updatedBy: number;\n  updateDate: Date;\n  date: Date;\n\n  static fromJson(json: any): MeetingCategoryModel {\n    const model = new MeetingCategoryModel();\n    model.id = json.id;\n    model.meetingEventId = json.meetingEventId;\n    model.memberCategoryId = MemberCategoryIDModel.fromJson(json.memberCategoryId);\n    model.updatedBy = json.updatedBy;\n    model.updateDate = new Date(json.updateDate);\n    model.date = new Date(json.date);\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      meetingEventId: this.meetingEventId,\n      memberCategoryId: this.memberCategoryId.toJson(),\n      updatedBy: this.updatedBy,\n      updateDate: this.updateDate.toISOString(),\n      date: this.date.toISOString(),\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n","export const PAGE__IDS = {\r\n  \"schedule_meeting_event\": 40,\r\n  \"clocking\": 41,\r\n  \"attendance_history\": 42,\r\n  \"attendees\": 43,\r\n  \"absentees\": 44,\r\n  \"device_request_approval\": 45,\r\n  \"absent_leave_status\": 58,\r\n  \"absent_leave_assignment\": 59,\r\n};\r\n"],"names":["__swalStyle","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","verifyToken","email","_id_","type","url","CONSTANTS","cookieName","token","get_cookie","formData","JSON","stringify","base64Decode","date","now","Date","Math","abs","getTime","get_differences","http","method","body","then","response","jsonData","user","expiry","base64Encode","String","set_cookies","set_cookies_minutes","toUTCString","generateNewToken","tokenLogin","id","window","unknowable","ops","urlQueryParams","urlSearchParams","URLSearchParams","location","search","Object","fromEntries","entries","urlQueryParamsGet","query","params","value","key","urlQueryParamsGetAll","getAll","urlQueryParamsJoin","object","urlStr","index","MeetingEventCategoryModel","static","json","model","meetingEventId","MeetingEventIDModel","fromJson","memberCategoryId","MemberCategoryIDModel","updatedBy","updateDate","toJson","this","toISOString","toString","memberType","name","clientId","ClientIDModel","branchId","BranchIDModel","meetingSpan","startTime","closeTime","latenessTime","isRecuring","hasBreakTime","hasDuty","hasOvertime","virtualMeetingLink","virtualMeetingType","meetingLocation","expectedMonthlyAttendance","activeMonthlyAttendance","agenda","agendaFile","meetingCategories","map","item","MeetingCategoryModel","accountId","createdBy","creationDate","accountType","country","stateProvince","applicantFirstname","applicantSurname","applicantGender","applicantPhone","applicantEmail","applicantDesignationRole","region","district","constituency","community","subscriptionDuration","subscriptionDate","subscriptionFee","logo","status","archive","accountCategory","website","subscriptionInfo","SubscriptionInfoModel","countryInfo","CountryInfoModel","Number","isNaN","category","short","code","client","client_id","subscription_id","subscribed_modules","SubscribedModulesModel","date_created","ModuleModel","module_id","module_name","expires_on","amount_paid","PAGE__IDS"],"sourceRoot":""}