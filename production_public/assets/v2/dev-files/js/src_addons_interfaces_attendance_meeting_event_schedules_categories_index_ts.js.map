{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_addons_interfaces_attendance_meeting_event_schedules_categories_index_ts.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/schedules/categories/index.ts"],"sourcesContent":["export class MeetingEventCategoryModel {\n  id: number;\n  meetingEventId: MeetingEventIDModel;\n  memberCategoryId: MemberCategoryIDModel;\n  updatedBy: number;\n  updateDate: Date;\n  date: Date;\n\n  static fromJson(json: any): MeetingEventCategoryModel {\n    const model = new MeetingEventCategoryModel();\n    model.id = json.id;\n    model.meetingEventId = MeetingEventIDModel.fromJson(json.meetingEventId);\n    model.memberCategoryId = MemberCategoryIDModel.fromJson(json.memberCategoryId);\n    model.updatedBy = json.updatedBy;\n    model.updateDate = new Date(json.updateDate);\n    model.date = new Date(json.date);\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      meetingEventId: this.meetingEventId.toJson(),\n      memberCategoryId: this.memberCategoryId.toJson(),\n      updatedBy: this.updatedBy,\n      updateDate: this.updateDate.toISOString(),\n      date: this.date.toISOString(),\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class MeetingEventIDModel {\n  id: number;\n  type: number;\n  memberType: number;\n  name: string;\n  clientId: ClientIDModel;\n  branchId: BranchIDModel;\n  memberCategoryId: MemberCategoryIDModel;\n  meetingSpan: number;\n  startTime: string;\n  closeTime: string;\n  latenessTime: null;\n  isRecuring: boolean;\n  hasBreakTime: boolean;\n  hasDuty: boolean;\n  hasOvertime: boolean;\n  virtualMeetingLink: string;\n  virtualMeetingType: number;\n  meetingLocation: number;\n  expectedMonthlyAttendance: number;\n  activeMonthlyAttendance: number;\n  agenda: string;\n  agendaFile: string;\n  updatedBy: number;\n  updateDate: Date;\n  date: Date;\n  meetingCategories: MeetingCategoryModel[];\n\n  static fromJson(json: any): MeetingEventIDModel {\n    // console.log({ \"MeetingEventIDModel:json\": json });\n    if (!Number.isNaN(json)) return json;\n    \n    const model = new MeetingEventIDModel();\n    model.id = json.id;\n    model.type = json.type;\n    model.memberType = json.memberType;\n    model.name = json.name;\n    model.clientId = ClientIDModel.fromJson(json.clientId);\n    model.branchId = BranchIDModel.fromJson(json.branchId);\n    model.memberCategoryId = MemberCategoryIDModel.fromJson(json.memberCategoryId);\n    model.meetingSpan = json.meetingSpan;\n    model.startTime = json.startTime;\n    model.closeTime = json.closeTime;\n    model.latenessTime = json.latenessTime;\n    model.isRecuring = json.isRecuring;\n    model.hasBreakTime = json.hasBreakTime;\n    model.hasDuty = json.hasDuty;\n    model.hasOvertime = json.hasOvertime;\n    model.virtualMeetingLink = json.virtualMeetingLink;\n    model.virtualMeetingType = json.virtualMeetingType;\n    model.meetingLocation = json.meetingLocation;\n    model.expectedMonthlyAttendance = json.expectedMonthlyAttendance;\n    model.activeMonthlyAttendance = json.activeMonthlyAttendance;\n    model.agenda = json.agenda;\n    model.agendaFile = json.agendaFile;\n    model.updatedBy = json.updatedBy;\n    model.updateDate = new Date(json.updateDate);\n    model.date = new Date(json.date);\n    model.meetingCategories = json.meetingCategories.map((item: any) => MeetingCategoryModel.fromJson(item));\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      type: this.type,\n      memberType: this.memberType,\n      name: this.name,\n      clientId: this.clientId.toJson(),\n      branchId: this.branchId.toJson(),\n      memberCategoryId: this.memberCategoryId.toJson(),\n      meetingSpan: this.meetingSpan,\n      startTime: this.startTime,\n      closeTime: this.closeTime,\n      latenessTime: this.latenessTime,\n      isRecuring: this.isRecuring,\n      hasBreakTime: this.hasBreakTime,\n      hasDuty: this.hasDuty,\n      hasOvertime: this.hasOvertime,\n      virtualMeetingLink: this.virtualMeetingLink,\n      virtualMeetingType: this.virtualMeetingType,\n      meetingLocation: this.meetingLocation,\n      expectedMonthlyAttendance: this.expectedMonthlyAttendance,\n      activeMonthlyAttendance: this.activeMonthlyAttendance,\n      agenda: this.agenda,\n      agendaFile: this.agendaFile,\n      updatedBy: this.updatedBy,\n      updateDate: this.updateDate.toISOString(),\n      date: this.date.toISOString(),\n      meetingCategories: this.meetingCategories.map((item: MeetingCategoryModel) => item.toJson()),\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class BranchIDModel {\n  id: number;\n  name: string;\n  accountId: number;\n  createdBy: number;\n  creationDate: Date;\n  updatedBy: number;\n  updateDate: Date;\n\n  static fromJson(json: any): BranchIDModel {\n    const model = new BranchIDModel();\n    model.id = json.id;\n    model.name = json.name;\n    model.accountId = json.accountId;\n    model.createdBy = json.createdBy;\n    model.creationDate = new Date(json.creationDate);\n    model.updatedBy = json.updatedBy;\n    model.updateDate = new Date(json.updateDate);\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      name: this.name,\n      accountId: this.accountId,\n      createdBy: this.createdBy,\n      creationDate: this.creationDate.toISOString(),\n      updatedBy: this.updatedBy,\n      updateDate: this.updateDate.toISOString(),\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class ClientIDModel {\n  id: number;\n  name: string;\n  accountType: number;\n  country: string;\n  stateProvince: string;\n  applicantFirstname: string;\n  applicantSurname: string;\n  applicantGender: number;\n  applicantPhone: string;\n  applicantEmail: string;\n  applicantDesignationRole: number;\n  region: number;\n  district: number;\n  constituency: number;\n  community: string;\n  subscriptionDuration: string;\n  subscriptionDate: Date;\n  subscriptionFee: string;\n  logo: string;\n  status: number;\n  archive: number;\n  accountCategory: MemberCategoryIDModel;\n  website: string;\n  creationDate: Date;\n  updatedBy: number;\n  updateDate: Date;\n  subscriptionInfo: SubscriptionInfoModel;\n  countryInfo: CountryInfoModel[];\n\n  static fromJson(json: any): ClientIDModel {\n    console.log({\"json-json--json---json\": json});\n    \n    const model = new ClientIDModel();\n    model.id = json.id;\n    model.name = json.name;\n    model.accountType = json.accountType;\n    model.country = json.country;\n    model.stateProvince = json.stateProvince;\n    model.applicantFirstname = json.applicantFirstname;\n    model.applicantSurname = json.applicantSurname;\n    model.applicantGender = json.applicantGender;\n    model.applicantPhone = json.applicantPhone;\n    model.applicantEmail = json.applicantEmail;\n    model.applicantDesignationRole = json.applicantDesignationRole;\n    model.region = json.region;\n    model.district = json.district;\n    model.constituency = json.constituency;\n    model.community = json.community;\n    model.subscriptionDuration = json.subscriptionDuration;\n    model.subscriptionDate = new Date(json.subscriptionDate);\n    model.subscriptionFee = json.subscriptionFee;\n    model.logo = json.logo;\n    model.status = json.status;\n    model.archive = json.archive;\n    model.accountCategory = MemberCategoryIDModel.fromJson(json.accountCategory);\n    model.website = json.website;\n    model.creationDate = new Date(json.creationDate);\n    model.updatedBy = json.updatedBy;\n    model.updateDate = new Date(json.updateDate);\n    model.subscriptionInfo = SubscriptionInfoModel.fromJson(json.subscriptionInfo);\n    model.countryInfo = json.countryInfo.map((item: any) => CountryInfoModel.fromJson(item));\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      name: this.name,\n      accountType: this.accountType,\n      country: this.country,\n      stateProvince: this.stateProvince,\n      applicantFirstname: this.applicantFirstname,\n      applicantSurname: this.applicantSurname,\n      applicantGender: this.applicantGender,\n      applicantPhone: this.applicantPhone,\n      applicantEmail: this.applicantEmail,\n      applicantDesignationRole: this.applicantDesignationRole,\n      region: this.region,\n      district: this.district,\n      constituency: this.constituency,\n      community: this.community,\n      subscriptionDuration: this.subscriptionDuration,\n      subscriptionDate: this.subscriptionDate.toISOString(),\n      subscriptionFee: this.subscriptionFee,\n      logo: this.logo,\n      status: this.status,\n      archive: this.archive,\n      accountCategory: this.accountCategory.toJson(),\n      website: this.website,\n      creationDate: this.creationDate.toISOString(),\n      updatedBy: this.updatedBy,\n      updateDate: this.updateDate.toISOString(),\n      subscriptionInfo: this.subscriptionInfo.toJson(),\n      countryInfo: this.countryInfo.map((item: CountryInfoModel) => item.toJson()),\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class MemberCategoryIDModel {\n  id: number;\n  clientId: ClientIDModel | number;\n  category: string;\n  createdBy: number;\n  updatedBy: number;\n  updateDate: Date | null;\n  date: Date | null;\n\n  static fromJson(json: any): MemberCategoryIDModel {\n    const model = new MemberCategoryIDModel();\n    model.id = json.id;\n    model.clientId = Number.isNaN(json.clientId) ? ClientIDModel.fromJson(json.clientId) : Number(json.clientId);\n    model.category = json.category;\n    model.createdBy = json.createdBy;\n    model.updatedBy = json.updatedBy;\n    model.updateDate = json.updateDate ? new Date(json.updateDate) : null;\n    model.date = json.date ? new Date(json.date) : null;\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      //@ts-ignore\n      clientId: Number.isNaN(this.clientId) ? this.clientId.toJson() : this.clientId,\n      category: this.category,\n      createdBy: this.createdBy,\n      updatedBy: this.updatedBy,\n      updateDate: this.updateDate ? this.updateDate.toISOString() : null,\n      date: this.date ? this.date.toISOString() : null,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class CountryInfoModel {\n  id: number;\n  name: string;\n  short: string;\n  code: string;\n\n  static fromJson(json: any): CountryInfoModel {\n    const model = new CountryInfoModel();\n    model.id = json.id;\n    model.name = json.name;\n    model.short = json.short;\n    model.code = json.code;\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      name: this.name,\n      short: this.short,\n      code: this.code,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class SubscriptionInfoModel {\n  id: number;\n  client: string;\n  client_id: string;\n  subscription_id: string;\n  subscribed_modules: SubscribedModulesModel;\n  date_created: Date;\n\n  static fromJson(json: any): SubscriptionInfoModel {\n    const model = new SubscriptionInfoModel();\n    model.id = json.id;\n    model.client = json.client;\n    model.client_id = json.client_id;\n    model.subscription_id = json.subscription_id;\n    model.subscribed_modules = SubscribedModulesModel.fromJson(json.subscribed_modules);\n    model.date_created = new Date(json.date_created);\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      client: this.client,\n      client_id: this.client_id,\n      subscription_id: this.subscription_id,\n      subscribed_modules: this.subscribed_modules.toJson(),\n      date_created: this.date_created.toISOString(),\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class SubscribedModulesModel {\n  \"Module 1\": ModuleModel;\n  \"Module 2\": ModuleModel;\n\n  static fromJson(json: any): SubscribedModulesModel {\n    const model = new SubscribedModulesModel();\n    model[\"Module 1\"] = ModuleModel.fromJson(json[\"Module 1\"]);\n    model[\"Module 2\"] = ModuleModel.fromJson(json[\"Module 2\"]);\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      \"Module 1\": this[\"Module 1\"].toJson(),\n      \"Module 2\": this[\"Module 2\"].toJson(),\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class ModuleModel {\n  module_id: number;\n  module_name: string;\n  expires_on: Date;\n  amount_paid: number;\n\n  static fromJson(json: any): ModuleModel {\n    const model = new ModuleModel();\n    model.module_id = json.module_id;\n    model.module_name = json.module_name;\n    model.expires_on = new Date(json.expires_on);\n    model.amount_paid = json.amount_paid;\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      module_id: this.module_id,\n      module_name: this.module_name,\n      expires_on: this.expires_on.toISOString(),\n      amount_paid: this.amount_paid,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n\nexport class MeetingCategoryModel {\n  id: number;\n  meetingEventId: number;\n  memberCategoryId: MemberCategoryIDModel;\n  updatedBy: number;\n  updateDate: Date;\n  date: Date;\n\n  static fromJson(json: any): MeetingCategoryModel {\n    const model = new MeetingCategoryModel();\n    model.id = json.id;\n    model.meetingEventId = json.meetingEventId;\n    model.memberCategoryId = MemberCategoryIDModel.fromJson(json.memberCategoryId);\n    model.updatedBy = json.updatedBy;\n    model.updateDate = new Date(json.updateDate);\n    model.date = new Date(json.date);\n    return model;\n  }\n\n  toJson(): any {\n    return {\n      id: this.id,\n      meetingEventId: this.meetingEventId,\n      memberCategoryId: this.memberCategoryId.toJson(),\n      updatedBy: this.updatedBy,\n      updateDate: this.updateDate.toISOString(),\n      date: this.date.toISOString(),\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJson(), null, 2);\n  }\n}\n"],"names":["MeetingEventCategoryModel","static","json","model","id","meetingEventId","MeetingEventIDModel","fromJson","memberCategoryId","MemberCategoryIDModel","updatedBy","updateDate","Date","date","toJson","this","toISOString","toString","JSON","stringify","Number","isNaN","type","memberType","name","clientId","ClientIDModel","branchId","BranchIDModel","meetingSpan","startTime","closeTime","latenessTime","isRecuring","hasBreakTime","hasDuty","hasOvertime","virtualMeetingLink","virtualMeetingType","meetingLocation","expectedMonthlyAttendance","activeMonthlyAttendance","agenda","agendaFile","meetingCategories","map","item","MeetingCategoryModel","accountId","createdBy","creationDate","console","log","accountType","country","stateProvince","applicantFirstname","applicantSurname","applicantGender","applicantPhone","applicantEmail","applicantDesignationRole","region","district","constituency","community","subscriptionDuration","subscriptionDate","subscriptionFee","logo","status","archive","accountCategory","website","subscriptionInfo","SubscriptionInfoModel","countryInfo","CountryInfoModel","category","short","code","client","client_id","subscription_id","subscribed_modules","SubscribedModulesModel","date_created","ModuleModel","module_id","module_name","expires_on","amount_paid"],"sourceRoot":""}