{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_addons_network_attendance_setup_date_index_ts-src_addons_network_attendance_setup_member_-bd7e20.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/member/member/date.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/date/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/member/date/post_multiple.ts","webpack://webpackNumbers/./src/view/attendance/setup/form/edit/member/dates/inputs.ts","webpack://webpackNumbers/./src/view/attendance/setup/form/edit/member/dates/multiple.ts"],"sourcesContent":["import { MeetingEventIDModel } from \"../../schedules/categories\";\r\nimport { IndividualMemberModel } from \"./ind\";\r\nimport { OrganizationMemberModel } from \"./org\";\r\nimport { MeetingAttendanceMemberModel } from \"./\";\r\n\r\n// Export class for the \"MemberMeetingEventDate\" containing all the fields\r\nexport class MemberMeetingEventDateModel {\r\n  id: number;\r\n  meetingEventId: MeetingEventIDModel;\r\n  dateId: DateIdModel;\r\n  memberId: MeetingAttendanceMemberModel;\r\n  updatedBy: number;\r\n  updateDate: Date;\r\n  date: Date;\r\n  memberInfo?: IndividualMemberModel | OrganizationMemberModel | null;\r\n\r\n  // toJson method to convert the object to a JSON string\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      meetingEventId: this.meetingEventId.toJson(),\r\n      dateId: this.dateId.toJson(),\r\n      memberId: this.memberId.toJson(),\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate.toISOString(),\r\n      date: this.date.toISOString(),\r\n      memberInfo: this.memberInfo === null || this.memberInfo === undefined ? null : this.memberInfo.toJson(),\r\n    };\r\n  }\r\n\r\n  // fromJson method to create an object from a JSON string\r\n  static fromJson(json: any): MemberMeetingEventDateModel {\r\n    const model = new MemberMeetingEventDateModel();\r\n    model.id = json.id;\r\n    model.meetingEventId = MeetingEventIDModel.fromJson(json.meetingEventId);\r\n    model.dateId = DateIdModel.fromJson(json.dateId);\r\n    model.memberId = MeetingAttendanceMemberModel.fromJson(json.memberId);\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = new Date(json.updateDate);\r\n    model.date = new Date(json.date);\r\n    model.memberInfo = json.memberInfo === null || json.memberInfo === undefined ? null : ('certificates' in json.memberInfo ? OrganizationMemberModel.fromJson(json.memberInfo) : IndividualMemberModel.fromJson(json.memberInfo));\r\n\r\n    // console.log({\"model-model--model\": model});\r\n    \r\n    return model;\r\n  }\r\n\r\n  // toString method to return a string representation of the object\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\n\r\n// Export class for the \"DateIdModel\" field\r\nexport class DateIdModel {\r\n  id: number;\r\n  meetingEventId: number;\r\n  date: Date;\r\n  updatedBy: number;\r\n  updateDate: Date;\r\n  creationDate: Date;\r\n\r\n  // toJson method to convert the object to a JSON string\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      meetingEventId: this.meetingEventId,\r\n      date: this.date.toISOString(),\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate.toISOString(),\r\n      creationDate: this.creationDate.toISOString(),\r\n    };\r\n  }\r\n\r\n  // fromJson method to create an object from a JSON string\r\n  static fromJson(json: any): DateIdModel {\r\n    const model = new DateIdModel();\r\n    model.id = json.id;\r\n    model.meetingEventId = json.meetingEventId;\r\n    model.date = new Date(json.date);\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = new Date(json.updateDate);\r\n    model.creationDate = new Date(json.creationDate);\r\n    return model;\r\n  }\r\n\r\n  // toString method to return a string representation of the object\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\n\r\nexport class MemberMeetingEventDateFormInputModel {\r\n  meetingEventId: number;\r\n  dateId: number;\r\n  memberId: number;\r\n\r\n  toJson(): object {\r\n    return {\r\n      meetingEventId: this.meetingEventId,\r\n      dateId: this.dateId,\r\n      memberId: this.memberId,\r\n    };\r\n  }\r\n\r\n  static fromJson(json: any): MemberMeetingEventDateFormInputModel {\r\n    const model = new MemberMeetingEventDateFormInputModel();\r\n    model.meetingEventId = json.meetingEventId;\r\n    model.dateId = json.dateId;\r\n    model.memberId = json.memberId;\r\n    return model;\r\n  }\r\n\r\n  toString(): string {\r\n    return `MemberMeetingEventDateFormInputModel(meetingEventId=${this.meetingEventId}, dateId=${this.dateId}, memberId=${this.memberId})`;\r\n  }\r\n}\r\n\r\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceScheduleDate<Type>(ID: Number = null, url_params: string = \"\", ) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/date'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { MemberMeetingEventDateFormInputModel } from \"@@addons/interfaces/attendance/meeting_event/member/member/date\";\r\n\r\n\r\nexport async function POST_AttendanceScheduleMemberDateBulk(dateInfos: Array<MemberMeetingEventDateFormInputModel>): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/member-date/bulk',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"add-schedule-member-date\"]'),\r\n    formData = JSON.stringify(dateInfos);\r\n\r\n  return Swal.fire({\r\n    title: 'Add Member Date(s)?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        // try {\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSES = networkCallRes.multipleResponse;\r\n        // console.log({ _RESPONSES });\r\n        let errors: Array<{ error: string }> = [];\r\n        if (_RESPONSES !== null) {\r\n          _RESPONSES.forEach((_RESPONSE, i) => {\r\n            // console.log({ \"_RESPONSE._RESPONSE\": _RESPONSE });\r\n            if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n              if (_RESPONSE.unknownError.length > 0) {\r\n                // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n                _RESPONSE.unknownError.forEach(e => {\r\n                  const _errors = e.errors;\r\n                  _errors.forEach(err => {\r\n                    errors.push({ error: `[${\"Entry\".toUpperCase()} ${i+1}] - ${err}` });\r\n                  });\r\n                });\r\n              } else {\r\n                if (_RESPONSE.nameError.length > 0) {\r\n                  // console.log({\"_RESPONSE.nameError\": _RESPONSE.nameError});\r\n\r\n                  _RESPONSE.nameError.forEach(e => {\r\n                    const _errorId = e.id;\r\n                    const _errors = e.errors;\r\n                    _errors.forEach(err => {\r\n                      errors.push({ error: `[${\"Entry\".toUpperCase()} ${i+1}] - ${_errorId.toUpperCase()} :: ${err}` });\r\n                    });\r\n                  });\r\n                }\r\n\r\n              }\r\n            }\r\n          });\r\n\r\n        }\r\n        if (errors.length > 0) {\r\n          const res = https_swal_error_format(errors);\r\n          return Swal.showValidationMessage(\r\n            `${res}`\r\n          );\r\n        }\r\n        return networkCallRes;\r\n        // } catch (error) {\r\n        //   console.error({ error });\r\n        //   let errorHttp = HTTP;\r\n        //   errorHttp['error'] = error;\r\n        //   const networkCallRes = new NetWorkCallResponses(\"post\", errorHttp, true, formContainer);\r\n        //   networkCallRes.postForm\r\n        //   return networkCallRes;\r\n        // }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import { MeetingEventScheduleDate_I } from '@@addons/interfaces/attendance/meeting_event/dates';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"member-date-inputs-component\")\r\nexport class MemberDateInputsComponent extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Array })\r\n  public meetingDates: MeetingEventScheduleDate_I[] = [];\r\n\r\n  @property({ type: String })\r\n  private inputId = Math.random().toString(36).substring(2, 22);\r\n\r\n  @property({ type: String })\r\n  public dateValue?: string;\r\n\r\n  @property({ type: Boolean })\r\n  public smallView: boolean = false;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({\"this.meetingDates\": this.meetingDates});\r\n    \r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    const meetingDates__ = this.meetingDates.map((value) => {\r\n      return html`<mwc-list-item value=\"${value.id}\">${value.date}</mwc-list-item>`;\r\n    });\r\n\r\n    return html`\r\n      <div class=\"container my-4\" id=\"form_input--${this.inputId}\">\r\n        <div class=\"row justify-center\">\r\n          <div class=\"${this.smallView? 'col-md-12': 'col-md-6 col-lg-4'}\">\r\n            <h4 class=\"font-semibold my-2\">Select Date</h4>\r\n            <mwc-select name=\"dateId\" class=\"w-full\" id=\"dateId--${this.inputId}\" label=\"Select Date\" outlined\r\n              required @change=\"${this.handleDateChange}\">\r\n              <mwc-list-item value=\"\">Select Date</mwc-list-item>\r\n              ${html`${meetingDates__}`}\r\n            </mwc-select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  getMeetingDate(value: Number): MeetingEventScheduleDate_I {\r\n    let date: MeetingEventScheduleDate_I = {id:0, date: new Date(),};\r\n    this.meetingDates.forEach(meetingDate => {\r\n      if (meetingDate.id === value) {\r\n        date = meetingDate;\r\n      }\r\n    });\r\n\r\n    return date;\r\n  }\r\n\r\n  handleDateChange(event: Event) {\r\n    // @ts-ignore\r\n    const dateValue = event.target.value;\r\n    this.dateValue = dateValue;\r\n    \r\n\r\n    // console.log({\r\n    //   \"handleDayChange.event.target\": event,\r\n    //   \"handleDayChange.dayValue\": this.dayValue,\r\n    //   \"handleDayChange.startDateValue\": this.startDateValue,\r\n    //   \"handleDayChange.endDateValue\": this.endDateValue,\r\n    // });\r\n\r\n  }\r\n\r\n  firstUpdated() {\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { LitElement, html, css, nothing, TemplateResult } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\nimport './inputs';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-circular-progress';\r\nimport { MemberMeetingEventDateFormInputModel } from '@@addons/interfaces/attendance/meeting_event/member/member/date';\r\nimport { MeetingEventScheduleDate_I } from '@@addons/interfaces/attendance/meeting_event/dates';\r\n\r\n@customElement(\"member-date-multiple-inputs-component\")\r\nexport class MemberDateMultipleInputsComponent extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public meetingEventId: number;\r\n\r\n  @property({ type: Number })\r\n  public meetingMemberId: number;\r\n\r\n  @property({ type: Number })\r\n  public currentObjectCount: number = 0;\r\n\r\n  @property({ type: Array })\r\n  public multipleDateObjects: MemberMeetingEventDateFormInputModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private removedInputIndex: number[] = [];\r\n\r\n  @property({ type: Array })\r\n  private addedInputIndex: number[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  private meetingDatesCalled: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private loading: boolean = true;\r\n\r\n  @property({ type: Array })\r\n  public meetingDates: MeetingEventScheduleDate_I[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  public smallView: boolean = false;\r\n\r\n  private _inputs: Array<TemplateResult> = [];\r\n\r\n  private set inputs(value: Array<TemplateResult>) {\r\n    this._inputs = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  private get inputs(): Array<TemplateResult> {\r\n    return this._inputs;\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({\"meetingEventId\": this.meetingEventId, \"meetingMemberId\": this.meetingMemberId});\r\n    \r\n\r\n    setInterval(() => {\r\n      if (this.meetingDatesCalled == false && this.meetingDates.length > 0) {\r\n        this.addInput(new Event('click'));\r\n\r\n        this.loading = false;\r\n        this.meetingDatesCalled = true;\r\n      }\r\n    }, 1);\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  addInput(event: Event) {\r\n    this.currentObjectCount = this.currentObjectCount + 1;\r\n    let newInput = this.smallView? html`<member-date-inputs-component date-inputs-component--object=\"${this.currentObjectCount}\" \r\n      .meetingDates=\"${this.meetingDates}\" smallView>\r\n    </member-date-inputs-component>`: html`<member-date-inputs-component date-inputs-component--object=\"${this.currentObjectCount}\" \r\n      .meetingDates=\"${this.meetingDates}\" >\r\n    </member-date-inputs-component>`;\r\n    // newInput.meetingDates = this.meetingDates;\r\n    // console.log({ \"newInput-newInput\": newInput });\r\n\r\n    let inputs = this.inputs;\r\n    inputs.push(newInput);\r\n\r\n    let addedInputIndex = this.addedInputIndex;\r\n    addedInputIndex.push(this.currentObjectCount - 1);\r\n\r\n    setTimeout(() => {\r\n      this.inputs = inputs;\r\n      this.addedInputIndex = addedInputIndex;\r\n      this.multipleInputsHaveChanged(new Event(\"change\"))\r\n    }, 10);\r\n    // console.log({ \"newInput-this.inputs\": this.inputs });\r\n  }\r\n\r\n  removeInput(index: number) {\r\n    // console.log({ \"this.inputs\": this.inputs });\r\n\r\n\r\n    if (this.currentInputList.length - 1 > 0) {\r\n      let inputs = this.inputs;\r\n\r\n      this.removedInputIndex.push(index);\r\n\r\n      delete inputs[index];\r\n      // inputs.splice(index, 1);\r\n\r\n      setTimeout(() => {\r\n        this.inputs = inputs;\r\n\r\n        this.multipleInputsHaveChanged(new Event(\"change\"))\r\n      }, 10);\r\n    }\r\n  }\r\n\r\n  get currentInputList() {\r\n    let currentList: Array<any> = [];\r\n\r\n    const inputs = this.inputs;\r\n\r\n    inputs.join(\"-\").split(\"-\").forEach(_ => _.length == 0 ? null : currentList.push(_));\r\n\r\n    return currentList;\r\n  }\r\n\r\n  render() {\r\n    // console.log({ \"inputs-inputs.inputs\": this.inputs });\r\n    return this.loading ? html`<div class=\"flex justify-center\">\r\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n      </div>` : html`\r\n      <div @change=\"${this.multipleInputsHaveChanged}\">\r\n          ${this.inputs.map((input, index) => html`\r\n              <div class=\"border rounded-md mb-1\">\r\n                <h3 class=\"shadow p-3 font-bold\">Date Info ${index + 1}</h3>\r\n                <!-- ${\"\" /** input.render()  */} -->\r\n                ${input}\r\n                ${(this.currentInputList.length - 1 > 0) ? html`<div class=\"flex justify-end\">\r\n                  <mwc-button @click=${() => this.removeInput(index)} type=\"button\" class=\"button danger text-right m-1\" raised>Remove</mwc-button>\r\n                  </div>` : nothing}\r\n              </div>\r\n            `,)}\r\n        <div class=\"flex justify-end\">\r\n          <mwc-button @click=${this.addInput} type=\"button\" class=\"button warning text-right m-1\" raised>Add Meeting/ Event Date</mwc-button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  multipleInputsHaveChanged(event: Event) {\r\n\r\n    this.addedInputIndex\r\n\r\n    const inputComponents = Array.from(document.querySelectorAll('[day-inputs-component--object]'));\r\n    // console.log({ inputComponents, \"this.removedInputIndex\": this.removedInputIndex });\r\n\r\n    const notRemovedComponents: Array<any> = [];\r\n\r\n    this.addedInputIndex.forEach((inputIndex) => {\r\n\r\n      if (!this.removedInputIndex.includes(inputIndex)) {\r\n\r\n        if (!notRemovedComponents.includes(inputIndex)) {\r\n          notRemovedComponents.push(inputIndex);\r\n        }\r\n      }\r\n    });\r\n\r\n    // console.log({notRemovedComponents});\r\n\r\n\r\n    this.multipleDateObjects = notRemovedComponents.map((input) => {\r\n      const inputComponent = Array.from(document.querySelectorAll('[date-inputs-component--object=\"' + (input + 1) + '\"]'));\r\n      // console.log({ \"inputComponent---inputComponent\": inputComponent, input });\r\n\r\n      return inputComponent.map(inputElement => {\r\n        // console.log({ \"inputElement---inputElement\": inputElement });\r\n\r\n        let newObject = new MemberMeetingEventDateFormInputModel();\r\n        newObject.meetingEventId = this.meetingEventId;\r\n        // @ts-ignore\r\n        newObject.dateId = Number(inputElement.dateValue ?? 0);\r\n        // @ts-ignore\r\n        newObject.memberId = this.meetingMemberId;\r\n        return newObject;\r\n      })[0];\r\n    });\r\n \r\n\r\n    // console.log({ \"multiple_date_objects\": this.multipleDateObjects });\r\n\r\n  }\r\n\r\n  firstUpdated() {\r\n\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["MemberMeetingEventDateModel","toJson","id","this","meetingEventId","dateId","memberId","updatedBy","updateDate","toISOString","date","memberInfo","undefined","fromJson","json","model","MeetingEventIDModel","DateIdModel","MeetingAttendanceMemberModel","Date","OrganizationMemberModel","IndividualMemberModel","toString","JSON","stringify","creationDate","MemberMeetingEventDateFormInputModel","GET_AttendanceScheduleDate","ID","url_params","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","URLS","AKWAABA_API_BASE_URL","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","error","console","errorHttp","POST_AttendanceScheduleMemberDateBulk","dateInfos","formContainer","document","querySelector","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","body","then","networkCallRes","_RESPONSES","multipleResponse","errors","forEach","_RESPONSE","i","unknownError","length","e","err","push","toUpperCase","nameError","_errorId","res","https_swal_error_format","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","response","message","success","setTimeout","window","location","reload","MemberDateInputsComponent","LitElement","constructor","super","meetingDates","inputId","Math","random","substring","smallView","connectedCallback","disconnectedCallback","render","meetingDates__","map","html","handleDateChange","getMeetingDate","meetingDate","event","dateValue","target","firstUpdated","createRenderRoot","styles","css","property","type","Array","Boolean","customElement","MemberDateMultipleInputsComponent","currentObjectCount","multipleDateObjects","removedInputIndex","addedInputIndex","meetingDatesCalled","loading","_inputs","inputs","requestUpdate","setInterval","addInput","Event","newInput","multipleInputsHaveChanged","removeInput","index","currentInputList","currentList","join","split","_","input","nothing","from","querySelectorAll","notRemovedComponents","inputIndex","includes","inputElement","newObject","Number","meetingMemberId"],"sourceRoot":""}