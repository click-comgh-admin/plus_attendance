{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_view_attendance_setup_form_edit_member_dates_multiple_ts.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/member/member/date.ts","webpack://webpackNumbers/./src/view/attendance/setup/form/edit/member/dates/inputs.ts","webpack://webpackNumbers/./src/view/attendance/setup/form/edit/member/dates/multiple.ts"],"sourcesContent":["import { MeetingEventIDModel } from \"../../schedules/categories\";\r\nimport { IndividualMemberModel } from \"./ind\";\r\nimport { OrganizationMemberModel } from \"./org\";\r\nimport { MeetingAttendanceMemberModel } from \"./\";\r\n\r\n// Export class for the \"MemberMeetingEventDate\" containing all the fields\r\nexport class MemberMeetingEventDateModel {\r\n  id: number;\r\n  meetingEventId: MeetingEventIDModel;\r\n  dateId: DateIdModel;\r\n  memberId: MeetingAttendanceMemberModel;\r\n  updatedBy: number;\r\n  updateDate: Date;\r\n  date: Date;\r\n  memberInfo?: IndividualMemberModel | OrganizationMemberModel | null;\r\n\r\n  // toJson method to convert the object to a JSON string\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      meetingEventId: this.meetingEventId.toJson(),\r\n      dateId: this.dateId.toJson(),\r\n      memberId: this.memberId.toJson(),\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate.toISOString(),\r\n      date: this.date.toISOString(),\r\n      memberInfo: this.memberInfo === null || this.memberInfo === undefined ? null : this.memberInfo.toJson(),\r\n    };\r\n  }\r\n\r\n  // fromJson method to create an object from a JSON string\r\n  static fromJson(json: any): MemberMeetingEventDateModel {\r\n    const model = new MemberMeetingEventDateModel();\r\n    model.id = json.id;\r\n    model.meetingEventId = MeetingEventIDModel.fromJson(json.meetingEventId);\r\n    model.dateId = DateIdModel.fromJson(json.dateId);\r\n    model.memberId = MeetingAttendanceMemberModel.fromJson(json.memberId);\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = new Date(json.updateDate);\r\n    model.date = new Date(json.date);\r\n    model.memberInfo = json.memberInfo === null || json.memberInfo === undefined ? null : ('certificates' in json.memberInfo ? OrganizationMemberModel.fromJson(json.memberInfo) : IndividualMemberModel.fromJson(json.memberInfo));\r\n\r\n    // console.log({\"model-model--model\": model});\r\n    \r\n    return model;\r\n  }\r\n\r\n  // toString method to return a string representation of the object\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\n\r\n// Export class for the \"DateIdModel\" field\r\nexport class DateIdModel {\r\n  id: number;\r\n  meetingEventId: number;\r\n  date: Date;\r\n  updatedBy: number;\r\n  updateDate: Date;\r\n  creationDate: Date;\r\n\r\n  // toJson method to convert the object to a JSON string\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      meetingEventId: this.meetingEventId,\r\n      date: this.date.toISOString(),\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate.toISOString(),\r\n      creationDate: this.creationDate.toISOString(),\r\n    };\r\n  }\r\n\r\n  // fromJson method to create an object from a JSON string\r\n  static fromJson(json: any): DateIdModel {\r\n    const model = new DateIdModel();\r\n    model.id = json.id;\r\n    model.meetingEventId = json.meetingEventId;\r\n    model.date = new Date(json.date);\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = new Date(json.updateDate);\r\n    model.creationDate = new Date(json.creationDate);\r\n    return model;\r\n  }\r\n\r\n  // toString method to return a string representation of the object\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\n\r\nexport class MemberMeetingEventDateFormInputModel {\r\n  meetingEventId: number;\r\n  dateId: number;\r\n  memberId: number;\r\n\r\n  toJson(): object {\r\n    return {\r\n      meetingEventId: this.meetingEventId,\r\n      dateId: this.dateId,\r\n      memberId: this.memberId,\r\n    };\r\n  }\r\n\r\n  static fromJson(json: any): MemberMeetingEventDateFormInputModel {\r\n    const model = new MemberMeetingEventDateFormInputModel();\r\n    model.meetingEventId = json.meetingEventId;\r\n    model.dateId = json.dateId;\r\n    model.memberId = json.memberId;\r\n    return model;\r\n  }\r\n\r\n  toString(): string {\r\n    return `MemberMeetingEventDateFormInputModel(meetingEventId=${this.meetingEventId}, dateId=${this.dateId}, memberId=${this.memberId})`;\r\n  }\r\n}\r\n\r\n","import { MeetingEventScheduleDate_I } from '@@addons/interfaces/attendance/meeting_event/dates';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"member-date-inputs-component\")\r\nexport class MemberDateInputsComponent extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Array })\r\n  public meetingDates: MeetingEventScheduleDate_I[] = [];\r\n\r\n  @property({ type: String })\r\n  private inputId = Math.random().toString(36).substring(2, 22);\r\n\r\n  @property({ type: String })\r\n  public dateValue?: string;\r\n\r\n  @property({ type: Boolean })\r\n  public smallView: boolean = false;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({\"this.meetingDates\": this.meetingDates});\r\n    \r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n\r\n    const meetingDates__ = this.meetingDates.map((value) => {\r\n      return html`<mwc-list-item value=\"${value.id}\">${value.date}</mwc-list-item>`;\r\n    });\r\n\r\n    return html`\r\n      <div class=\"container my-4\" id=\"form_input--${this.inputId}\">\r\n        <div class=\"row justify-center\">\r\n          <div class=\"${this.smallView? 'col-md-12': 'col-md-6 col-lg-4'}\">\r\n            <h4 class=\"font-semibold my-2\">Select Date</h4>\r\n            <mwc-select name=\"dateId\" class=\"w-full\" id=\"dateId--${this.inputId}\" label=\"Select Date\" outlined\r\n              required @change=\"${this.handleDateChange}\">\r\n              <mwc-list-item value=\"\">Select Date</mwc-list-item>\r\n              ${html`${meetingDates__}`}\r\n            </mwc-select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  getMeetingDate(value: Number): MeetingEventScheduleDate_I {\r\n    let date: MeetingEventScheduleDate_I = {id:0, date: new Date(),};\r\n    this.meetingDates.forEach(meetingDate => {\r\n      if (meetingDate.id === value) {\r\n        date = meetingDate;\r\n      }\r\n    });\r\n\r\n    return date;\r\n  }\r\n\r\n  handleDateChange(event: Event) {\r\n    // @ts-ignore\r\n    const dateValue = event.target.value;\r\n    this.dateValue = dateValue;\r\n    \r\n\r\n    // console.log({\r\n    //   \"handleDayChange.event.target\": event,\r\n    //   \"handleDayChange.dayValue\": this.dayValue,\r\n    //   \"handleDayChange.startDateValue\": this.startDateValue,\r\n    //   \"handleDayChange.endDateValue\": this.endDateValue,\r\n    // });\r\n\r\n  }\r\n\r\n  firstUpdated() {\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { LitElement, html, css, nothing, TemplateResult } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\nimport './inputs';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-circular-progress';\r\nimport { MemberMeetingEventDateFormInputModel } from '@@addons/interfaces/attendance/meeting_event/member/member/date';\r\nimport { MeetingEventScheduleDate_I } from '@@addons/interfaces/attendance/meeting_event/dates';\r\n\r\n@customElement(\"member-date-multiple-inputs-component\")\r\nexport class MemberDateMultipleInputsComponent extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  public meetingEventId: number;\r\n\r\n  @property({ type: Number })\r\n  public meetingMemberId: number;\r\n\r\n  @property({ type: Number })\r\n  public currentObjectCount: number = 0;\r\n\r\n  @property({ type: Array })\r\n  public multipleDateObjects: MemberMeetingEventDateFormInputModel[] = [];\r\n\r\n  @property({ type: Array })\r\n  private removedInputIndex: number[] = [];\r\n\r\n  @property({ type: Array })\r\n  private addedInputIndex: number[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  private meetingDatesCalled: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private loading: boolean = true;\r\n\r\n  @property({ type: Array })\r\n  public meetingDates: MeetingEventScheduleDate_I[] = [];\r\n\r\n  @property({ type: Boolean })\r\n  public smallView: boolean = false;\r\n\r\n  private _inputs: Array<TemplateResult> = [];\r\n\r\n  private set inputs(value: Array<TemplateResult>) {\r\n    this._inputs = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  private get inputs(): Array<TemplateResult> {\r\n    return this._inputs;\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({\"meetingEventId\": this.meetingEventId, \"meetingMemberId\": this.meetingMemberId});\r\n    \r\n\r\n    setInterval(() => {\r\n      if (this.meetingDatesCalled == false && this.meetingDates.length > 0) {\r\n        this.addInput(new Event('click'));\r\n\r\n        this.loading = false;\r\n        this.meetingDatesCalled = true;\r\n      }\r\n    }, 1);\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  addInput(event: Event) {\r\n    this.currentObjectCount = this.currentObjectCount + 1;\r\n    let newInput = this.smallView? html`<member-date-inputs-component date-inputs-component--object=\"${this.currentObjectCount}\" \r\n      .meetingDates=\"${this.meetingDates}\" smallView>\r\n    </member-date-inputs-component>`: html`<member-date-inputs-component date-inputs-component--object=\"${this.currentObjectCount}\" \r\n      .meetingDates=\"${this.meetingDates}\" >\r\n    </member-date-inputs-component>`;\r\n    // newInput.meetingDates = this.meetingDates;\r\n    // console.log({ \"newInput-newInput\": newInput });\r\n\r\n    let inputs = this.inputs;\r\n    inputs.push(newInput);\r\n\r\n    let addedInputIndex = this.addedInputIndex;\r\n    addedInputIndex.push(this.currentObjectCount - 1);\r\n\r\n    setTimeout(() => {\r\n      this.inputs = inputs;\r\n      this.addedInputIndex = addedInputIndex;\r\n      this.multipleInputsHaveChanged(new Event(\"change\"))\r\n    }, 10);\r\n    // console.log({ \"newInput-this.inputs\": this.inputs });\r\n  }\r\n\r\n  removeInput(index: number) {\r\n    // console.log({ \"this.inputs\": this.inputs });\r\n\r\n\r\n    if (this.currentInputList.length - 1 > 0) {\r\n      let inputs = this.inputs;\r\n\r\n      this.removedInputIndex.push(index);\r\n\r\n      delete inputs[index];\r\n      // inputs.splice(index, 1);\r\n\r\n      setTimeout(() => {\r\n        this.inputs = inputs;\r\n\r\n        this.multipleInputsHaveChanged(new Event(\"change\"))\r\n      }, 10);\r\n    }\r\n  }\r\n\r\n  get currentInputList() {\r\n    let currentList: Array<any> = [];\r\n\r\n    const inputs = this.inputs;\r\n\r\n    inputs.join(\"-\").split(\"-\").forEach(_ => _.length == 0 ? null : currentList.push(_));\r\n\r\n    return currentList;\r\n  }\r\n\r\n  render() {\r\n    // console.log({ \"inputs-inputs.inputs\": this.inputs });\r\n    return this.loading ? html`<div class=\"flex justify-center\">\r\n        <mwc-circular-progress indeterminate></mwc-circular-progress>\r\n      </div>` : html`\r\n      <div @change=\"${this.multipleInputsHaveChanged}\">\r\n          ${this.inputs.map((input, index) => html`\r\n              <div class=\"border rounded-md mb-1\">\r\n                <h3 class=\"shadow p-3 font-bold\">Date Info ${index + 1}</h3>\r\n                <!-- ${\"\" /** input.render()  */} -->\r\n                ${input}\r\n                ${(this.currentInputList.length - 1 > 0) ? html`<div class=\"flex justify-end\">\r\n                  <mwc-button @click=${() => this.removeInput(index)} type=\"button\" class=\"button danger text-right m-1\" raised>Remove</mwc-button>\r\n                  </div>` : nothing}\r\n              </div>\r\n            `,)}\r\n        <div class=\"flex justify-end\">\r\n          <mwc-button @click=${this.addInput} type=\"button\" class=\"button warning text-right m-1\" raised>Add Meeting/ Event Date</mwc-button>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  multipleInputsHaveChanged(event: Event) {\r\n\r\n    this.addedInputIndex\r\n\r\n    const inputComponents = Array.from(document.querySelectorAll('[day-inputs-component--object]'));\r\n    // console.log({ inputComponents, \"this.removedInputIndex\": this.removedInputIndex });\r\n\r\n    const notRemovedComponents: Array<any> = [];\r\n\r\n    this.addedInputIndex.forEach((inputIndex) => {\r\n\r\n      if (!this.removedInputIndex.includes(inputIndex)) {\r\n\r\n        if (!notRemovedComponents.includes(inputIndex)) {\r\n          notRemovedComponents.push(inputIndex);\r\n        }\r\n      }\r\n    });\r\n\r\n    // console.log({notRemovedComponents});\r\n\r\n\r\n    this.multipleDateObjects = notRemovedComponents.map((input) => {\r\n      const inputComponent = Array.from(document.querySelectorAll('[date-inputs-component--object=\"' + (input + 1) + '\"]'));\r\n      // console.log({ \"inputComponent---inputComponent\": inputComponent, input });\r\n\r\n      return inputComponent.map(inputElement => {\r\n        // console.log({ \"inputElement---inputElement\": inputElement });\r\n\r\n        let newObject = new MemberMeetingEventDateFormInputModel();\r\n        newObject.meetingEventId = this.meetingEventId;\r\n        // @ts-ignore\r\n        newObject.dateId = Number(inputElement.dateValue ?? 0);\r\n        // @ts-ignore\r\n        newObject.memberId = this.meetingMemberId;\r\n        return newObject;\r\n      })[0];\r\n    });\r\n \r\n\r\n    // console.log({ \"multiple_date_objects\": this.multipleDateObjects });\r\n\r\n  }\r\n\r\n  firstUpdated() {\r\n\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["MemberMeetingEventDateModel","toJson","id","this","meetingEventId","dateId","memberId","updatedBy","updateDate","toISOString","date","memberInfo","undefined","static","json","model","MeetingEventIDModel","DateIdModel","fromJson","MeetingAttendanceMemberModel","Date","OrganizationMemberModel","IndividualMemberModel","toString","JSON","stringify","creationDate","MemberMeetingEventDateFormInputModel","MemberDateInputsComponent","LitElement","constructor","super","meetingDates","inputId","Math","random","substring","smallView","connectedCallback","disconnectedCallback","render","meetingDates__","map","value","html","handleDateChange","getMeetingDate","forEach","meetingDate","event","dateValue","target","firstUpdated","createRenderRoot","styles","css","property","type","Array","String","Boolean","customElement","MemberDateMultipleInputsComponent","currentObjectCount","multipleDateObjects","removedInputIndex","addedInputIndex","meetingDatesCalled","loading","_inputs","inputs","requestUpdate","setInterval","length","addInput","Event","newInput","push","setTimeout","multipleInputsHaveChanged","removeInput","index","currentInputList","currentList","join","split","_","input","nothing","from","document","querySelectorAll","notRemovedComponents","inputIndex","includes","inputElement","newObject","Number","meetingMemberId"],"sourceRoot":""}