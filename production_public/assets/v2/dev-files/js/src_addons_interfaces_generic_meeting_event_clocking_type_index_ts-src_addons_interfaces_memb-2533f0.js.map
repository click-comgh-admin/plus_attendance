{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_addons_interfaces_generic_meeting_event_clocking_type_index_ts-src_addons_interfaces_memb-2533f0.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/date_time/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/member_clocking_info/index_full.ts","webpack://webpackNumbers/./src/addons/interfaces/generic/meeting_event/clocking_type/index.ts","webpack://webpackNumbers/./src/addons/interfaces/members/groupings/group/index.ts","webpack://webpackNumbers/./src/addons/interfaces/members/groupings/subgroup/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/cancel-clocking.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/clock-in.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/clock-out.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/end-break.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/start-break.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/group/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/subgroup/index.ts","webpack://webpackNumbers/./src/addons/network/generic/meeting_event/clocking_type/index.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first__individual.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first__organization.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/second.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/third.ts"],"sourcesContent":["export const dateTime = (date: string = \"\") => {\r\n  // new Date(date)\r\n  let now = new Date(),\r\n    year = now.getFullYear(),\r\n    month = (now.getMonth() + 1),\r\n    day = now.getDate(),\r\n    hour = now.getHours(),\r\n    minutes = now.getMinutes(),\r\n    seconds = now.getSeconds(),\r\n    getDate = year + '-' + month + '-' + day,\r\n    getTime = hour + \":\" + minutes + \":\" + seconds,\r\n    newDateTime = new Date(year, month, day, hour, minutes, seconds),\r\n    dateTime = getDate + ' ' + getTime,\r\n    code = year + month + day + hour + minutes + seconds;\r\n  return { dateTime: newDateTime, __string__: dateTime, __code__: code, };\r\n}\r\n\r\nexport const getDateTime = (date: Date, options?: Intl.DateTimeFormatOptions) => {\r\n  const __date = new Date(),\r\n    _DateString = `${date}`;\r\n  \r\n  let _date = new Date(_DateString);\r\n  return _date.toLocaleString('en-US', options);\r\n}","import { Date_I } from \"@@addons/interfaces/datetime/date\";\r\nimport { MembershipUser_I, MembershipUser_S } from \"@@addons/interfaces/members/user\";\r\nimport { MembershipOrganizationUserModel, Convert as moumConvert } from \"@@addons/interfaces/members/user/organization_model\";\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from \".\";\r\n\r\nexport interface MemberClockingInfoFull_I {\r\n  attendance?: MemberClockingInfo_I,\r\n  additionalInfo?: MemberClockingAdditionalInfo_I,\r\n  lastSeen?: Date,\r\n  status?: String,\r\n}\r\nexport interface MemberClockingAdditionalInfo_I {\r\n  id?: number,\r\n  memberId?: number,\r\n  memberInfo?: MembershipUser_I | MembershipOrganizationUserModel,\r\n  phone?: string,\r\n  email?: string,\r\n  placeOfWork?: string,\r\n  whatsapp?: string,\r\n  facebook?: string,\r\n  twitter?: string,\r\n  instagram?: string,\r\n  businessHashtag?: string,\r\n  businessDescription?: string,\r\n  profession?: string,\r\n  dateJoined?: Date,\r\n  date?: Date\r\n}\r\n\r\nexport const InstanceOfOrganizationMember = (data: any) => {\r\n  return \"organizationName\" in data && \"organizationType\" in data && \"businessRegistered\" in data && \"organizationPhone\" in data && \"dateOfIncorporation\" in data;\r\n}\r\n\r\nexport function MemberClockingAdditionalInfo_S(data: any, accountType?: number): MemberClockingAdditionalInfo_I {\r\n  // console.log({data});\r\n  let memberInfo: MembershipUser_I | MembershipOrganizationUserModel = null\r\n  \r\n  if (accountType === 1) {\r\n    memberInfo = MembershipUser_S(data['memberInfo']);\r\n  } else {\r\n    memberInfo = moumConvert.toMembershipOrganizationUserModel(JSON.stringify(data['memberInfo']))\r\n  }\r\n  \r\n  const MemberClockingAdditionalInfo_S: MemberClockingAdditionalInfo_I = {\r\n    id: Number(data['id']),\r\n    memberId: Number(data['memberId']),\r\n    memberInfo: memberInfo,\r\n    phone: String(data['phone']),\r\n    email: String(data['email']),\r\n    facebook: String(data['facebook']),\r\n    instagram: String(data['instagram']),\r\n    placeOfWork: String(data['placeOfWork']),\r\n    profession: String(data['profession']),\r\n    twitter: String(data['twitter']),\r\n    whatsapp: String(data['whatsapp']),\r\n    businessHashtag: String(data['businessHashtag']),\r\n    businessDescription: String(data['businessDescription']),\r\n    dateJoined: Date_I(data['dateJoined']),\r\n    date: Date_I(data['date']),\r\n  };\r\n\r\n  return MemberClockingAdditionalInfo_S;\r\n}\r\n\r\nexport function MemberClockingInfoFull_S(data: any): MemberClockingInfoFull_I {\r\n  // console.log({data});\r\n  const ATTENDANCE = MemberClockingInfo_S(data['attendance']);\r\n  \r\n  const MemberClockingInfoFull_S: MemberClockingInfoFull_I = {\r\n    attendance: ATTENDANCE,\r\n    additionalInfo: MemberClockingAdditionalInfo_S(data['additionalInfo'], ATTENDANCE.accountType),\r\n    lastSeen: Date_I(data['lastSeen']),\r\n    status: String(data['status']),\r\n  };\r\n\r\n  return MemberClockingInfoFull_S;\r\n}","export interface GenericMeetingEventClockingTypeInfo_I { \r\n  id: number,\r\n  name: string,\r\n}\r\n\r\nexport function GenericMeetingEventClockingTypeInfo_S(data: any): GenericMeetingEventClockingTypeInfo_I {\r\n  // console.log({data});\r\n  \r\n  const genericMeetingEventClockingTypeInfo_S: GenericMeetingEventClockingTypeInfo_I = {\r\n    id: Number(data['id']),\r\n    name: data['name'],\r\n  };\r\n\r\n  return genericMeetingEventClockingTypeInfo_S;\r\n}\r\n\r\nexport type BreakClockingTYPE = \"inTime\" | \"outTime\" | \"startBreak\" | \"endBreak\";","import { GroupingsMemberCategories_I, GroupingsMemberCategories_S } from \"../member_categories\";\r\n\r\nexport interface GroupingsGroup_I {\r\n  id: number,\r\n  clientId?: number,\r\n  group?: string,\r\n  branchId?: number,\r\n  memberCategoryId?: GroupingsMemberCategories_I,\r\n  createdBy?: number,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  date?: Date,\r\n}\r\n\r\nexport function GroupingsGroup_S(data: any): GroupingsGroup_I {\r\n  // console.log({data});\r\n  \r\n  const groupingsGroup_S: GroupingsGroup_I = {\r\n    id: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    group: String(data['group']),\r\n    branchId: Number(data['branchId']),\r\n    memberCategoryId: GroupingsMemberCategories_S(data['memberCategoryId']),\r\n    createdBy: Number(data['createdBy']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    date: new Date(data['date']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return groupingsGroup_S;\r\n}","import { GET_MemberGroupingsGroups } from \"@@addons/network/members/groupings/group\";\r\nimport { GroupingsGroup_I } from \"../group\";\r\nimport { GroupingsMemberCategories_I, GroupingsMemberCategories_S } from \"../member_categories\";\r\n\r\nexport interface GroupingsSubGroup_I {\r\n  id: number,\r\n  clientId?: number,\r\n  groupId?: number,\r\n  groupName?: string,\r\n  branchId?: number,\r\n  memberCategoryId?: GroupingsMemberCategories_I,\r\n  subgroup?: string,\r\n  createdBy?: number,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  date?: Date,\r\n}\r\n\r\nexport function GroupingsSubGroup_S(data: any): GroupingsSubGroup_I {\r\n  // console.log({data});\r\n  const groupId = data['groupId'];\r\n  const groupingsSubGroup_S: GroupingsSubGroup_I = {\r\n    id: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    groupId: Number(groupId['id']),\r\n    groupName: String(groupId['group']),\r\n    subgroup: String(data['subgroup']),\r\n    branchId: Number(data['branchId']),\r\n    memberCategoryId: GroupingsMemberCategories_S(data['memberCategoryId']),\r\n    createdBy: Number(data['createdBy']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    date: new Date(data['date']),\r\n    updateDate: new Date(data['updateDate']),\r\n  };\r\n\r\n  return groupingsSubGroup_S;\r\n}\r\n\r\n\r\nasync function getGroup(ID: number) {\r\n  const _networkResponse = await GET_MemberGroupingsGroups<GroupingsGroup_I>(ID);\r\n  if (_networkResponse === null) {\r\n    return \"???\";\r\n  } else {\r\n    if (_networkResponse.response.success && 'group' in _networkResponse.response.data) {\r\n      \r\n      const group: GroupingsGroup_I = _networkResponse.response.data;\r\n      return group.group;\r\n    } else {\r\n      let message = \"\";\r\n      let _message = _networkResponse.response.message;\r\n      if (Array.isArray(_message)) {\r\n        message = \"Unknown Error!\";\r\n      } else {\r\n        message = _message;\r\n      }\r\n      return message;\r\n    }\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceCancelClocking(clockId: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/cancel-clocking/' + clockId,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Cancel Clocking?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingClockIn(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/clock-in/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Clock In?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingClockOut(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/clock-out/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Clock Out?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingEndBreak(clockId: Number, time: string = null): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/end-break/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'End Break?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingStartBreak(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/start-break/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Start Break?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceScheduleGroup<Type>(ID: Number = null, url_params: string = \"\", ){\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/group'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceScheduleSubGroup<Type>(ID: Number = null, url_params: string = \"\", ) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/subgroup'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_GenericMeetingEventClockingType<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'generic/meeting-event/clocking-type'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { base64Encode } from '@@addons/functions/base64';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { InstanceOfOrganizationMember, MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\nimport './first__individual';\r\nimport './first__organization';\r\n\r\n\r\n@customElement(\"clocker-table-parts-first\")\r\nexport class ClockerTablePartsFirst extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({ \"this.clocking_info\": this.clocking_info });\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n  \r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n  \r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() { \r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    if (clockingInfo !== null && clockingInfoFull !== null) {\r\n      // console.log({ \"clockingInfo\": clockingInfo });\r\n      // console.log({ \"clockingInfoFull\": clockingInfoFull });\r\n      const clockingMethodName = fullInfo ? clockingInfoFull.attendance.clockingMethodName : clockingInfo.clockingMethodName,\r\n        lastSeen = fullInfo ? clockingInfoFull.lastSeen : null;\r\n      if (fullInfo ? InstanceOfOrganizationMember(clockingInfoFull.additionalInfo.memberInfo): InstanceOfOrganizationMember(clockingInfo.memberId)) {\r\n        return html`<clocker-table-parts-first-organization .lastSeen=\"${lastSeen}\" clockingMethodName=\"${clockingMethodName}\" .memberData=${fullInfo? clockingInfoFull.additionalInfo.memberInfo: clockingInfo.memberId}></clocker-table-parts-first-organization>`;\r\n      } else {\r\n        return html`<clocker-table-parts-first-individual .lastSeen=\"${lastSeen}\" clockingMethodName=\"${clockingMethodName}\" .memberData=${fullInfo? clockingInfoFull.additionalInfo.memberInfo: clockingInfo.memberId}></clocker-table-parts-first-individual>`;\r\n      }\r\n      \r\n    }\r\n    return null;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { base64Encode } from '@@addons/functions/base64';\r\nimport { getDateTime } from '@@addons/functions/date_time';\r\nimport { MembershipUser_I } from '@@addons/interfaces/members/user';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"clocker-table-parts-first-individual\")\r\nexport class ClockerTablePartsFirstIndividual extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  private clockingMethodName: string = \"???\";\r\n\r\n  @property({ type: Date })\r\n  private lastSeen?: Date = null;\r\n\r\n  private _memberData: MembershipUser_I = null;\r\n\r\n  public set memberData(value: MembershipUser_I) {\r\n    this._memberData = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get memberData(): MembershipUser_I {\r\n    return this._memberData;\r\n  }\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const MEMBER_ID = base64Encode(String(this._memberData.id), true),\r\n    lastSeen = html`<div class=\"text-center whitespace-nowrap\">\r\n      <span class=\"badge badge-light shadow p-2 m-1\">\r\n        <b>Last Seen</b>: ${getDateTime(this.lastSeen, { dateStyle: \"medium\", timeStyle: \"short\" })}\r\n      </span>\r\n    </div>`;\r\n      return html`<div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n        <div class=\"d-block m-1\">\r\n          <span class=\"badge badge-info shadow-lg p-2 m-1\">\r\n            ${this.clockingMethodName}\r\n          </span>\r\n        </div>\r\n        <div class=\"flex m-1 justify-evenly\">\r\n          <user-profile-photo class=\"w-32 h-32 mr-1\" rounded 'click-to-open'=\"\"\r\n            click-to-open=\"${this.memberProfileBaseUrl}${MEMBER_ID}\" type=\"member\"\r\n            url=\"${this._memberData.profilePicture}\" size=\"32\"></user-profile-photo>\r\n        </div>\r\n        <div class=\"block m-1\">\r\n          <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n            <b>Name</b>: ${this._memberData.firstname} ${this._memberData.middlename} ${this._memberData.surname}\r\n          </span>\r\n        </div>\r\n        ${this.lastSeen === null || this.lastSeen === undefined? nothing : lastSeen}\r\n      </div>`;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { base64Encode } from '@@addons/functions/base64';\r\nimport { getDateTime } from '@@addons/functions/date_time';\r\nimport { MembershipOrganizationUserModel } from '@@addons/interfaces/members/user/organization_model';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"clocker-table-parts-first-organization\")\r\nexport class ClockerTablePartsFirstOrganization extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  private clockingMethodName: string = \"???\";\r\n\r\n  @property({ type: Date })\r\n  private lastSeen?: Date = null;\r\n\r\n  private _memberData: MembershipOrganizationUserModel = null;\r\n\r\n  public set memberData(value: MembershipOrganizationUserModel) {\r\n    this._memberData = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get memberData(): MembershipOrganizationUserModel {\r\n    return this._memberData;\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const MEMBER_ID = base64Encode(String(this._memberData.id), true),\r\n      lastSeen = html`<div class=\"text-center whitespace-nowrap\">\r\n        <span class=\"badge badge-light shadow p-2 m-1\">\r\n        <b>Last Seen</b>: ${getDateTime(this.lastSeen, { dateStyle: \"medium\", timeStyle: \"short\" })}\r\n        </span>\r\n      </div>`;\r\n      return html`<div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n        <div class=\"d-block m-1\">\r\n          <span class=\"badge badge-info shadow-lg p-2 m-1\">\r\n            ${this.clockingMethodName}\r\n          </span>\r\n        </div>\r\n        <div class=\"flex m-1 justify-evenly\">\r\n          <user-profile-photo class=\"w-32 h-32 mr-1\" rounded type=\"member\"\r\n            url=\"${this._memberData.logo}\" size=\"32\"></user-profile-photo>\r\n        </div>\r\n        <div class=\"block m-1\">\r\n          <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n            <b>Name</b>: ${this._memberData.organizationName}\r\n          </span>\r\n        </div>\r\n        ${this.lastSeen === null || this.lastSeen === undefined? nothing : lastSeen}\r\n      </div>`;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { getDateTime } from '@@addons/functions/date_time';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { InstanceOfOrganizationMember, MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport { PATCH_AttendanceClockingClockIn } from '@@addons/network/attendance/clocking/clock-in';\r\nimport { PATCH_AttendanceClockingStartBreak } from '@@addons/network/attendance/clocking/start-break';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport '@material/mwc-icon-button';\r\n\r\n/*this is to change automatically update clocking times since datatabel is not allowing it */\r\nexport const setClockingTimeInfo = (clockingTime: boolean, clockingTimeValue: string) => {\r\n  // @ts-ignore\r\n  window['clocker'] = {\r\n    'clockingTimeInfo': {\r\n      \"clockingTime\": clockingTime, \"clockingTimeValue\": clockingTimeValue,\r\n    }\r\n  };\r\n}\r\nexport const getClockingTimeInfo = () => {\r\n  if (\"clocker\" in window) {\r\n    // @ts-ignore\r\n    const CTI = window['clocker']['clockingTimeInfo'];\r\n    if ('clockingTime' in CTI) return {\r\n      \"clockingTime\": CTI.clockingTime, \"clockingTimeValue\": CTI.clockingTimeValue,\r\n    }\r\n\r\n  } return null;\r\n}\r\n\r\n@customElement(\"clocker-table-parts-second\")\r\nexport class ClockerTablePartsSecond extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  @property({ type: String })\r\n  public clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clocking: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public clockingTime: boolean = false;\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public pageButtonAccess: boolean = false;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    console.log({\"this.pageButtonAccess\": this.pageButtonAccess});\r\n    \r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() {\r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n    if (clockingInfo !== null && clockingInfoFull !== null) {\r\n      const atDate = getDateTime(fullInfo ? clockingInfoFull.attendance.date : clockingInfo.date, { dateStyle: \"medium\", timeStyle: \"short\" }); // Sun, 07:39 AM\r\n      const inTime = fullInfo ? clockingInfoFull.attendance.inTime : clockingInfo.inTime;\r\n      // const atInTime = inTime !== null ? getLocalTime(inTime, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const atInTime = inTime !== null ? getDateTime(inTime, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      // console.log({atInTime, \"_clockingInfo.inTime\": _clockingInfo.inTime})\r\n      const CLOCK_ID = fullInfo ? clockingInfoFull.attendance.id : clockingInfo.id;\r\n      const CLOCKED = fullInfo ? clockingInfoFull.attendance.inOrOut : clockingInfo.inOrOut;\r\n      const startBreak = fullInfo ? clockingInfoFull.attendance.startBreak : clockingInfo.startBreak;\r\n      // const atBreakTime = startBreak !== null ? getLocalTime(startBreak, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const atBreakTime = startBreak !== null ? getDateTime(startBreak, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const TODAY = new Date();\r\n      const HAS_BREAKTIME = fullInfo ? clockingInfoFull.attendance.meetingEventId.hasBreakTime : clockingInfo.meetingEventId.hasBreakTime;\r\n      // console.log({ HAS_BREAKTIME, _clockingInfo });\r\n      const IS_TODAY = (fullInfo ? clockingInfoFull.attendance.date.toDateString() : clockingInfo.date.toDateString()) === TODAY.toDateString();\r\n      return html`\r\n        <div class=\"shadow bg-white p-2 text-center whitespace-nowrap\">\r\n          <div class=\"flex justify-between\">\r\n            ${this.clocking ? html`\r\n            <input type=\"checkbox\" multi-break-check-in=\"${CLOCK_ID}\" name=\"member_check_in_${CLOCK_ID}\"\r\n              id=\"member_check_in_${CLOCK_ID}\"\r\n              class=\"m-1 rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n            `: nothing}\r\n            <label for=\"member_check_in_${CLOCK_ID}\">@ ${atDate}</label>\r\n          </div>\r\n        </div>\r\n        ${this.clocking ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0\" clock-id=\"${CLOCK_ID}\" clock-user=\"in\">\r\n            <span class=\"pe-7s-check bg-happy-itmeo fa-5x icon-gradient\"></span>\r\n          </button>\r\n        </div>\r\n        <div class=\"text-center flex justify-center whitespace-nowrap\">\r\n          <span class=\"badge badge-success mx-1\">${IS_TODAY ? html`Today` : html`Post Clocking`}</span>\r\n          ${CLOCKED ? html`\r\n          <span class=\"badge badge-success bg-grow-early mx-1\">Present</span>`: html`\r\n          <span class=\"badge badge-danger mx-1\">Not Clocked</span>\r\n          `}\r\n        </div>\r\n        `: html`\r\n          <div class=\"text-center flex justify-evenly whitespace-nowrap\">\r\n            <a href=\"tel://${clockingInfoFull.additionalInfo.phone}\">\r\n              <mwc-icon-button class=\"bg-sunny-morning text-white\" icon=\"call\"></mwc-icon-button>\r\n            </a>\r\n            <a href=\"https://api.whatsapp.com/send?phone=+${clockingInfoFull.additionalInfo.whatsapp}&amp;text=\">\r\n              <mwc-icon-button class=\"bg-grow-early text-white\" icon=\"whatsapp\"></mwc-icon-button>\r\n            </a>\r\n          </div>\r\n        `}\r\n        ${CLOCKED && (inTime !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Clock in Time</b>: ${atInTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n        ${this.clocking ? html`\r\n          ${HAS_BREAKTIME ? html`\r\n          <hr class=\"whitespace-nowrap\">\r\n          <div class=\"text-center whitespace-nowrap\">\r\n            <mwc-button raised class=\"shadow-sm success button\" label=\"Start Break\" clock-id=\"${CLOCK_ID}\" user-break=\"start\"\r\n              icon=\"check\">\r\n            </mwc-button>\r\n          </div>\r\n          `: ''\r\n          }\r\n        `: nothing}\r\n        ${(startBreak !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Break Start Time</b>: ${atBreakTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n      `;\r\n    }\r\n    return null\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.clockUser();\r\n    this.userBreak();\r\n\r\n    setInterval(() => {\r\n      const CTI = getClockingTimeInfo();\r\n      if (CTI !== null) {\r\n        this.clockingTime = CTI.clockingTime;\r\n        this.clockingTimeValue = CTI.clockingTimeValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  private clockUser() {\r\n    const selectorString = 'clock-user';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(clockUser => {\r\n      // @ts-ignore\r\n      const clockTYPE: \"in\" | \"out\" = clockUser.getAttribute(selectorString);\r\n      if (clockTYPE === \"in\") {\r\n        // console.log({ \"clock in\": clockTYPE });\r\n        clockUser.addEventListener('click', (e) => {\r\n          this.clockInUser(clockUser, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async clockInUser(element: Element, e: any) {\r\n    e.preventDefault();\r\n    // console.log({ \"this.clockingTime\": this.clockingTime, \"this.clockingTimeValue\": this.clockingTimeValue });\r\n    if (this.pageButtonAccess) {\r\n      const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n      // console.log({ e, element, CLOCK_ID });\r\n      if (this.clockingTime) {\r\n        await PATCH_AttendanceClockingClockIn(CLOCK_ID, this.clockingTimeValue);\r\n      } else {\r\n        await PATCH_AttendanceClockingClockIn(CLOCK_ID);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  private userBreak() {\r\n    const selectorString = 'user-break';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(userBreak => {\r\n      // @ts-ignore\r\n      const breakTYPE: \"start\" | \"end\" = userBreak.getAttribute(selectorString);\r\n      if (breakTYPE === \"start\") {\r\n        // console.log({ \"start break\": breakTYPE });\r\n        userBreak.addEventListener('click', (e) => {\r\n          this.startUserBreak(userBreak, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async startUserBreak(element: Element, e: any) {\r\n    e.preventDefault();\r\n    if (this.pageButtonAccess) {\r\n      const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n      // console.log({ e,element,CLOCK_ID });\r\n      if (this.clockingTime) {\r\n        await PATCH_AttendanceClockingStartBreak(CLOCK_ID, this.clockingTimeValue);\r\n      } else {\r\n        await PATCH_AttendanceClockingStartBreak(CLOCK_ID);\r\n      }\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { base64Encode } from '@@addons/functions/base64';\r\nimport { getDateTime } from '@@addons/functions/date_time';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport { PATCH_AttendanceCancelClocking } from '@@addons/network/attendance/clocking/cancel-clocking';\r\nimport { PATCH_AttendanceClockingClockOut } from '@@addons/network/attendance/clocking/clock-out';\r\nimport { PATCH_AttendanceClockingEndBreak } from '@@addons/network/attendance/clocking/end-break';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport { getClockingTimeInfo } from './second';\r\n\r\n\r\n@customElement(\"clocker-table-parts-third\")\r\nexport class ClockerTablePartsThird extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clocking: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clockingTime: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private excuseBaseUrl: string = \"/clocking/excuse?clocking-id=\";\r\n\r\n  @property({ type: String })\r\n  private followUpBaseUrl: string = \"/clocking/follow-up?clocking-id=\";\r\n\r\n  @property({ type: Boolean })\r\n  public pageButtonAccess: boolean = false;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() {\r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n    if (clockingInfo !== null && clockingInfoFull !== null) {\r\n      const atDate = getDateTime(fullInfo ? clockingInfoFull.attendance.date : clockingInfo.date, { dateStyle: \"medium\", timeStyle: \"short\" }); // Sun, 07:39 AM\r\n      const outTime = fullInfo ? clockingInfoFull.attendance.outTime : clockingInfo.outTime;\r\n      // const atOutTime = outTime !== null ? getLocalTime(outTime, {timeStyle: \"short\"}): \"--:--\"; // 07:39 AM\r\n      const atOutTime = outTime !== null ? getDateTime(outTime, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      // console.log({atOutTime, \"clockingInfo.outTime\": clockingInfo.outTime})\r\n      const CLOCK_ID = fullInfo ? clockingInfoFull.attendance.id : clockingInfo.id;\r\n      const CLOCKED = fullInfo ? clockingInfoFull.attendance.inOrOut : clockingInfo.inOrOut;\r\n      const endBreak = fullInfo ? clockingInfoFull.attendance.endBreak : clockingInfo.endBreak;\r\n      // const atBreakTime = endBreak !== null ? getLocalTime(endBreak, {timeStyle: \"short\"}): \"--:--\"; // 07:39 AM\r\n      const atBreakTime = endBreak !== null ? getDateTime(endBreak, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const HAS_BREAKTIME = fullInfo ? clockingInfoFull.attendance.meetingEventId.hasBreakTime : clockingInfo.meetingEventId.hasBreakTime;\r\n      const JUSTIFICATION = fullInfo ? clockingInfoFull.attendance.justification : clockingInfo.justification;\r\n      const CLOCK_ID_ENC = base64Encode(String(CLOCK_ID), true);\r\n      // console.log({ HAS_BREAKTIME, clockingInfo });\r\n      return html`\r\n        <div class=\"shadow bg-white p-2 text-center whitespace-nowrap\">\r\n          <div class=\"flex justify-between\">\r\n            ${this.clocking ? html`\r\n            <input type=\"checkbox\" multi-break-check-out=\"${CLOCK_ID}\" name=\"member_check_out_${CLOCK_ID}\"\r\n              id=\"member_check_out_${CLOCK_ID}\"\r\n              class=\"m-1 rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n            `: nothing}\r\n            <label for=\"member_check_out_${CLOCK_ID}\">@ ${atDate}</label>\r\n          </div>\r\n        </div>\r\n        ${this.clocking ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0 mx-1\" clock-id=\"${CLOCK_ID}\" clock-user=\"out\">\r\n            <span class=\"pe-7s-check bg-happy-itmeo fa-5x icon-gradient\"></span>\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0 mx-1\" clock-id=\"${CLOCK_ID}\"\r\n            cancel-user-clock=\"true\">\r\n            <span class=\"pe-7s-close-circle bg-love-kiss fa-5x icon-gradient\"></span>\r\n          </button>\r\n        </div>\r\n        <div class=\"text-center flex justify-center whitespace-nowrap\">\r\n          <span class=\"badge badge-warning\">'X' to Cancel Attendance</span>\r\n        </div>\r\n        `: nothing}\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          ${/** <a href=\"${this.excuseBaseUrl}${CLOCK_ID_ENC}\" class=\"btn btn-info btn-sm\" target=\"_blank\" type=\"button\">Enter/ View\r\n            Excuse</a> */ \"\"}\r\n            ${JUSTIFICATION === null ? nothing: html`<span class=\"badge badge-light shadow p-2 m-1\">\r\n              <b>Justification</b>: ${JUSTIFICATION}\r\n            </span>`}\r\n          <a href=\"${this.followUpBaseUrl}${CLOCK_ID_ENC}\" class=\"btn btn-primary btn-sm\" target=\"_blank\" type=\"button\">Follow-Up</a>\r\n        </div>\r\n        ${CLOCKED && (outTime !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Clock out Time</b>: ${atOutTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n        ${this.clocking ? html`\r\n        ${HAS_BREAKTIME ? html`\r\n        <hr class=\"whitespace-nowrap\">\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <mwc-button raised class=\"shadow-sm info button\" label=\"End Break\" clock-id=\"${CLOCK_ID}\" user-break=\"end\"\r\n            icon=\"close\">\r\n          </mwc-button>\r\n        </div>\r\n        `: ''\r\n        }\r\n        `: nothing}\r\n        ${(endBreak !== null) ? html`\r\n        <div class=\"text-center\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Break End Time</b>: ${atBreakTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n      `;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.clockUser();\r\n    this.userBreak();\r\n    this.cancelClocking();\r\n\r\n    setInterval(() => {\r\n      const CTI = getClockingTimeInfo();\r\n      if (CTI !== null) {\r\n        this.clockingTime = CTI.clockingTime;\r\n        this.clockingTimeValue = CTI.clockingTimeValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  private cancelClocking() {\r\n    const selectorString = 'cancel-user-clock=\"true\"';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(cancelClock => {\r\n      cancelClock.addEventListener('click', async (e) => {\r\n        e.preventDefault();\r\n        if (this.pageButtonAccess) {\r\n          const CLOCK_ID = Number(cancelClock.getAttribute('clock-id'));\r\n          await PATCH_AttendanceCancelClocking(CLOCK_ID);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  private clockUser() {\r\n    const selectorString = 'clock-user';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(clockUser => {\r\n      // @ts-ignore\r\n      const clockTYPE: \"in\" | \"out\" = clockUser.getAttribute(selectorString);\r\n      if (clockTYPE === \"out\") {\r\n        // console.log({ \"clock out\": clockTYPE });\r\n        clockUser.addEventListener('click', (e) => {\r\n          this.clockOutUser(clockUser, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async clockOutUser(element: Element, e: any) {\r\n    e.preventDefault();\r\n    if (this.pageButtonAccess) {\r\n      const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n      // console.log({ e, element, CLOCK_ID });\r\n      if (this.clockingTime) {\r\n        await PATCH_AttendanceClockingClockOut(CLOCK_ID, this.clockingTimeValue);\r\n      } else {\r\n        await PATCH_AttendanceClockingClockOut(CLOCK_ID);\r\n      }\r\n    }\r\n  }\r\n\r\n  private userBreak() {\r\n    const selectorString = 'user-break';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(userBreak => {\r\n      // @ts-ignore\r\n      const breakTYPE: \"start\" | \"end\" = userBreak.getAttribute(selectorString);\r\n      if (breakTYPE === \"end\") {\r\n        // console.log({ \"end break\": breakTYPE });\r\n        userBreak.addEventListener('click', (e) => {\r\n          this.endUserBreak(userBreak, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async endUserBreak(element: Element, e: any) {\r\n    e.preventDefault();\r\n    if (this.pageButtonAccess) {\r\n      const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n      console.log({ e, element, CLOCK_ID });\r\n      if (this.clockingTime) {\r\n        await PATCH_AttendanceClockingEndBreak(CLOCK_ID, this.clockingTimeValue);\r\n      } else {\r\n        await PATCH_AttendanceClockingEndBreak(CLOCK_ID);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["dateTime","date","now","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minutes","getMinutes","seconds","getSeconds","getTime","__string__","__code__","getDateTime","options","toLocaleString","InstanceOfOrganizationMember","data","MemberClockingAdditionalInfo_S","accountType","memberInfo","MembershipUser_S","toMembershipOrganizationUserModel","JSON","stringify","id","Number","memberId","phone","String","email","facebook","instagram","placeOfWork","profession","twitter","whatsapp","businessHashtag","businessDescription","dateJoined","Date_I","MemberClockingInfoFull_S","ATTENDANCE","MemberClockingInfo_S","attendance","additionalInfo","lastSeen","status","GenericMeetingEventClockingTypeInfo_S","name","GroupingsGroup_S","clientId","group","branchId","memberCategoryId","GroupingsMemberCategories_S","createdBy","updatedBy","updateDate","GroupingsSubGroup_S","groupId","groupName","subgroup","PATCH_AttendanceCancelClocking","clockId","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","URLS","AKWAABA_API_BASE_URL","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","response","unknownError","length","errors","forEach","e","err","errormsg","error","push","res","https_swal_error_format","catch","allowOutsideClick","result","isConfirmed","successMsg","_VALUE","value","Object","VALUE","message","setTimeout","window","location","reload","PATCH_AttendanceClockingClockIn","time","PATCH_AttendanceClockingClockOut","PATCH_AttendanceClockingEndBreak","PATCH_AttendanceClockingStartBreak","GET_AttendanceScheduleGroup","ID","url_params","console","errorHttp","GET_AttendanceScheduleSubGroup","GET_GenericMeetingEventClockingType","type","ClockerTablePartsFirst","LitElement","constructor","super","_data","_type","clockingInfo","fullInfo","clocking_info","memberProfileBaseUrl","this","requestUpdate","connectedCallback","_clockingInfo","parse","disconnectedCallback","getClockingInfo","getClockingInfoFull","render","clockingInfoFull","clockingMethodName","html","firstUpdated","createRenderRoot","styles","css","property","Boolean","customElement","ClockerTablePartsFirstIndividual","_memberData","memberData","MEMBER_ID","base64Encode","dateStyle","timeStyle","profilePicture","firstname","middlename","surname","undefined","nothing","ClockerTablePartsFirstOrganization","logo","organizationName","setClockingTimeInfo","clockingTime","clockingTimeValue","getClockingTimeInfo","CTI","ClockerTablePartsSecond","clocking","pageButtonAccess","log","atDate","inTime","atInTime","CLOCK_ID","CLOCKED","inOrOut","startBreak","atBreakTime","TODAY","HAS_BREAKTIME","meetingEventId","hasBreakTime","IS_TODAY","toDateString","clockUser","userBreak","setInterval","selectorString","document","querySelectorAll","getAttribute","addEventListener","clockInUser","element","preventDefault","startUserBreak","ClockerTablePartsThird","excuseBaseUrl","followUpBaseUrl","outTime","atOutTime","endBreak","JUSTIFICATION","justification","CLOCK_ID_ENC","cancelClocking","cancelClock","clockOutUser","endUserBreak"],"sourceRoot":""}