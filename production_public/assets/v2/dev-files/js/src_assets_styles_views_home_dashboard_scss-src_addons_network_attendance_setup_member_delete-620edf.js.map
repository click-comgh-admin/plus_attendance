{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_assets_styles_views_home_dashboard_scss-src_addons_network_attendance_setup_member_delete-620edf.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/network/attendance/setup/member/delete.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/member/post.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/schedule/index.ts","webpack://webpackNumbers/./src/view/attendance/setup/schedules/title_card/index.ts"],"sourcesContent":["import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function DELETE_AttendanceDeleteScheduleMember(meetingEventId: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/member/' + meetingEventId,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Remove Member?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_AttendanceAddScheduleMember(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/member',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"add-schedule-member\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Add Member?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceSchedule<Type>(ID: Number = null, url_params: string = \"\", ) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/schedule'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import \"@material/mwc-button\"\r\n// @ts-ignore\r\nimport { QueryOptions } from 'select2';\r\nimport '@@addons/widgets/form/new/select';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport { GET_AttendanceSchedule } from '@@addons/network/attendance/setup/schedule';\r\nimport { MeetingEventSchedule_I } from '@@addons/interfaces/attendance/meeting_event/schedules';\r\nimport { NetworkCallResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport { SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\n\r\n\r\n@customElement(\"schedule-title-card\")\r\nexport class ScheduleTitleCard extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  public currentMeetingEventName?: string;\r\n\r\n  @property({ type: Number })\r\n  public meetingEventId: number = 0;\r\n\r\n  @property({ type: Number })\r\n  public CLIENT_ID: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage: number = 0;\r\n\r\n  private __schedule: NetworkCallResponse_I<MeetingEventSchedule_I> = null;\r\n\r\n  public set _schedule(value: NetworkCallResponse_I<MeetingEventSchedule_I>) {\r\n    this.__schedule = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _schedule(): NetworkCallResponse_I<MeetingEventSchedule_I> {\r\n    return this.__schedule;\r\n  }\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    await this.getAttendanceSchedule();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"flex justify-end\">\r\n        <div class=\"col-md-6 col-lg-4 px-0 my-2\">\r\n          <div class=\"m-1 border rounded-md\">\r\n            <div class=\"p-2 shadow-sm border rounded-md\">\r\n              <h4 class=\"text-lg font-bold\">${\r\n                // @ts-ignore\r\n                `${this.currentMeetingEventName ?? this._schedule == null? \"...\": this._schedule.data.name}`.replace(/\\b\\w/g, (match) => match.toUpperCase())\r\n              }</h4>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              ${this.meetingEventField}\r\n            </div>\r\n            <div class=\"p-2 shadow-sm border rounded-md\">\r\n              <div class=\"flex justify-end \">\r\n                <mwc-button raised class=\"button success\" @click=\"${this.changeCurrentSchedule}\">\r\n                  Change Meeting/ Event\r\n                </mwc-button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private get meetingEventField() {\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    // const _get_cookie = base64Decode(get_cookie('client_tokenLogin'));\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    // ajaxHeader.Authorization = \"Token \" + _get_cookie;\r\n    // console.log({ajaxHeader: ajaxHeader});\r\n    // console.log({ \"this._meetingEvents\": this._meetingEvents });\r\n    return html`\r\n      <div class=\"container\">\r\n        <div class=\"row justify-center\">\r\n          <div class=\"col-md-12\">\r\n            <h4 class=\"font-semibold my-2\">Select Meeting/ Event</h4>\r\n            <select-input class=\"w-100\" id=\"change_schedule_input_box\" name=\"change_schedule_input_box\" label=\"Select Schedule\"\r\n              .ajaxFetchProcessResponse=\"${this.processClientScheduleSearch}\" startSearchPage=\"${this.startSearchPage}\"\r\n              .ajaxHeader=\"${ajaxHeader}\" .ajaxFetchUrlParams=\"${this.ajaxFetchUrlParams}\"\r\n              ajaxFetchUrl=\"${CONSTANTS.URLS.AKWAABA_API_BASE_URL}attendance/meeting-event/schedule\"></select-input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private processClientScheduleSearch(data: any, params: QueryOptions): SelectInputProcessedAjaxResponse_I {\r\n    params.page = params.page || 0;\r\n    const TOTAL = data.count,\r\n      RESULTS = data.results,\r\n      SELECTOR = document.querySelector('[id=\"change_schedule_input_box\"]');\r\n    // console.log({ data, params, RESULTS, SELECTOR });\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (TOTAL > 0) {\r\n      var _data = RESULTS;\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const id = item['id'];\r\n        const fullName = item['name'];\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n        }\r\n      }\r\n    }\r\n    // console.log({processedData});\r\n\r\n\r\n\r\n    return {\r\n      results: processedData,\r\n      total: TOTAL,\r\n      // @ts-ignore\r\n      totalShowing: SELECTOR.totalShowing,\r\n    };\r\n  }\r\n\r\n  private get ajaxFetchUrlParams(): SelectInputProcessedAjaxUrlParam_I[] {\r\n    return [\r\n      { param: \"isRecuring\", value: \"both\" },\r\n      { param: \"branchId\", value: String(getUserLoginInfoCookie().user.branchId) }\r\n    ]\r\n  }\r\n\r\n  private changeCurrentSchedule(event: Event) {\r\n    event.preventDefault();\r\n    this.querySelectorAll('[id=\"change_schedule_input_box\"][name=\"change_schedule_input_box\"]').forEach((input) => {\r\n\r\n      // @ts-ignore\r\n      if (input.value.length > 0) {\r\n        // Get the current URL.\r\n        const currentUrl = window.location.href;\r\n\r\n        // Create a new URL with the meeting-event-id query parameter set to the new value.\r\n        const newUrl = new URL(currentUrl);\r\n\r\n        // @ts-ignore\r\n        newUrl.searchParams.set(\"meeting-event-id\", input.value);\r\n\r\n        // Reload the page with the new URL.\r\n        // @ts-ignore\r\n        window.location.href = newUrl;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  private async getAttendanceSchedule() {\r\n    const _networkResponse = await GET_AttendanceSchedule<MeetingEventSchedule_I>(this.meetingEventId);\r\n    if (_networkResponse === null) {\r\n      this._schedule = undefined;\r\n    } else {\r\n      this._schedule = _networkResponse.response;\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["DELETE_AttendanceDeleteScheduleMember","meetingEventId","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","URLS","AKWAABA_API_BASE_URL","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","JSON","stringify","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","response","unknownError","length","errors","forEach","e","err","push","error","res","https_swal_error_format","console","errorHttp","postForm","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","message","success","setTimeout","window","location","reload","POST_AttendanceAddScheduleMember","formContainer","document","querySelector","FormData","errormsg","id","GET_AttendanceSchedule","ID","url_params","ScheduleTitleCard","LitElement","constructor","super","CLIENT_ID","startSearchPage","__schedule","_schedule","this","requestUpdate","connectedCallback","getAttendanceSchedule","disconnectedCallback","render","html","currentMeetingEventName","data","name","replace","match","toUpperCase","meetingEventField","changeCurrentSchedule","firstUpdated","ajaxHeader","processClientScheduleSearch","ajaxFetchUrlParams","params","page","TOTAL","count","RESULTS","results","SELECTOR","processedData","_data","i","item","_new","text","includes","total","totalShowing","param","user","branchId","event","preventDefault","querySelectorAll","input","currentUrl","href","newUrl","URL","searchParams","set","_networkResponse","undefined","createRenderRoot","styles","css","property","type","Number","customElement"],"sourceRoot":""}