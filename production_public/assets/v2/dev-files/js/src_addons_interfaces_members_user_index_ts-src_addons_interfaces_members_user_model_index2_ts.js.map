{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_addons_interfaces_members_user_index_ts-src_addons_interfaces_members_user_model_index2_ts.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/interfaces/boolean/index.ts","webpack://webpackNumbers/./src/addons/interfaces/location/constituency.ts","webpack://webpackNumbers/./src/addons/interfaces/location/country.ts","webpack://webpackNumbers/./src/addons/interfaces/location/district.ts","webpack://webpackNumbers/./src/addons/interfaces/location/electoral_area.ts","webpack://webpackNumbers/./src/addons/interfaces/location/region.ts","webpack://webpackNumbers/./src/addons/interfaces/members/user/index.ts","webpack://webpackNumbers/./src/addons/interfaces/members/user/model/index2.ts"],"sourcesContent":["export const Boolean_I = (bool: any) => {\r\n  const _bool = String(bool).toLowerCase();\r\n  // console.info({_bool});\r\n  \r\n  if (_bool === \"1\") {\r\n    return true;\r\n  } else if (_bool === \"true\") {\r\n    return true;\r\n  } else if (bool === true) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}","import { District_I, District_S, _District_D } from \"./district\";\r\nimport { Region_I, Region_S, _Region_D } from \"./region\";\r\n\r\nexport interface Constituency_I {\r\n  id?: number,\r\n  regionId?: Region_I,\r\n  districtId?: District_I,\r\n  location?: string,\r\n}\r\nexport function Constituency_S(data: any): Constituency_I {\r\n  // console.log({data});\r\n  const constituency_S: Constituency_I = {\r\n    id: Number(data['id']),\r\n    regionId: ('regionId' in data) ? Region_S(data['regionId']) : _Region_D(),\r\n    districtId: ('districtId' in data) ? District_S(data['districtId']) : _District_D(),\r\n    location: String(data['location']),\r\n  };\r\n\r\n  return constituency_S;\r\n}\r\nexport function _Constituency_D(): Constituency_I {\r\n  // console.log({data});\r\n  const constituency_S: Constituency_I = {\r\n    id: 0,\r\n    regionId: _Region_D(),\r\n    districtId: _District_D(),\r\n    location: \"-\",\r\n  };\r\n\r\n  return constituency_S;\r\n}","export interface Country_I {\r\n  id?: number,\r\n  name?: string,\r\n  short?: string,\r\n  code?: string,\r\n}\r\nexport function Country_S(data: any): Country_I {\r\n  // console.log({data});\r\n  const _data = Array.isArray(data) ? data[0] : data;\r\n  const country_S: Country_I = {\r\n    id: _data['id'],\r\n    name: String(_data['name']),\r\n    short: String(_data['short']),\r\n    code: String(_data['code']),\r\n  };\r\n\r\n  return country_S;\r\n}\r\nexport function _Country_D(): Country_I {\r\n  const country_S: Country_I = {\r\n    id: 0,\r\n    name: \"-\",\r\n    short: \"-\",\r\n    code: \"-\",\r\n  };\r\n\r\n  return country_S;\r\n}","import { Region_I, Region_S, _Region_D } from \"./region\";\r\n\r\nexport interface District_I {\r\n  id?: number,\r\n  regionId?: Region_I,\r\n  location?: string,\r\n}\r\nexport function District_S(data: any): District_I {\r\n  // console.log({data});\r\n  const district_S: District_I = {\r\n    id: Number(data['id']),\r\n    regionId: ('regionId' in data) ? Region_S(data['regionId']) : _Region_D(),\r\n    location: String(data['location']),\r\n  };\r\n\r\n  return district_S;\r\n}\r\nexport function _District_D(): District_I {\r\n  // console.log({data});\r\n  const district_S: District_I = {\r\n    id: 0,\r\n    regionId: _Region_D(),\r\n    location: \"-\",\r\n  };\r\n\r\n  return district_S;\r\n}","import { District_I, District_S, _District_D } from \"./district\";\r\nimport { Region_I, Region_S, _Region_D } from \"./region\";\r\n\r\nexport interface ElectoralArea_I {\r\n  id?: number,\r\n  regionId?: Region_I,\r\n  districtId?: District_I,\r\n  location?: string,\r\n}\r\nexport function ElectoralArea_S(data: any): ElectoralArea_I {\r\n  // console.log({data});\r\n  const electoralArea_S: ElectoralArea_I = {\r\n    id: Number(data['id']),\r\n    regionId: ('regionId' in data) ? Region_S(data['regionId']) : _Region_D(),\r\n    districtId: ('districtId' in data) ? District_S(data['districtId']) : _District_D(),\r\n    location: String(data['location']),\r\n  };\r\n\r\n  return electoralArea_S;\r\n}\r\nexport function _ElectoralArea_D(): ElectoralArea_I {\r\n  // console.log({data});\r\n  const electoralArea_S: ElectoralArea_I = {\r\n    id: 0,\r\n    regionId: _Region_D(),\r\n    districtId: _District_D(),\r\n    location: \"-\",\r\n  };\r\n\r\n  return electoralArea_S;\r\n}","export interface Region_I {\r\n  id?: number,\r\n  location?: string,\r\n}\r\nexport function Region_S(data: any): Region_I {\r\n  // console.log({data});\r\n  const region_S: Region_I = {\r\n    id: Number(data['id']),\r\n    location: String(data['location']),\r\n  };\r\n\r\n  return region_S;\r\n}\r\nexport function _Region_D(): Region_I {\r\n  const region_S: Region_I = {\r\n    id: 0,\r\n    location: \"-\",\r\n  };\r\n\r\n  return region_S;\r\n}","import { Boolean_I } from \"@@addons/interfaces/boolean\"\r\nimport { Constituency_I, Constituency_S, _Constituency_D } from \"@@addons/interfaces/location/constituency\"\r\nimport { Country_I, Country_S, _Country_D } from \"@@addons/interfaces/location/country\"\r\nimport { District_I, District_S, _District_D } from \"@@addons/interfaces/location/district\"\r\nimport { ElectoralArea_I, ElectoralArea_S, _ElectoralArea_D } from \"@@addons/interfaces/location/electoral_area\"\r\nimport { Region_I, Region_S, _Region_D } from \"@@addons/interfaces/location/region\"\r\n\r\nfunction null_string(params: any, replace: string = \"\") {\r\n  return String(params === null ? replace : params);\r\n}\r\nexport interface MembershipUser_I {\r\n  id?: number,\r\n  clientId?: number,\r\n  firstname?: string,\r\n  middlename?: string,\r\n  surname?: string,\r\n  gender?: number,\r\n  profilePicture?: string,\r\n  dateOfBirth?: Date,\r\n  phone?: string,\r\n  email?: string,\r\n  religion?: number,\r\n  nationality?: string,\r\n  countryOfResidence?: string,\r\n  stateProvince?: string,\r\n  region?: number,\r\n  district?: number,\r\n  constituency?: number,\r\n  electoralArea?: number,\r\n  community?: string,\r\n  hometown?: string,\r\n  houseNoDigitalAddress?: string,\r\n  digitalAddress?: string,\r\n  referenceId?: string,\r\n  branchId?: number,\r\n  editable?: boolean,\r\n  profileResume?: string,\r\n  profileIdentification?: string,\r\n  archived?: boolean,\r\n  identification?: string,\r\n  accountType?: number,\r\n  memberType?: number,\r\n  level?: number,\r\n  status?: number,\r\n  lastUpdatedBy?: number,\r\n  date?: Date,\r\n  last_login?: Date,\r\n  countryInfo?: Country_I,\r\n  regionInfo?: Region_I,\r\n  districtInfo?: District_I,\r\n  constituencyInfo?: Constituency_I,\r\n  electoralareaInfo?: ElectoralArea_I,\r\n}\r\n\r\nexport function MembershipUser_S(data: any): MembershipUser_I {\r\n  // console.log({data});\r\n\r\n  const membershipUser_S: MembershipUser_I = {\r\n    id: Number(data['id']),\r\n    clientId: Number(data['clientId']),\r\n    firstname: String(data['firstname']),\r\n    middlename: null_string(data['middlename']),\r\n    surname: String(data['surname']),\r\n    gender: Number(data['gender']),\r\n    profilePicture: String(data['profilePicture']),\r\n    dateOfBirth: new Date(data['dateOfBirth']),\r\n    phone: String(data['phone']),\r\n    email: String(data['email']),\r\n    religion: Number(data['religion']),\r\n    nationality: String(data['nationality']),\r\n    countryOfResidence: String(data['countryOfResidence']),\r\n    stateProvince: String(data['stateProvince']),\r\n    region: Number(data['region']),\r\n    district: Number(data['district']),\r\n    constituency: Number(data['constituency']),\r\n    electoralArea: Number(data['electoralArea']),\r\n    community: String(data['community']),\r\n    hometown: String(data['hometown']),\r\n    houseNoDigitalAddress: String(data['houseNoDigitalAddress']),\r\n    digitalAddress: String(data['digitalAddress']),\r\n    referenceId: null_string(data['referenceId'], \"-\"),\r\n    accountType: Number(data['accountType']),\r\n    memberType: Number(data['memberType']),\r\n    branchId: Number(data['branchId']),\r\n    editable: Boolean_I(data['editable']),\r\n    profileResume: String(data['profileResume']),\r\n    profileIdentification: String(data['profileIdentification']),\r\n    archived: Boolean_I(data['archived']),\r\n    identification: String(data['identification']),\r\n    level: Number(data['level']),\r\n    status: Number(data['status']),\r\n    lastUpdatedBy: Number(data['lastUpdatedBy']),\r\n    date: new Date(data['date']),\r\n    last_login: new Date(data['last_login']),\r\n    countryInfo: ('countryInfo' in data) ? Country_S(data['countryInfo']) : _Country_D(),\r\n    regionInfo: ('regionInfo' in data) ? Region_S(data['regionInfo']) : _Region_D(),\r\n    districtInfo: ('districtInfo' in data) ? District_S(data['districtInfo']) : _District_D(),\r\n    constituencyInfo: ('constituencyInfo' in data) ? Constituency_S(data['constituencyInfo']) : _Constituency_D(),\r\n    electoralareaInfo: ('electoralareaInfo' in data) ? ElectoralArea_S(data['electoralareaInfo']) : _ElectoralArea_D(),\r\n  };\r\n\r\n  return membershipUser_S;\r\n}","// To parse this data:\n//\n//   import { Convert, MembershipUserModel } from \"./file\";\n//\n//   const membershipUserModel = Convert.toMembershipUserModel(json);\n//\n// These functions will throw an error if the JSON doesn't\n// match the expected interface, even if the JSON is valid.\n\nexport interface MembershipUserModel {\n    id?:                    number;\n    clientID?:              number;\n    firstname?:             string;\n    middlename?:            string;\n    surname?:               string;\n    gender?:                number;\n    profilePicture?:        string;\n    phone?:                 string;\n    email?:                 string;\n    dateOfBirth?:           Date;\n    religion?:              number;\n    nationality?:           string;\n    countryOfResidence?:    string;\n    stateProvince?:         string;\n    region?:                number;\n    district?:              number;\n    constituency?:          number;\n    electoralArea?:         number;\n    community?:             string;\n    hometown?:              string;\n    houseNoDigitalAddress?: string;\n    digitalAddress?:        string;\n    level?:                 number;\n    status?:                number;\n    accountType?:           number;\n    memberType?:            number;\n    date?:                  Date;\n    lastLogin?:             Date;\n    referenceID?:           string;\n    branchID?:              number;\n    editable?:              boolean;\n    profileResume?:         string;\n    profileIdentification?: string;\n    archived?:              boolean;\n    identification?:        string;\n}\n\n// Converts JSON strings to/from your types\n// and asserts the results of JSON.parse at runtime\nexport class Convert {\n    public static toMembershipUserModel(json: string): MembershipUserModel {\n        return cast(JSON.parse(json), r(\"MembershipUserModel\"));\n    }\n\n    public static membershipUserModelToJson(value: MembershipUserModel): string {\n        return JSON.stringify(uncast(value, r(\"MembershipUserModel\")), null, 2);\n    }\n}\n\nfunction invalidValue(typ: any, val: any, key: any = '') {\n    if (key) {\n        // console.error(`Invalid value for key \"${key}\". Expected type ${JSON.stringify(typ)} but got ${JSON.stringify(val)}`);\n    }\n    // console.error(`Invalid value ${JSON.stringify(val)} for type ${JSON.stringify(typ)}`, );\n}\n\nfunction jsonToJSProps(typ: any): any {\n    if (typ.jsonToJS === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.json] = { key: p.js, typ: p.typ });\n        typ.jsonToJS = map;\n    }\n    return typ.jsonToJS;\n}\n\nfunction jsToJSONProps(typ: any): any {\n    if (typ.jsToJSON === undefined) {\n        const map: any = {};\n        typ.props.forEach((p: any) => map[p.js] = { key: p.json, typ: p.typ });\n        typ.jsToJSON = map;\n    }\n    return typ.jsToJSON;\n}\n\nfunction transform(val: any, typ: any, getProps: any, key: any = ''): any {\n    function transformPrimitive(typ: string, val: any): any {\n        if (typeof typ === typeof val) return val;\n        return invalidValue(typ, val, key);\n    }\n\n    function transformUnion(typs: any[], val: any): any {\n        // val must validate against one typ in typs\n        const l = typs.length;\n        for (let i = 0; i < l; i++) {\n            const typ = typs[i];\n            try {\n                return transform(val, typ, getProps);\n            } catch (_) {}\n        }\n        return invalidValue(typs, val);\n    }\n\n    function transformEnum(cases: string[], val: any): any {\n        if (cases.indexOf(val) !== -1) return val;\n        return invalidValue(cases, val);\n    }\n\n    function transformArray(typ: any, val: any): any {\n        // val must be an array with no invalid elements\n        if (!Array.isArray(val)) return invalidValue(\"array\", val);\n        return val.map(el => transform(el, typ, getProps));\n    }\n\n    function transformDate(val: any): any {\n        if (val === null) {\n            return null;\n        }\n        const d = new Date(val);\n        if (isNaN(d.valueOf())) {\n            return invalidValue(\"Date\", val);\n        }\n        return d;\n    }\n\n    function transformObject(props: { [k: string]: any }, additional: any, val: any): any {\n        if (val === null || typeof val !== \"object\" || Array.isArray(val)) {\n            return invalidValue(\"object\", val);\n        }\n        const result: any = {};\n        Object.getOwnPropertyNames(props).forEach(key => {\n            const prop = props[key];\n            const v = Object.prototype.hasOwnProperty.call(val, key) ? val[key] : undefined;\n            result[prop.key] = transform(v, prop.typ, getProps, prop.key);\n        });\n        Object.getOwnPropertyNames(val).forEach(key => {\n            if (!Object.prototype.hasOwnProperty.call(props, key)) {\n                result[key] = transform(val[key], additional, getProps, key);\n            }\n        });\n        return result;\n    }\n\n    if (typ === \"any\") return val;\n    if (typ === null) {\n        if (val === null) return val;\n    }\n    if (typ === false) return;\n    while (typeof typ === \"object\" && typ.ref !== undefined) {\n        typ = typeMap[typ.ref];\n    }\n    if (Array.isArray(typ)) return transformEnum(typ, val);\n    if (typeof typ === \"object\") {\n        return typ.hasOwnProperty(\"unionMembers\") ? transformUnion(typ.unionMembers, val)\n            : typ.hasOwnProperty(\"arrayItems\")    ? transformArray(typ.arrayItems, val)\n            : typ.hasOwnProperty(\"props\")         ? transformObject(getProps(typ), typ.additional, val)\n            : invalidValue(typ, val);\n    }\n    // Numbers can be parsed by Date but shouldn't be.\n    if (typ === Date && typeof val !== \"number\") return transformDate(val);\n    return transformPrimitive(typ, val);\n}\n\nfunction cast<T>(val: any, typ: any): T {\n    return transform(val, typ, jsonToJSProps);\n}\n\nfunction uncast<T>(val: T, typ: any): any {\n    return transform(val, typ, jsToJSONProps);\n}\n\nfunction a(typ: any) {\n    return { arrayItems: typ };\n}\n\nfunction u(...typs: any[]) {\n    return { unionMembers: typs };\n}\n\nfunction o(props: any[], additional: any) {\n    return { props, additional };\n}\n\nfunction m(additional: any) {\n    // @ts-ignore\n    return { props: [], additional };\n}\n\nfunction r(name: string) {\n    return { ref: name };\n}\n\nexport const typeMap: any = {\n    \"MembershipUserModel\": o([\n        { json: \"id\", js: \"id\", typ: u(null, 0) },\n        { json: \"clientId\", js: \"clientID\", typ: u(null, 0) },\n        { json: \"firstname\", js: \"firstname\", typ: u(null, \"\") },\n        { json: \"middlename\", js: \"middlename\", typ: u(null, \"\") },\n        { json: \"surname\", js: \"surname\", typ: u(null, \"\") },\n        { json: \"gender\", js: \"gender\", typ: u(null, 0) },\n        { json: \"profilePicture\", js: \"profilePicture\", typ: u(null, \"\") },\n        { json: \"phone\", js: \"phone\", typ: u(null, \"\") },\n        { json: \"email\", js: \"email\", typ: u(null, \"\") },\n        { json: \"dateOfBirth\", js: \"dateOfBirth\", typ: u(null, Date) },\n        { json: \"religion\", js: \"religion\", typ: u(null, 0) },\n        { json: \"nationality\", js: \"nationality\", typ: u(null, \"\") },\n        { json: \"countryOfResidence\", js: \"countryOfResidence\", typ: u(null, \"\") },\n        { json: \"stateProvince\", js: \"stateProvince\", typ: u(null, \"\") },\n        { json: \"region\", js: \"region\", typ: u(null, 0) },\n        { json: \"district\", js: \"district\", typ: u(null, 0) },\n        { json: \"constituency\", js: \"constituency\", typ: u(null, 0) },\n        { json: \"electoralArea\", js: \"electoralArea\", typ: u(null, 0) },\n        { json: \"community\", js: \"community\", typ: u(null, \"\") },\n        { json: \"hometown\", js: \"hometown\", typ: u(null, \"\") },\n        { json: \"houseNoDigitalAddress\", js: \"houseNoDigitalAddress\", typ: u(null, \"\") },\n        { json: \"digitalAddress\", js: \"digitalAddress\", typ: u(null, \"\") },\n        { json: \"level\", js: \"level\", typ: u(null, 0) },\n        { json: \"status\", js: \"status\", typ: u(null, 0) },\n        { json: \"accountType\", js: \"accountType\", typ: u(null, 0) },\n        { json: \"memberType\", js: \"memberType\", typ: u(null, 0) },\n        { json: \"date\", js: \"date\", typ: u(null, Date) },\n        { json: \"last_login\", js: \"lastLogin\", typ: u(null, Date) },\n        { json: \"referenceId\", js: \"referenceID\", typ: u(null, \"\") },\n        { json: \"branchId\", js: \"branchID\", typ: u(null, 0) },\n        { json: \"editable\", js: \"editable\", typ: u(null, true) },\n        { json: \"profileResume\", js: \"profileResume\", typ: u(null, \"\") },\n        { json: \"profileIdentification\", js: \"profileIdentification\", typ: u(null, \"\") },\n        { json: \"archived\", js: \"archived\", typ: u(null, true) },\n        { json: \"identification\", js: \"identification\", typ: u(null, \"\") },\n    ], false),\n};\n"],"names":["Boolean_I","bool","_bool","String","toLowerCase","Constituency_S","data","id","Number","regionId","Region_S","_Region_D","districtId","District_S","_District_D","location","_Constituency_D","Country_S","_data","Array","isArray","name","short","code","_Country_D","ElectoralArea_S","_ElectoralArea_D","null_string","params","replace","MembershipUser_S","clientId","firstname","middlename","surname","gender","profilePicture","dateOfBirth","Date","phone","email","religion","nationality","countryOfResidence","stateProvince","region","district","constituency","electoralArea","community","hometown","houseNoDigitalAddress","digitalAddress","referenceId","accountType","memberType","branchId","editable","profileResume","profileIdentification","archived","identification","level","status","lastUpdatedBy","date","last_login","countryInfo","regionInfo","districtInfo","constituencyInfo","electoralareaInfo","Convert","static","json","transform","JSON","parse","r","jsonToJSProps","value","stringify","jsToJSONProps","typ","undefined","jsonToJS","map","props","forEach","p","key","js","jsToJSON","val","getProps","ref","typeMap","cases","indexOf","transformEnum","hasOwnProperty","typs","l","length","i","_","transformUnion","unionMembers","el","transformArray","arrayItems","additional","result","Object","getOwnPropertyNames","prop","v","prototype","call","transformObject","invalidValue","d","isNaN","valueOf","transformDate","transformPrimitive","u"],"sourceRoot":""}