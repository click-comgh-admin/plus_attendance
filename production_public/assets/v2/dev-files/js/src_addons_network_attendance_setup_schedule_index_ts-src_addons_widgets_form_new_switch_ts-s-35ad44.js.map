{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_addons_network_attendance_setup_schedule_index_ts-src_addons_widgets_form_new_switch_ts-s-35ad44.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/network/attendance/setup/schedule/index.ts","webpack://webpackNumbers/./src/addons/network/members/groupings/member_categories/index.ts","webpack://webpackNumbers/./src/addons/widgets/form/new/switch.ts","webpack://webpackNumbers/./src/view/membership/members/select-member-type/index.ts"],"sourcesContent":["import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceSchedule<Type>(ID: Number = null, url_params: string = \"\", ) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/schedule'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_MemberGroupingsMemberCategories<Type>(type: Number = null) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'members/groupings/member-category'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '@material/mwc-formfield';\r\nimport '@material/mwc-switch';\r\n\r\n@customElement('switch-input')\r\nexport class SwitchInput extends LitElement {\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public selected: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public value: string = \"1\";\r\n\r\n  @property({ type: Boolean })\r\n  public isSelected: boolean = this.selected;\r\n\r\n  static styles = [\r\n    css`\r\n      :host {\r\n        display: block;\r\n      }\r\n    `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"w-full !py-4 px-2 !flex !justify-between border border-gray-400 rounded-md\">\r\n        <mwc-formfield class=\"w-full text-gray-400\" label=\"${this.label}\" alignEnd spaceBetween>\r\n          ${this.switch}\r\n          <input type=\"hidden\" name=\"${this.name}\" id=\"${this.name}\" value=\"${this.selected? 'on': 'off'}\" />\r\n        </mwc-formfield>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private get switch() {\r\n    if (this.selected) {\r\n      return html`\r\n        <mwc-switch selected name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <mwc-switch name=\"${this.name}-switch\" id=\"${this.name}-switch\"  ariaLabel=\"${this.label}\" @click=\"${this.switchAction}\"></mwc-switch>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private switchAction(switchActionEvent: { target: { selected: boolean; value: string; }; }) {\r\n    // console.log({switchActionEvent});\r\n    this.isSelected = switchActionEvent.target.selected;\r\n    // console.log({\"this.isSelected\": this.isSelected});\r\n    this.querySelectorAll('[name=\"' + this.name + '\"]').forEach((input: HTMLInputElement) => {\r\n      input.value = this.isSelected? \"on\": \"off\";\r\n    })\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import \"../../../../assets/styles/views/home/dashboard.scss\";\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport { GroupingsMemberCategories_I } from '@@addons/interfaces/members/groupings/member_categories';\r\nimport { GET_MemberGroupingsMemberCategories } from '@@addons/network/members/groupings/member_categories';\r\nimport \"@@addons/widgets/form/new/select\";\r\n\r\ntype filterSelectType = { id: number|\"\"; name: string; isSelected: \"true\" | \"false\"; selected: boolean; };\r\n@customElement(\"pdb-membership-select-member-type\")\r\nexport class PdbMembershipSelectMemberType extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  public material: \"true\" | \"false\" = \"true\";\r\n\r\n  @property({ type: Number })\r\n  public defaultValue: number = null;\r\n\r\n  @property({ type: Array })\r\n  public defaultValues: Array<number> = [];\r\n\r\n  @property({ type: Array })\r\n  public setDefaultValues: Array<number> = null;\r\n\r\n  @property({ type: Number })\r\n  public selectedCategory: number = null;\r\n\r\n  @property({ type: Boolean })\r\n  public multiple: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public required: boolean = false;\r\n\r\n  @property({ type: String })\r\n  public label: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public name: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public id: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public tag_class: string = \"\";\r\n\r\n  @property({ type: String })\r\n  public css_style: string = \"\";\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    setTimeout(() => {\r\n      if (!Array.isArray(this.setDefaultValues)) {\r\n        this.setDefaultValues = [];\r\n      }\r\n      if (this.defaultValue !== null) {\r\n        if (!this.setDefaultValues.includes(this.defaultValue)) {\r\n          this.setDefaultValues.push(this.defaultValue);\r\n        }\r\n      }\r\n      \r\n      this.defaultValues.forEach(defaultValue => {\r\n        if (!this.setDefaultValues.includes(defaultValue)) {\r\n          this.setDefaultValues.push(defaultValue);\r\n        }\r\n      });\r\n  \r\n      // console.log({\"this.setDefaultValues\": this.setDefaultValues});\r\n      // console.log({\"this.defaultValue\": this.defaultValue});\r\n      // console.log({\"this.defaultValues\": this.defaultValues});\r\n    }, 100);\r\n    \r\n    \r\n    await this.getMemberCategories();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this.material === \"true\") {\r\n      return html`\r\n        ${this.materialSelectField}\r\n      `;\r\n    } else {\r\n      return html`\r\n        ${this.selectInputField}\r\n      `;\r\n      // return html`\r\n      //   ${this.selectField}\r\n      // `;      \r\n    }\r\n  }\r\n\r\n  private get materialSelectField() {\r\n    if (this.setDefaultValues?.length < 1) {\r\n      return html`\r\n        <mwc-select name=\"${this.name}\" class=\"w-full ${this.tag_class}\" id=\"${this.id}\" label=\"${this.label}\" outlined required @change=\"${this.changeAction}\" ?multiple=\"${this.multiple}\">\r\n          <mwc-list-item value=\"0\">${this.label}</mwc-list-item>\r\n          ${this._memberCategories.map((value) => {\r\n            return html`<mwc-list-item value=\"${value.id}\">${value.category}</mwc-list-item>`;\r\n          })}\r\n        </mwc-select>\r\n      `;\r\n    } else {\r\n      return html`\r\n      <mwc-select name=\"${this.name}\" class=\"w-full ${this.tag_class}\" id=\"${this.id}\" label=\"${this.label}\" outlined required @change=\"${this.changeAction}\" ?multiple=\"${this.multiple}\">\r\n        <mwc-list-item value=\"0\">${this.label}</mwc-list-item>\r\n        ${this._memberCategories.map((value) => {\r\n          let thisIsSelected = false;\r\n          this.setDefaultValues.forEach(defaultValue => {\r\n            if (defaultValue === value.id) {\r\n              thisIsSelected = true;\r\n            }\r\n          });\r\n          if (thisIsSelected) {\r\n            return html`<mwc-list-item value=\"${value.id}\" selected>${value.category}</mwc-list-item>`;\r\n          } else {\r\n            return html`<mwc-list-item value=\"${value.id}\">${value.category}</mwc-list-item>`;\r\n          }\r\n        })}\r\n      </mwc-select>\r\n    `;\r\n    }\r\n  }\r\n\r\n  private get selectInputField() {\r\n    let options: filterSelectType[] = [{id: 0, name: this.label, isSelected: \"false\", selected: false}];\r\n\r\n    // console.log({\"this._memberCategories\": this._memberCategories, \"this.setDefaultValues\": this.setDefaultValues});\r\n    this._memberCategories.forEach(_memberCategory => {\r\n      let thisIsSelected = false;\r\n      this.setDefaultValues.forEach(defaultValue => {\r\n        // console.log({defaultValue, \"_memberCategory.id\": _memberCategory.id});\r\n        if (defaultValue === _memberCategory.id) {\r\n          thisIsSelected = true;\r\n        }\r\n      });\r\n\r\n      // console.log({thisIsSelected});\r\n      \r\n      let isSelected: boolean = false,\r\n      isSelectedAlt: \"true\" | \"false\" = \"false\";\r\n      if (thisIsSelected) {\r\n        isSelected = true;\r\n        isSelectedAlt = \"true\";\r\n      }\r\n      const option: filterSelectType = {\r\n        id: _memberCategory.id, name: _memberCategory.category, isSelected: isSelectedAlt, selected: isSelected,\r\n      };\r\n    \r\n      if (!options.includes(option)) {\r\n        options.push(option);\r\n      }\r\n    });\r\n\r\n    // console.log({options});\r\n    \r\n    \r\n    \r\n    let _html = html`\r\n      <select-input name=\"${this.name}\" class=\"w-full ${this.tag_class}\" id=\"${this.id}\" label=\"${this.label}\"\r\n        .options=\"${options}\" outlined ?required=\"${this.required}\" ?multiple=\"${this.multiple}\">\r\n      </select-input>\r\n    `;\r\n    return html`${_html}`\r\n  }\r\n\r\n  private get selectField() {\r\n    let _html = html``;\r\n    if (this.setDefaultValues!.length < 1) {\r\n      _html = html`\r\n        <select class=\"${this.tag_class}\" name=\"${this.name}\" id=\"${this.id}\" style=\"${this.css_style}\" @change=\"${this.changeAction}\" ?multiple=\"${this.multiple}\">\r\n          <option value=\"0\">${this.label}</option>\r\n          ${this._memberCategories.map((value) => {\r\n            return html`<option value=\"${value.id}\">${value.category}</option>`;\r\n          })}\r\n        </select>\r\n      `;\r\n    } else {\r\n      _html = html`\r\n        <select class=\"${this.tag_class}\" name=\"${this.name}\" id=\"${this.id}\" style=\"${this.css_style}\" @change=\"${this.changeAction}\" ?multiple=\"${this.multiple}\">\r\n          <option value=\"0\">${this.label}</option>\r\n          ${this._memberCategories.map((value) => {\r\n          let thisIsSelected = false;\r\n          this.setDefaultValues.forEach(defaultValue => {\r\n            if (defaultValue === value.id) {\r\n              thisIsSelected = true;\r\n            }\r\n          });\r\n          if (thisIsSelected) {\r\n              return html`<option value=\"${value.id}\" selected>${value.category}</option>`;\r\n            } else {\r\n              return html`<option value=\"${value.id}\">${value.category}</option>`;\r\n            }\r\n          })}\r\n        </select>\r\n      `;\r\n    }\r\n    return html`\r\n      <div class=\"main_class\">\r\n\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t<div class=\"input-group mb-4\">\r\n\t\t\t\t\t\t<div class=\"input-group-prepend\" icon_id=\"\">\r\n\t\t\t\t\t\t\t<span class=\"input-group-text px-2\">\r\n\t\t\t\t\t\t\t\t<i class=\"pe-7s-leaf icon-gradient bg-warm-flame text-success font-weight-bolder \"></i>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t${_html}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n    `\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private async getMemberCategories() {\r\n    const _networkResponse = await GET_MemberGroupingsMemberCategories<GroupingsMemberCategories_I>();\r\n    let __memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __memberCategories.push({ id: 0, category: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsMemberCategories_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __memberCategories = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsMemberCategories_I> = [];\r\n    new_data.push(...this._memberCategories, ...__memberCategories);\r\n    this._memberCategories = new_data;\r\n  }\r\n\r\n  private changeAction(changeActionEvent: { target: { selected: boolean; value: string; }; currentTarget: { selected: boolean; value: string; }; }) {\r\n    // console.log({changeActionEvent});\r\n    this.selectedCategory = Number.isNaN(changeActionEvent.currentTarget.value)? 0: Number(changeActionEvent.currentTarget.value);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["GET_AttendanceSchedule","ID","url_params","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","URLS","AKWAABA_API_BASE_URL","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","error","console","errorHttp","GET_MemberGroupingsMemberCategories","type","SwitchInput","LitElement","name","label","selected","value","isSelected","this","render","html","switch","switchAction","switchActionEvent","target","querySelectorAll","forEach","input","createRenderRoot","styles","css","property","String","Boolean","customElement","PdbMembershipSelectMemberType","constructor","super","material","defaultValue","defaultValues","setDefaultValues","selectedCategory","multiple","required","id","tag_class","css_style","_memberCategories","connectedCallback","setTimeout","Array","isArray","includes","push","getMemberCategories","disconnectedCallback","materialSelectField","selectInputField","length","changeAction","map","category","thisIsSelected","options","_memberCategory","isSelectedAlt","option","_html","selectField","firstUpdated","_networkResponse","__memberCategories","response","success","data","new_data","changeActionEvent","Number","isNaN","currentTarget"],"sourceRoot":""}