{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_view_attendance_clocking_clocker_table_parts_first_ts-src_view_attendance_clocking_clocke-adf992.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/date_time/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/schedules/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/member_clocking_info/index.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/member_clocking_info/index_full.ts","webpack://webpackNumbers/./src/addons/interfaces/clients/index.ts","webpack://webpackNumbers/./src/addons/interfaces/datetime/date.ts","webpack://webpackNumbers/./src/addons/interfaces/datetime/time.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/clock-in.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/start-break.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first__individual.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/first__organization.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/table_parts/second.ts"],"sourcesContent":["export const dateTime = (date: string = \"\") => {\r\n  // new Date(date)\r\n  let now = new Date(),\r\n    year = now.getFullYear(),\r\n    month = (now.getMonth() + 1),\r\n    day = now.getDate(),\r\n    hour = now.getHours(),\r\n    minutes = now.getMinutes(),\r\n    seconds = now.getSeconds(),\r\n    getDate = year + '-' + month + '-' + day,\r\n    getTime = hour + \":\" + minutes + \":\" + seconds,\r\n    newDateTime = new Date(year, month, day, hour, minutes, seconds),\r\n    dateTime = getDate + ' ' + getTime,\r\n    code = year + month + day + hour + minutes + seconds;\r\n  return { dateTime: newDateTime, __string__: dateTime, __code__: code, };\r\n}\r\n\r\nexport const getDateTime = (date: Date, options?: Intl.DateTimeFormatOptions) => {\r\n  const __date = new Date(),\r\n    _DateString = `${date}`;\r\n  \r\n  let _date = new Date(_DateString);\r\n  return _date.toLocaleString('en-US', options);\r\n}","import { Boolean_I } from \"@@addons/interfaces/boolean\"\r\nimport { ClientInfo_I, ClientInfo_S } from \"@@addons/interfaces/clients\"\r\nimport { ClientBranches_I, ClientBranch_S } from \"@@addons/interfaces/clients/branches\"\r\nimport { Time_I } from \"@@addons/interfaces/datetime/time\"\r\nimport { GroupingsMemberCategories_I, GroupingsMemberCategories_S } from \"@@addons/interfaces/members/groupings/member_categories\"\r\n\r\nexport interface MeetingEventSchedule_I {\r\n  id?: number,\r\n  type?: number,\r\n  memberType?: number,\r\n  name?: string,\r\n  clientId?: ClientInfo_I,\r\n  branchId?: ClientBranches_I,\r\n  memberCategoryId?: GroupingsMemberCategories_I,\r\n  meetingSpan?: number,\r\n  startTime?: Date,\r\n  closeTime?: Date,\r\n  latenessTime?: Date,\r\n  isRecuring?: boolean,\r\n  hasBreakTime?: boolean,\r\n  hasDuty?: boolean,\r\n  hasOvertime?: boolean,\r\n  agenda?: string,\r\n  agendaFile?: string,\r\n  virtualMeetingLink?: string,\r\n  virtualMeetingType?: number\r\n  meetingLocation?: number\r\n  expectedMonthlyAttendance?: number\r\n  activeMonthlyAttendance?: number\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  date?: Date,\r\n}\r\n\r\n\r\nexport function MeetingEventSchedule_S(data: any): MeetingEventSchedule_I {\r\n  // console.log({data});\r\n  \r\n  const meetingEventSchedule_S: MeetingEventSchedule_I = {\r\n    id: Number(data['id']),\r\n    type: Number(data['type']),\r\n    memberType: Number(data['memberType']),\r\n    name: String(data['name']),\r\n    clientId: ClientInfo_S(data['clientId']),\r\n    branchId: ClientBranch_S(data['branchId']),\r\n    memberCategoryId: GroupingsMemberCategories_S(data['memberCategoryId']),\r\n    meetingSpan: Number(data['meetingSpan']),\r\n    startTime: Time_I(data['startTime']),\r\n    closeTime: Time_I(data['closeTime']),\r\n    latenessTime: Time_I(data['latenessTime']),\r\n    isRecuring: Boolean_I(data['isRecuring']),\r\n    hasBreakTime: Boolean_I(data['hasBreakTime']),\r\n    hasDuty: Boolean_I(data['hasDuty']),\r\n    hasOvertime: Boolean_I(data['hasOvertime']),\r\n    agenda: String(data['agenda']),\r\n    agendaFile: String(data['agendaFile']),\r\n    virtualMeetingLink: String(data['virtualMeetingLink']),\r\n    virtualMeetingType: Number(data['virtualMeetingType']),\r\n    meetingLocation: Number(data['meetingLocation']),\r\n    expectedMonthlyAttendance: Number(data['expectedMonthlyAttendance']),\r\n    activeMonthlyAttendance: Number(data['activeMonthlyAttendance']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n    date: new Date(data['date']),\r\n  };\r\n\r\n  return meetingEventSchedule_S;\r\n}\r\n","import { Boolean_I } from \"@@addons/interfaces/boolean\";\r\nimport { Date_I } from \"@@addons/interfaces/datetime/date\";\r\nimport { Time_I } from \"@@addons/interfaces/datetime/time\";\r\nimport { MembershipUser_I, MembershipUser_S } from \"@@addons/interfaces/members/user\";\r\nimport { MembershipOrganizationUserModel, Convert as moumConvert } from \"@@addons/interfaces/members/user/organization_model\";\r\nimport { MeetingEventSchedule_I, MeetingEventSchedule_S } from \"../meeting_event/schedules\";\r\n\r\nexport interface MemberClockingInfo_I {\r\n  id?: number,\r\n  meetingEventId?: MeetingEventSchedule_I,\r\n  memberId?: MembershipUser_I | MembershipOrganizationUserModel,\r\n  accountType?: number,\r\n  inOrOut?: boolean,\r\n  inTime?: Date,\r\n  outTime?: Date,\r\n  startBreak?: Date,\r\n  endBreak?: Date,\r\n  clockedBy?: number,\r\n  clockingMethod?: number,\r\n  clockingMethodName?: string,\r\n  date?: Date,\r\n  justification?: string,\r\n}\r\n\r\nexport function MemberClockingInfo_S(data: any): MemberClockingInfo_I {\r\n  // console.log({\"MemberClockingInfo_S-data\":data});\r\n  let memberInfo: MembershipUser_I | MembershipOrganizationUserModel = null\r\n  \r\n  if (data['memberId']['accountType'] === 1) {\r\n    memberInfo = MembershipUser_S(data['memberId']);\r\n  } else {\r\n    memberInfo = moumConvert.toMembershipOrganizationUserModel(JSON.stringify(data['memberId']))\r\n  }\r\n  \r\n  const memberClockingInfo_S: MemberClockingInfo_I = {\r\n    id: Number(data['id']),\r\n    meetingEventId: MeetingEventSchedule_S(data['meetingEventId']),\r\n    memberId: memberInfo,\r\n    accountType: Number(data['accountType']),\r\n    inOrOut: Boolean_I(data['inOrOut']),\r\n    // inTime: Time_I(data['inTime']),\r\n    // outTime: Time_I(data['outTime']),\r\n    // startBreak: Time_I(data['startBreak']),\r\n    // endBreak: Time_I(data['endBreak']),\r\n    inTime: Date_I(data['inTime']),\r\n    outTime: Date_I(data['outTime']),\r\n    startBreak: Date_I(data['startBreak']),\r\n    endBreak: Date_I(data['endBreak']),\r\n    clockedBy: Number(data['clockedBy']),\r\n    clockingMethod: Number(data['clockingMethod']),\r\n    clockingMethodName: String(data['clockingMethodName']),\r\n    date: new Date(data['date']),\r\n    justification: data['justification']\r\n  };\r\n\r\n  return memberClockingInfo_S;\r\n}","import { Date_I } from \"@@addons/interfaces/datetime/date\";\r\nimport { MembershipUser_I, MembershipUser_S } from \"@@addons/interfaces/members/user\";\r\nimport { MembershipOrganizationUserModel, Convert as moumConvert } from \"@@addons/interfaces/members/user/organization_model\";\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from \".\";\r\n\r\nexport interface MemberClockingInfoFull_I {\r\n  attendance?: MemberClockingInfo_I,\r\n  additionalInfo?: MemberClockingAdditionalInfo_I,\r\n  lastSeen?: Date,\r\n  status?: String,\r\n}\r\nexport interface MemberClockingAdditionalInfo_I {\r\n  id?: number,\r\n  memberId?: number,\r\n  memberInfo?: MembershipUser_I | MembershipOrganizationUserModel,\r\n  phone?: string,\r\n  email?: string,\r\n  placeOfWork?: string,\r\n  whatsapp?: string,\r\n  facebook?: string,\r\n  twitter?: string,\r\n  instagram?: string,\r\n  businessHashtag?: string,\r\n  businessDescription?: string,\r\n  profession?: string,\r\n  dateJoined?: Date,\r\n  date?: Date\r\n}\r\n\r\nexport const InstanceOfOrganizationMember = (data: any) => {\r\n  return \"organizationName\" in data && \"organizationType\" in data && \"businessRegistered\" in data && \"organizationPhone\" in data && \"dateOfIncorporation\" in data;\r\n}\r\n\r\nexport function MemberClockingAdditionalInfo_S(data: any, accountType?: number): MemberClockingAdditionalInfo_I {\r\n  // console.log({data});\r\n  let memberInfo: MembershipUser_I | MembershipOrganizationUserModel = null\r\n  \r\n  if (accountType === 1) {\r\n    memberInfo = MembershipUser_S(data['memberInfo']);\r\n  } else {\r\n    memberInfo = moumConvert.toMembershipOrganizationUserModel(JSON.stringify(data['memberInfo']))\r\n  }\r\n  \r\n  const MemberClockingAdditionalInfo_S: MemberClockingAdditionalInfo_I = {\r\n    id: Number(data['id']),\r\n    memberId: Number(data['memberId']),\r\n    memberInfo: memberInfo,\r\n    phone: String(data['phone']),\r\n    email: String(data['email']),\r\n    facebook: String(data['facebook']),\r\n    instagram: String(data['instagram']),\r\n    placeOfWork: String(data['placeOfWork']),\r\n    profession: String(data['profession']),\r\n    twitter: String(data['twitter']),\r\n    whatsapp: String(data['whatsapp']),\r\n    businessHashtag: String(data['businessHashtag']),\r\n    businessDescription: String(data['businessDescription']),\r\n    dateJoined: Date_I(data['dateJoined']),\r\n    date: Date_I(data['date']),\r\n  };\r\n\r\n  return MemberClockingAdditionalInfo_S;\r\n}\r\n\r\nexport function MemberClockingInfoFull_S(data: any): MemberClockingInfoFull_I {\r\n  // console.log({data});\r\n  const ATTENDANCE = MemberClockingInfo_S(data['attendance']);\r\n  \r\n  const MemberClockingInfoFull_S: MemberClockingInfoFull_I = {\r\n    attendance: ATTENDANCE,\r\n    additionalInfo: MemberClockingAdditionalInfo_S(data['additionalInfo'], ATTENDANCE.accountType),\r\n    lastSeen: Date_I(data['lastSeen']),\r\n    status: String(data['status']),\r\n  };\r\n\r\n  return MemberClockingInfoFull_S;\r\n}","import { Constituency_I, Constituency_S, _Constituency_D } from \"../location/constituency\";\r\nimport { Country_I, Country_S, _Country_D } from \"../location/country\";\r\nimport { District_I, District_S, _District_D } from \"../location/district\";\r\nimport { Region_I, Region_S, _Region_D } from \"../location/region\";\r\n\r\nexport interface ClientInfo_I {\r\n  id?: number,\r\n  name?: string,\r\n  accountType?: number,\r\n  country?: string,\r\n  stateProvince?: string,\r\n  applicantFirstname?: string,\r\n  applicantSurname?: string,\r\n  applicantGender?: number,\r\n  applicantPhone?: string,\r\n  applicantEmail?: string,\r\n  applicantDesignationRole?: number,\r\n  region?: number,\r\n  district?: number,\r\n  constituency?: number,\r\n  community?: string,\r\n  subscriptionDuration?: number,\r\n  subscriptionDate?: Date,\r\n  subscriptionFee?: string,\r\n  logo?: string,\r\n  status?: number,\r\n  archive?: number,\r\n  accountCategory?: number,\r\n  creationDate?: Date,\r\n  updatedBy?: number,\r\n  updateDate?: Date,\r\n  countryInfo?: Country_I,\r\n  regionInfo?: Region_I,\r\n  districtInfo?: District_I,\r\n  constituencyInfo?: Constituency_I,\r\n};\r\n\r\n\r\nexport function ClientInfo_S(data: any): ClientInfo_I {\r\n  // console.log({data});\r\n  \r\n  const clientInfo_S: ClientInfo_I = {\r\n    id: Number(data['id']),\r\n    name: String(data['name']),\r\n    accountType: Number(data['accountType']),\r\n    country: String(data['country']),\r\n    stateProvince: String(data['stateProvince']),\r\n    applicantFirstname: String(data['applicantFirstname']),\r\n    applicantSurname: String(data['applicantSurname']),\r\n    applicantGender: Number(data['applicantGender']),\r\n    applicantPhone: String(data['applicantPhone']),\r\n    applicantEmail: String(data['applicantEmail']),\r\n    applicantDesignationRole: Number(data['applicantDesignationRole']),\r\n    region: Number(data['region']),\r\n    district: Number(data['district']),\r\n    constituency: Number(data['constituency']),\r\n    community: String(data['community']),\r\n    subscriptionDuration: Number(data['subscriptionDuration']),\r\n    subscriptionDate: new Date(data['updateDate']),\r\n    subscriptionFee: String(data['subscriptionFee']),\r\n    logo: String(data['logo']),\r\n    status: Number(data['status']),\r\n    archive: Number(data['archive']),\r\n    accountCategory: Number(data['accountCategory']),\r\n    creationDate: new Date(data['creationDate']),\r\n    updatedBy: Number(data['updatedBy']),\r\n    updateDate: new Date(data['updateDate']),\r\n    countryInfo: ('countryInfo' in data) ? Country_S(data['countryInfo']) : _Country_D(),\r\n    regionInfo: ('regionInfo' in data) ? Region_S(data['regionInfo']) : _Region_D(),\r\n    districtInfo: ('districtInfo' in data) ? District_S(data['districtInfo']) : _District_D(),\r\n    constituencyInfo: ('constituencyInfo' in data) ? Constituency_S(data['constituencyInfo']) : _Constituency_D(),\r\n  };\r\n\r\n  return clientInfo_S;\r\n}\r\n","export function Date_I(dateTime: string): Date {\r\n\r\n  if (dateTime === 'null' || dateTime === null) {\r\n    return null;\r\n  }\r\n\r\n  let date = new Date(dateTime);\r\n  \r\n  // console.log({ date })\r\n  return date;\r\n}","export function Time_I(dateTime: string): Date {\r\n  const __dT: string = \"00:00:00\",\r\n    _dT_ = String(dateTime).toLocaleLowerCase().split(\"T\");\r\n  let _dT: string = __dT;\r\n  if (_dT_.length > 1) {\r\n    _dT = _dT_[1];\r\n    // _dT = _dT_[1].split('.')[0];\r\n  } else if (_dT_.length === 1) {\r\n    _dT = _dT_[0];\r\n  }\r\n\r\n  if (_dT === 'null') {\r\n    return null;\r\n  }\r\n\r\n  let today = new Date();\r\n  const newTime = _dT.split(':');\r\n  // console.log({ today, newTime })\r\n  if (newTime[0] !== undefined) {\r\n    today.setHours(Number(newTime[0]));\r\n  }\r\n  if (newTime[1] !== undefined) {\r\n    today.setMinutes(Number(newTime[1]));\r\n  }\r\n  if (newTime[2] !== undefined) {\r\n    today.setSeconds(Number(newTime[2]));\r\n  }\r\n  // console.log({ today })\r\n  return today;\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingClockIn(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/clock-in/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Clock In?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function PATCH_AttendanceClockingStartBreak(clockId: Number, time: string = null,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/start-break/' + clockId,\r\n    formData = (time === null) ? {} : { \"time\": time };\r\n\r\n  return Swal.fire({\r\n    title: 'Start Break?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import { base64Encode } from '@@addons/functions/base64';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { InstanceOfOrganizationMember, MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\nimport './first__individual';\r\nimport './first__organization';\r\n\r\n\r\n@customElement(\"clocker-table-parts-first\")\r\nexport class ClockerTablePartsFirst extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({ \"this.clocking_info\": this.clocking_info });\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n  \r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n  \r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() { \r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    if (clockingInfo !== null && clockingInfoFull !== null) {\r\n      // console.log({ \"clockingInfo\": clockingInfo });\r\n      // console.log({ \"clockingInfoFull\": clockingInfoFull });\r\n      const clockingMethodName = fullInfo ? clockingInfoFull.attendance.clockingMethodName : clockingInfo.clockingMethodName,\r\n        lastSeen = fullInfo ? clockingInfoFull.lastSeen : null;\r\n      if (fullInfo ? InstanceOfOrganizationMember(clockingInfoFull.additionalInfo.memberInfo): InstanceOfOrganizationMember(clockingInfo.memberId)) {\r\n        return html`<clocker-table-parts-first-organization .lastSeen=\"${lastSeen}\" clockingMethodName=\"${clockingMethodName}\" .memberData=${fullInfo? clockingInfoFull.additionalInfo.memberInfo: clockingInfo.memberId}></clocker-table-parts-first-organization>`;\r\n      } else {\r\n        return html`<clocker-table-parts-first-individual .lastSeen=\"${lastSeen}\" clockingMethodName=\"${clockingMethodName}\" .memberData=${fullInfo? clockingInfoFull.additionalInfo.memberInfo: clockingInfo.memberId}></clocker-table-parts-first-individual>`;\r\n      }\r\n      \r\n    }\r\n    return null;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { base64Encode } from '@@addons/functions/base64';\r\nimport { getDateTime } from '@@addons/functions/date_time';\r\nimport { MembershipUser_I } from '@@addons/interfaces/members/user';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"clocker-table-parts-first-individual\")\r\nexport class ClockerTablePartsFirstIndividual extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  private clockingMethodName: string = \"???\";\r\n\r\n  @property({ type: Date })\r\n  private lastSeen?: Date = null;\r\n\r\n  private _memberData: MembershipUser_I = null;\r\n\r\n  public set memberData(value: MembershipUser_I) {\r\n    this._memberData = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get memberData(): MembershipUser_I {\r\n    return this._memberData;\r\n  }\r\n\r\n  @property({ type: String })\r\n  private memberProfileBaseUrl: string = \"/member/member-profile?view=\";\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const MEMBER_ID = base64Encode(String(this._memberData.id), true),\r\n    lastSeen = html`<div class=\"text-center whitespace-nowrap\">\r\n      <span class=\"badge badge-light shadow p-2 m-1\">\r\n        <b>Last Seen</b>: ${getDateTime(this.lastSeen, { dateStyle: \"medium\", timeStyle: \"short\" })}\r\n      </span>\r\n    </div>`;\r\n      return html`<div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n        <div class=\"d-block m-1\">\r\n          <span class=\"badge badge-info shadow-lg p-2 m-1\">\r\n            ${this.clockingMethodName}\r\n          </span>\r\n        </div>\r\n        <div class=\"flex m-1 justify-evenly\">\r\n          <user-profile-photo class=\"w-32 h-32 mr-1\" rounded 'click-to-open'=\"\"\r\n            click-to-open=\"${this.memberProfileBaseUrl}${MEMBER_ID}\" type=\"member\"\r\n            url=\"${this._memberData.profilePicture}\" size=\"32\"></user-profile-photo>\r\n        </div>\r\n        <div class=\"block m-1\">\r\n          <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n            <b>Name</b>: ${this._memberData.firstname} ${this._memberData.middlename} ${this._memberData.surname}\r\n          </span>\r\n        </div>\r\n        ${this.lastSeen === null || this.lastSeen === undefined? nothing : lastSeen}\r\n      </div>`;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { base64Encode } from '@@addons/functions/base64';\r\nimport { getDateTime } from '@@addons/functions/date_time';\r\nimport { MembershipOrganizationUserModel } from '@@addons/interfaces/members/user/organization_model';\r\nimport '@@addons/widgets/profile_photo';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js'\r\n\r\n\r\n@customElement(\"clocker-table-parts-first-organization\")\r\nexport class ClockerTablePartsFirstOrganization extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  private clockingMethodName: string = \"???\";\r\n\r\n  @property({ type: Date })\r\n  private lastSeen?: Date = null;\r\n\r\n  private _memberData: MembershipOrganizationUserModel = null;\r\n\r\n  public set memberData(value: MembershipOrganizationUserModel) {\r\n    this._memberData = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get memberData(): MembershipOrganizationUserModel {\r\n    return this._memberData;\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    const MEMBER_ID = base64Encode(String(this._memberData.id), true),\r\n      lastSeen = html`<div class=\"text-center whitespace-nowrap\">\r\n        <span class=\"badge badge-light shadow p-2 m-1\">\r\n        <b>Last Seen</b>: ${getDateTime(this.lastSeen, { dateStyle: \"medium\", timeStyle: \"short\" })}\r\n        </span>\r\n      </div>`;\r\n      return html`<div class=\"flex flex-col whitespace-normal justify-between content-between\">\r\n        <div class=\"d-block m-1\">\r\n          <span class=\"badge badge-info shadow-lg p-2 m-1\">\r\n            ${this.clockingMethodName}\r\n          </span>\r\n        </div>\r\n        <div class=\"flex m-1 justify-evenly\">\r\n          <user-profile-photo class=\"w-32 h-32 mr-1\" rounded type=\"member\"\r\n            url=\"${this._memberData.logo}\" size=\"32\"></user-profile-photo>\r\n        </div>\r\n        <div class=\"block m-1\">\r\n          <span class=\"shadow p-1 block bg-white rounded text-dark\">\r\n            <b>Name</b>: ${this._memberData.organizationName}\r\n          </span>\r\n        </div>\r\n        ${this.lastSeen === null || this.lastSeen === undefined? nothing : lastSeen}\r\n      </div>`;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { getDateTime } from '@@addons/functions/date_time';\r\nimport { getLocalTime } from '@@addons/functions/date_time/time';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { InstanceOfOrganizationMember, MemberClockingInfoFull_I, MemberClockingInfoFull_S } from '@@addons/interfaces/attendance/member_clocking_info/index_full';\r\nimport { PATCH_AttendanceClockingClockIn } from '@@addons/network/attendance/clocking/clock-in';\r\nimport { PATCH_AttendanceClockingStartBreak } from '@@addons/network/attendance/clocking/start-break';\r\nimport { LitElement, html, css, nothing } from 'lit';\r\nimport { customElement, property, } from 'lit/decorators.js'\r\nimport '@material/mwc-icon-button';\r\n\r\n/*this is to change automatically update clocking times since datatabel is not allowing it */\r\nexport const setClockingTimeInfo = (clockingTime: boolean, clockingTimeValue: string) => {\r\n  // @ts-ignore\r\n  window['clocker'] = {\r\n    'clockingTimeInfo': {\r\n      \"clockingTime\": clockingTime, \"clockingTimeValue\": clockingTimeValue,\r\n    }\r\n  };\r\n}\r\nexport const getClockingTimeInfo = () => {\r\n  if (\"clocker\" in window) {\r\n    // @ts-ignore\r\n    const CTI = window['clocker']['clockingTimeInfo'];\r\n    if ('clockingTime' in CTI) return {\r\n      \"clockingTime\": CTI.clockingTime, \"clockingTimeValue\": CTI.clockingTimeValue,\r\n    }\r\n\r\n  } return null;\r\n}\r\n\r\n@customElement(\"clocker-table-parts-second\")\r\nexport class ClockerTablePartsSecond extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  private _data: any = null;\r\n\r\n  public set data(value: any) {\r\n    this._data = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get data(): any {\r\n    return this._data;\r\n  }\r\n\r\n  private _type: any = null;\r\n\r\n  public set type(value: any) {\r\n    this._type = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get type(): any {\r\n    return this._type;\r\n  }\r\n\r\n  @property({ type: String })\r\n  public clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public clocking: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  public clockingTime: boolean = false;\r\n\r\n  private clockingInfo: MemberClockingInfoFull_I | MemberClockingInfo_I = null;\r\n\r\n  @property({ type: Boolean })\r\n  private fullInfo?: boolean = false;\r\n\r\n  @property({ type: String })\r\n  private clocking_info?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  public pageButtonAccess: boolean = false;\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    console.log({\"this.pageButtonAccess\": this.pageButtonAccess});\r\n    \r\n\r\n    const _clockingInfo = JSON.parse(this.clocking_info);\r\n    // console.log({ \"_clockingInfo\": _clockingInfo });\r\n\r\n    if (_clockingInfo !== null) {\r\n      if (\"attendance\" in _clockingInfo &&\r\n        \"additionalInfo\" in _clockingInfo &&\r\n        \"lastSeen\" in _clockingInfo &&\r\n        \"status\" in _clockingInfo) {\r\n        this.fullInfo = true;\r\n        this.clockingInfo = MemberClockingInfoFull_S(_clockingInfo);\r\n      } else {\r\n        this.fullInfo = false;\r\n        this.clockingInfo = MemberClockingInfo_S(_clockingInfo);\r\n      }\r\n      // console.log({ \"this.clockingInfo\": this.clockingInfo });\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  private get getClockingInfo(): MemberClockingInfo_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  private get getClockingInfoFull(): MemberClockingInfoFull_I {\r\n    // @ts-ignore\r\n    return this.clockingInfo;\r\n  }\r\n\r\n  render() {\r\n    const fullInfo = this.fullInfo,\r\n      clockingInfo = this.getClockingInfo,\r\n      clockingInfoFull = this.getClockingInfoFull;\r\n    // console.log({ \"clockingInfo\": clockingInfo });\r\n    if (clockingInfo !== null && clockingInfoFull !== null) {\r\n      const atDate = getDateTime(fullInfo ? clockingInfoFull.attendance.date : clockingInfo.date, { dateStyle: \"medium\", timeStyle: \"short\" }); // Sun, 07:39 AM\r\n      const inTime = fullInfo ? clockingInfoFull.attendance.inTime : clockingInfo.inTime;\r\n      // const atInTime = inTime !== null ? getLocalTime(inTime, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const atInTime = inTime !== null ? getDateTime(inTime, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      // console.log({atInTime, \"_clockingInfo.inTime\": _clockingInfo.inTime})\r\n      const CLOCK_ID = fullInfo ? clockingInfoFull.attendance.id : clockingInfo.id;\r\n      const CLOCKED = fullInfo ? clockingInfoFull.attendance.inOrOut : clockingInfo.inOrOut;\r\n      const startBreak = fullInfo ? clockingInfoFull.attendance.startBreak : clockingInfo.startBreak;\r\n      // const atBreakTime = startBreak !== null ? getLocalTime(startBreak, { timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const atBreakTime = startBreak !== null ? getDateTime(startBreak, { dateStyle: \"medium\", timeStyle: \"short\" }) : \"--:--\"; // 07:39 AM\r\n      const TODAY = new Date();\r\n      const HAS_BREAKTIME = fullInfo ? clockingInfoFull.attendance.meetingEventId.hasBreakTime : clockingInfo.meetingEventId.hasBreakTime;\r\n      // console.log({ HAS_BREAKTIME, _clockingInfo });\r\n      const IS_TODAY = (fullInfo ? clockingInfoFull.attendance.date.toDateString() : clockingInfo.date.toDateString()) === TODAY.toDateString();\r\n      return html`\r\n        <div class=\"shadow bg-white p-2 text-center whitespace-nowrap\">\r\n          <div class=\"flex justify-between\">\r\n            ${this.clocking ? html`\r\n            <input type=\"checkbox\" multi-break-check-in=\"${CLOCK_ID}\" name=\"member_check_in_${CLOCK_ID}\"\r\n              id=\"member_check_in_${CLOCK_ID}\"\r\n              class=\"m-1 rounded border-gray-300 text-indigo-600 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n            `: nothing}\r\n            <label for=\"member_check_in_${CLOCK_ID}\">@ ${atDate}</label>\r\n          </div>\r\n        </div>\r\n        ${this.clocking ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <button type=\"button\" class=\"btn btn-transparent btn-sm shadow p-0\" clock-id=\"${CLOCK_ID}\" clock-user=\"in\">\r\n            <span class=\"pe-7s-check bg-happy-itmeo fa-5x icon-gradient\"></span>\r\n          </button>\r\n        </div>\r\n        <div class=\"text-center flex justify-center whitespace-nowrap\">\r\n          <span class=\"badge badge-success mx-1\">${IS_TODAY ? html`Today` : html`Post Clocking`}</span>\r\n          ${CLOCKED ? html`\r\n          <span class=\"badge badge-success bg-grow-early mx-1\">Present</span>`: html`\r\n          <span class=\"badge badge-danger mx-1\">Not Clocked</span>\r\n          `}\r\n        </div>\r\n        `: html`\r\n          <div class=\"text-center flex justify-evenly whitespace-nowrap\">\r\n            <a href=\"tel://${clockingInfoFull.additionalInfo.phone}\">\r\n              <mwc-icon-button class=\"bg-sunny-morning text-white\" icon=\"call\"></mwc-icon-button>\r\n            </a>\r\n            <a href=\"https://api.whatsapp.com/send?phone=+${clockingInfoFull.additionalInfo.whatsapp}&amp;text=\">\r\n              <mwc-icon-button class=\"bg-grow-early text-white\" icon=\"whatsapp\"></mwc-icon-button>\r\n            </a>\r\n          </div>\r\n        `}\r\n        ${CLOCKED && (inTime !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Clock in Time</b>: ${atInTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n        ${this.clocking ? html`\r\n          ${HAS_BREAKTIME ? html`\r\n          <hr class=\"whitespace-nowrap\">\r\n          <div class=\"text-center whitespace-nowrap\">\r\n            <mwc-button raised class=\"shadow-sm success button\" label=\"Start Break\" clock-id=\"${CLOCK_ID}\" user-break=\"start\"\r\n              icon=\"check\">\r\n            </mwc-button>\r\n          </div>\r\n          `: ''\r\n          }\r\n        `: nothing}\r\n        ${(startBreak !== null) ? html`\r\n        <div class=\"text-center whitespace-nowrap\">\r\n          <span class=\"badge badge-light shadow p-2 m-1\">\r\n            <b>Break Start Time</b>: ${atBreakTime}\r\n          </span>\r\n        </div>`: ''\r\n        }\r\n      `;\r\n    }\r\n    return null\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.clockUser();\r\n    this.userBreak();\r\n\r\n    setInterval(() => {\r\n      const CTI = getClockingTimeInfo();\r\n      if (CTI !== null) {\r\n        this.clockingTime = CTI.clockingTime;\r\n        this.clockingTimeValue = CTI.clockingTimeValue;\r\n      }\r\n    });\r\n  }\r\n\r\n  private clockUser() {\r\n    const selectorString = 'clock-user';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(clockUser => {\r\n      // @ts-ignore\r\n      const clockTYPE: \"in\" | \"out\" = clockUser.getAttribute(selectorString);\r\n      if (clockTYPE === \"in\") {\r\n        // console.log({ \"clock in\": clockTYPE });\r\n        clockUser.addEventListener('click', (e) => {\r\n          this.clockInUser(clockUser, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async clockInUser(element: Element, e: any) {\r\n    e.preventDefault();\r\n    // console.log({ \"this.clockingTime\": this.clockingTime, \"this.clockingTimeValue\": this.clockingTimeValue });\r\n    if (this.pageButtonAccess) {\r\n      const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n      // console.log({ e, element, CLOCK_ID });\r\n      if (this.clockingTime) {\r\n        await PATCH_AttendanceClockingClockIn(CLOCK_ID, this.clockingTimeValue);\r\n      } else {\r\n        await PATCH_AttendanceClockingClockIn(CLOCK_ID);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  private userBreak() {\r\n    const selectorString = 'user-break';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(userBreak => {\r\n      // @ts-ignore\r\n      const breakTYPE: \"start\" | \"end\" = userBreak.getAttribute(selectorString);\r\n      if (breakTYPE === \"start\") {\r\n        // console.log({ \"start break\": breakTYPE });\r\n        userBreak.addEventListener('click', (e) => {\r\n          this.startUserBreak(userBreak, e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async startUserBreak(element: Element, e: any) {\r\n    e.preventDefault();\r\n    if (this.pageButtonAccess) {\r\n      const CLOCK_ID = Number(element.getAttribute('clock-id'));\r\n      // console.log({ e,element,CLOCK_ID });\r\n      if (this.clockingTime) {\r\n        await PATCH_AttendanceClockingStartBreak(CLOCK_ID, this.clockingTimeValue);\r\n      } else {\r\n        await PATCH_AttendanceClockingStartBreak(CLOCK_ID);\r\n      }\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["dateTime","date","now","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minutes","getMinutes","seconds","getSeconds","getTime","__string__","__code__","getDateTime","options","toLocaleString","MeetingEventSchedule_S","data","id","Number","type","memberType","name","String","clientId","ClientInfo_S","branchId","ClientBranch_S","memberCategoryId","GroupingsMemberCategories_S","meetingSpan","startTime","Time_I","closeTime","latenessTime","isRecuring","Boolean_I","hasBreakTime","hasDuty","hasOvertime","agenda","agendaFile","virtualMeetingLink","virtualMeetingType","meetingLocation","expectedMonthlyAttendance","activeMonthlyAttendance","updatedBy","updateDate","MemberClockingInfo_S","memberInfo","MembershipUser_S","JSON","stringify","meetingEventId","memberId","accountType","inOrOut","inTime","Date_I","outTime","startBreak","endBreak","clockedBy","clockingMethod","clockingMethodName","justification","InstanceOfOrganizationMember","MemberClockingAdditionalInfo_S","phone","email","facebook","instagram","placeOfWork","profession","twitter","whatsapp","businessHashtag","businessDescription","dateJoined","MemberClockingInfoFull_S","ATTENDANCE","attendance","additionalInfo","lastSeen","status","country","stateProvince","applicantFirstname","applicantSurname","applicantGender","applicantPhone","applicantEmail","applicantDesignationRole","region","district","constituency","community","subscriptionDuration","subscriptionDate","subscriptionFee","logo","archive","accountCategory","creationDate","countryInfo","Country_S","_Country_D","regionInfo","Region_S","_Region_D","districtInfo","District_S","_District_D","constituencyInfo","Constituency_S","_Constituency_D","_dT_","toLocaleLowerCase","split","_dT","length","today","newTime","undefined","setHours","setMinutes","setSeconds","PATCH_AttendanceClockingClockIn","clockId","time","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","response","unknownError","errors","forEach","e","err","errormsg","error","push","res","https_swal_error_format","catch","allowOutsideClick","result","isConfirmed","successMsg","_VALUE","value","Object","VALUE","message","setTimeout","window","location","reload","PATCH_AttendanceClockingStartBreak","ClockerTablePartsFirst","LitElement","constructor","super","_data","_type","clockingInfo","fullInfo","clocking_info","memberProfileBaseUrl","this","requestUpdate","connectedCallback","_clockingInfo","parse","disconnectedCallback","getClockingInfo","getClockingInfoFull","render","clockingInfoFull","html","firstUpdated","createRenderRoot","styles","css","property","Boolean","customElement","ClockerTablePartsFirstIndividual","_memberData","memberData","MEMBER_ID","base64Encode","dateStyle","timeStyle","profilePicture","firstname","middlename","surname","nothing","ClockerTablePartsFirstOrganization","organizationName","setClockingTimeInfo","clockingTime","clockingTimeValue","getClockingTimeInfo","CTI","ClockerTablePartsSecond","clocking","pageButtonAccess","console","log","atDate","atInTime","CLOCK_ID","CLOCKED","atBreakTime","TODAY","HAS_BREAKTIME","IS_TODAY","toDateString","clockUser","userBreak","setInterval","selectorString","document","querySelectorAll","getAttribute","addEventListener","clockInUser","element","preventDefault","startUserBreak"],"sourceRoot":""}