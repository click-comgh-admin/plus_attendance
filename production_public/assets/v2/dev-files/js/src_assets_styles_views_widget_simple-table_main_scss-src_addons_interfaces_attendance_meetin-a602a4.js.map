{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_assets_styles_views_widget_simple-table_main_scss-src_addons_interfaces_attendance_meetin-a602a4.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/schedules/categories/index.ts"],"sourcesContent":["export class MeetingEventCategoryModel {\n    id: number;\n    meetingEventId: MeetingEventIDModel;\n    memberCategoryId: MemberCategoryIDModel;\n    updatedBy: number;\n    updateDate: Date;\n    date: Date;\n  \n    static fromJson(json: any): MeetingEventCategoryModel {\n      const model = new MeetingEventCategoryModel();\n      model.id = json.id;\n      model.meetingEventId = MeetingEventIDModel.fromJson(json.meetingEventId);\n      model.memberCategoryId = MemberCategoryIDModel.fromJson(json.memberCategoryId);\n      model.updatedBy = json.updatedBy;\n      model.updateDate = new Date(json.updateDate);\n      model.date = new Date(json.date);\n      return model;\n    }\n  \n    toJson(): any {\n      return {\n        id: this.id,\n        meetingEventId: this.meetingEventId.toJson(),\n        memberCategoryId: this.memberCategoryId.toJson(),\n        updatedBy: this.updatedBy,\n        updateDate: this.updateDate.toISOString(),\n        date: this.date.toISOString(),\n      };\n    }\n  \n    toString(): string {\n      return JSON.stringify(this.toJson(), null, 2);\n    }\n  }\n  \n  export class MeetingEventIDModel {\n    id: number;\n    type: number;\n    memberType: number;\n    name: string;\n    clientId: ClientIDModel;\n    branchId: BranchIDModel;\n    memberCategoryId: MemberCategoryIDModel;\n    meetingSpan: number;\n    startTime: string;\n    closeTime: string;\n    latenessTime: null;\n    isRecuring: boolean;\n    hasBreakTime: boolean;\n    hasDuty: boolean;\n    hasOvertime: boolean;\n    virtualMeetingLink: string;\n    virtualMeetingType: number;\n    meetingLocation: number;\n    expectedMonthlyAttendance: number;\n    activeMonthlyAttendance: number;\n    agenda: string;\n    agendaFile: string;\n    updatedBy: number;\n    updateDate: Date;\n    date: Date;\n    meetingCategories: MeetingCategoryModel[];\n  \n    static fromJson(json: any): MeetingEventIDModel {\n      const model = new MeetingEventIDModel();\n      model.id = json.id;\n      model.type = json.type;\n      model.memberType = json.memberType;\n      model.name = json.name;\n      model.clientId = ClientIDModel.fromJson(json.clientId);\n      model.branchId = BranchIDModel.fromJson(json.branchId);\n      model.memberCategoryId = MemberCategoryIDModel.fromJson(json.memberCategoryId);\n      model.meetingSpan = json.meetingSpan;\n      model.startTime = json.startTime;\n      model.closeTime = json.closeTime;\n      model.latenessTime = json.latenessTime;\n      model.isRecuring = json.isRecuring;\n      model.hasBreakTime = json.hasBreakTime;\n      model.hasDuty = json.hasDuty;\n      model.hasOvertime = json.hasOvertime;\n      model.virtualMeetingLink = json.virtualMeetingLink;\n      model.virtualMeetingType = json.virtualMeetingType;\n      model.meetingLocation = json.meetingLocation;\n      model.expectedMonthlyAttendance = json.expectedMonthlyAttendance;\n      model.activeMonthlyAttendance = json.activeMonthlyAttendance;\n      model.agenda = json.agenda;\n      model.agendaFile = json.agendaFile;\n      model.updatedBy = json.updatedBy;\n      model.updateDate = new Date(json.updateDate);\n      model.date = new Date(json.date);\n      model.meetingCategories = json.meetingCategories.map((item: any) => MeetingCategoryModel.fromJson(item));\n      return model;\n    }\n  \n    toJson(): any {\n      return {\n        id: this.id,\n        type: this.type,\n        memberType: this.memberType,\n        name: this.name,\n        clientId: this.clientId.toJson(),\n        branchId: this.branchId.toJson(),\n        memberCategoryId: this.memberCategoryId.toJson(),\n        meetingSpan: this.meetingSpan,\n        startTime: this.startTime,\n        closeTime: this.closeTime,\n        latenessTime: this.latenessTime,\n        isRecuring: this.isRecuring,\n        hasBreakTime: this.hasBreakTime,\n        hasDuty: this.hasDuty,\n        hasOvertime: this.hasOvertime,\n        virtualMeetingLink: this.virtualMeetingLink,\n        virtualMeetingType: this.virtualMeetingType,\n        meetingLocation: this.meetingLocation,\n        expectedMonthlyAttendance: this.expectedMonthlyAttendance,\n        activeMonthlyAttendance: this.activeMonthlyAttendance,\n        agenda: this.agenda,\n        agendaFile: this.agendaFile,\n        updatedBy: this.updatedBy,\n        updateDate: this.updateDate.toISOString(),\n        date: this.date.toISOString(),\n        meetingCategories: this.meetingCategories.map((item: MeetingCategoryModel) => item.toJson()),\n      };\n    }\n  \n    toString(): string {\n      return JSON.stringify(this.toJson(), null, 2);\n    }\n  }\n  \n  export class BranchIDModel {\n    id: number;\n    name: string;\n    accountId: number;\n    createdBy: number;\n    creationDate: Date;\n    updatedBy: number;\n    updateDate: Date;\n  \n    static fromJson(json: any): BranchIDModel {\n      const model = new BranchIDModel();\n      model.id = json.id;\n      model.name = json.name;\n      model.accountId = json.accountId;\n      model.createdBy = json.createdBy;\n      model.creationDate = new Date(json.creationDate);\n      model.updatedBy = json.updatedBy;\n      model.updateDate = new Date(json.updateDate);\n      return model;\n    }\n  \n    toJson(): any {\n      return {\n        id: this.id,\n        name: this.name,\n        accountId: this.accountId,\n        createdBy: this.createdBy,\n        creationDate: this.creationDate.toISOString(),\n        updatedBy: this.updatedBy,\n        updateDate: this.updateDate.toISOString(),\n      };\n    }\n  \n    toString(): string {\n      return JSON.stringify(this.toJson(), null, 2);\n    }\n  }\n  \n  export class ClientIDModel {\n    id: number;\n    name: string;\n    accountType: number;\n    country: string;\n    stateProvince: string;\n    applicantFirstname: string;\n    applicantSurname: string;\n    applicantGender: number;\n    applicantPhone: string;\n    applicantEmail: string;\n    applicantDesignationRole: number;\n    region: number;\n    district: number;\n    constituency: number;\n    community: string;\n    subscriptionDuration: string;\n    subscriptionDate: Date;\n    subscriptionFee: string;\n    logo: string;\n    status: number;\n    archive: number;\n    accountCategory: MemberCategoryIDModel;\n    website: string;\n    creationDate: Date;\n    updatedBy: number;\n    updateDate: Date;\n    subscriptionInfo: SubscriptionInfoModel;\n    countryInfo: CountryInfoModel[];\n  \n    static fromJson(json: any): ClientIDModel {\n      const model = new ClientIDModel();\n      model.id = json.id;\n      model.name = json.name;\n      model.accountType = json.accountType;\n      model.country = json.country;\n      model.stateProvince = json.stateProvince;\n      model.applicantFirstname = json.applicantFirstname;\n      model.applicantSurname = json.applicantSurname;\n      model.applicantGender = json.applicantGender;\n      model.applicantPhone = json.applicantPhone;\n      model.applicantEmail = json.applicantEmail;\n      model.applicantDesignationRole = json.applicantDesignationRole;\n      model.region = json.region;\n      model.district = json.district;\n      model.constituency = json.constituency;\n      model.community = json.community;\n      model.subscriptionDuration = json.subscriptionDuration;\n      model.subscriptionDate = new Date(json.subscriptionDate);\n      model.subscriptionFee = json.subscriptionFee;\n      model.logo = json.logo;\n      model.status = json.status;\n      model.archive = json.archive;\n      model.accountCategory = MemberCategoryIDModel.fromJson(json.accountCategory);\n      model.website = json.website;\n      model.creationDate = new Date(json.creationDate);\n      model.updatedBy = json.updatedBy;\n      model.updateDate = new Date(json.updateDate);\n      model.subscriptionInfo = SubscriptionInfoModel.fromJson(json.subscriptionInfo);\n      model.countryInfo = json.countryInfo.map((item: any) => CountryInfoModel.fromJson(item));\n      return model;\n    }\n  \n    toJson(): any {\n      return {\n        id: this.id,\n        name: this.name,\n        accountType: this.accountType,\n        country: this.country,\n        stateProvince: this.stateProvince,\n        applicantFirstname: this.applicantFirstname,\n        applicantSurname: this.applicantSurname,\n        applicantGender: this.applicantGender,\n        applicantPhone: this.applicantPhone,\n        applicantEmail: this.applicantEmail,\n        applicantDesignationRole: this.applicantDesignationRole,\n        region: this.region,\n        district: this.district,\n        constituency: this.constituency,\n        community: this.community,\n        subscriptionDuration: this.subscriptionDuration,\n        subscriptionDate: this.subscriptionDate.toISOString(),\n        subscriptionFee: this.subscriptionFee,\n        logo: this.logo,\n        status: this.status,\n        archive: this.archive,\n        accountCategory: this.accountCategory.toJson(),\n        website: this.website,\n        creationDate: this.creationDate.toISOString(),\n        updatedBy: this.updatedBy,\n        updateDate: this.updateDate.toISOString(),\n        subscriptionInfo: this.subscriptionInfo.toJson(),\n        countryInfo: this.countryInfo.map((item: CountryInfoModel) => item.toJson()),\n      };\n    }\n  \n    toString(): string {\n      return JSON.stringify(this.toJson(), null, 2);\n    }\n  }\n  \n  export class MemberCategoryIDModel {\n    id: number;\n    clientId: ClientIDModel | number;\n    category: string;\n    createdBy: number;\n    updatedBy: number;\n    updateDate: Date | null;\n    date: Date | null;\n  \n    static fromJson(json: any): MemberCategoryIDModel {\n      const model = new MemberCategoryIDModel();\n      model.id = json.id;\n    model.clientId = Number.isNaN(json.clientId) ? ClientIDModel.fromJson(json.clientId) : Number(json.clientId);\n      model.category = json.category;\n      model.createdBy = json.createdBy;\n      model.updatedBy = json.updatedBy;\n      model.updateDate = json.updateDate ? new Date(json.updateDate) : null;\n      model.date = json.date ? new Date(json.date) : null;\n      return model;\n    }\n  \n    toJson(): any {\n      return {\n        id: this.id,\n      //@ts-ignore\n      clientId: Number.isNaN(this.clientId) ? this.clientId.toJson() : this.clientId,\n        category: this.category,\n        createdBy: this.createdBy,\n        updatedBy: this.updatedBy,\n        updateDate: this.updateDate ? this.updateDate.toISOString() : null,\n        date: this.date ? this.date.toISOString() : null,\n      };\n    }\n  \n    toString(): string {\n      return JSON.stringify(this.toJson(), null, 2);\n    }\n  }\n  \n  export class CountryInfoModel {\n    id: number;\n    name: string;\n    short: string;\n    code: string;\n  \n    static fromJson(json: any): CountryInfoModel {\n      const model = new CountryInfoModel();\n      model.id = json.id;\n      model.name = json.name;\n      model.short = json.short;\n      model.code = json.code;\n      return model;\n    }\n  \n    toJson(): any {\n      return {\n        id: this.id,\n        name: this.name,\n        short: this.short,\n        code: this.code,\n      };\n    }\n  \n    toString(): string {\n      return JSON.stringify(this.toJson(), null, 2);\n    }\n  }\n  \n  export class SubscriptionInfoModel {\n    id: number;\n    client: string;\n    client_id: string;\n    subscription_id: string;\n    subscribed_modules: SubscribedModulesModel;\n    date_created: Date;\n  \n    static fromJson(json: any): SubscriptionInfoModel {\n      const model = new SubscriptionInfoModel();\n      model.id = json.id;\n      model.client = json.client;\n      model.client_id = json.client_id;\n      model.subscription_id = json.subscription_id;\n      model.subscribed_modules = SubscribedModulesModel.fromJson(json.subscribed_modules);\n      model.date_created = new Date(json.date_created);\n      return model;\n    }\n  \n    toJson(): any {\n      return {\n        id: this.id,\n        client: this.client,\n        client_id: this.client_id,\n        subscription_id: this.subscription_id,\n        subscribed_modules: this.subscribed_modules.toJson(),\n        date_created: this.date_created.toISOString(),\n      };\n    }\n  \n    toString(): string {\n      return JSON.stringify(this.toJson(), null, 2);\n    }\n  }\n  \n  export class SubscribedModulesModel {\n    \"Module 1\": ModuleModel;\n    \"Module 2\": ModuleModel;\n  \n    static fromJson(json: any): SubscribedModulesModel {\n      const model = new SubscribedModulesModel();\n      model[\"Module 1\"] = ModuleModel.fromJson(json[\"Module 1\"]);\n      model[\"Module 2\"] = ModuleModel.fromJson(json[\"Module 2\"]);\n      return model;\n    }\n  \n    toJson(): any {\n      return {\n        \"Module 1\": this[\"Module 1\"].toJson(),\n        \"Module 2\": this[\"Module 2\"].toJson(),\n      };\n    }\n  \n    toString(): string {\n      return JSON.stringify(this.toJson(), null, 2);\n    }\n  }\n  \n  export class ModuleModel {\n    module_id: number;\n    module_name: string;\n    expires_on: Date;\n    amount_paid: number;\n  \n    static fromJson(json: any): ModuleModel {\n      const model = new ModuleModel();\n      model.module_id = json.module_id;\n      model.module_name = json.module_name;\n      model.expires_on = new Date(json.expires_on);\n      model.amount_paid = json.amount_paid;\n      return model;\n    }\n  \n    toJson(): any {\n      return {\n        module_id: this.module_id,\n        module_name: this.module_name,\n        expires_on: this.expires_on.toISOString(),\n        amount_paid: this.amount_paid,\n      };\n    }\n  \n    toString(): string {\n      return JSON.stringify(this.toJson(), null, 2);\n    }\n  }\n  \n  export class MeetingCategoryModel {\n    id: number;\n    meetingEventId: number;\n    memberCategoryId: MemberCategoryIDModel;\n    updatedBy: number;\n    updateDate: Date;\n    date: Date;\n  \n    static fromJson(json: any): MeetingCategoryModel {\n      const model = new MeetingCategoryModel();\n      model.id = json.id;\n      model.meetingEventId = json.meetingEventId;\n      model.memberCategoryId = MemberCategoryIDModel.fromJson(json.memberCategoryId);\n      model.updatedBy = json.updatedBy;\n      model.updateDate = new Date(json.updateDate);\n      model.date = new Date(json.date);\n      return model;\n    }\n  \n    toJson(): any {\n      return {\n        id: this.id,\n        meetingEventId: this.meetingEventId,\n        memberCategoryId: this.memberCategoryId.toJson(),\n        updatedBy: this.updatedBy,\n        updateDate: this.updateDate.toISOString(),\n        date: this.date.toISOString(),\n      };\n    }\n  \n    toString(): string {\n      return JSON.stringify(this.toJson(), null, 2);\n    }\n  }\n  "],"names":["MeetingEventCategoryModel","static","json","model","id","meetingEventId","MeetingEventIDModel","fromJson","memberCategoryId","MemberCategoryIDModel","updatedBy","updateDate","Date","date","toJson","this","toISOString","toString","JSON","stringify","type","memberType","name","clientId","ClientIDModel","branchId","BranchIDModel","meetingSpan","startTime","closeTime","latenessTime","isRecuring","hasBreakTime","hasDuty","hasOvertime","virtualMeetingLink","virtualMeetingType","meetingLocation","expectedMonthlyAttendance","activeMonthlyAttendance","agenda","agendaFile","meetingCategories","map","item","MeetingCategoryModel","accountId","createdBy","creationDate","accountType","country","stateProvince","applicantFirstname","applicantSurname","applicantGender","applicantPhone","applicantEmail","applicantDesignationRole","region","district","constituency","community","subscriptionDuration","subscriptionDate","subscriptionFee","logo","status","archive","accountCategory","website","subscriptionInfo","SubscriptionInfoModel","countryInfo","CountryInfoModel","Number","isNaN","category","short","code","client","client_id","subscription_id","subscribed_modules","SubscribedModulesModel","date_created","ModuleModel","module_id","module_name","expires_on","amount_paid"],"sourceRoot":""}