{"version":3,"file":"../../production_public/assets/v2/dev-files/js/src_assets_styles_views_widget_simple-table_main_scss-src_addons_functions_date_time_date_ts--21782e.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/functions/date_time/date.ts","webpack://webpackNumbers/./src/addons/interfaces/attendance/meeting_event/member/member/day.ts","webpack://webpackNumbers/./src/addons/network/attendance/day_of_week/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/day/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/member/day/delete.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/member/day/index.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/member/day/post_multiple.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/member/index.ts"],"sourcesContent":["export const getDate = (date: Date, options?: Intl.DateTimeFormatOptions) => {\r\n  const __date = new Date(),\r\n    _DateString = `${date}`;\r\n  \r\n  let _date = new Date(_DateString);\r\n  return _date.toLocaleDateString('en-US', options);\r\n}","import { MeetingEventIDModel } from \"../../schedules/categories\";\r\nimport { IndividualMemberModel } from \"./ind\";\r\nimport { OrganizationMemberModel } from \"./org\";\r\nimport { MeetingAttendanceMemberModel } from \"./\";\r\n\r\n// Export class for the \"MemberMeetingEventDay\" containing all the fields\r\nexport class MemberMeetingEventDayModel {\r\n  id: number;\r\n  meetingEventId: MeetingEventIDModel;\r\n  dayId: DayIdFullModel;\r\n  memberId: MeetingAttendanceMemberModel;\r\n  updatedBy: number;\r\n  updateDate: Date;\r\n  date: Date;\r\n  memberInfo?: IndividualMemberModel | OrganizationMemberModel | null;\r\n\r\n  // toJson method to convert the object to a JSON string\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      meetingEventId: this.meetingEventId.toJson(),\r\n      dayId: this.dayId.toJson(),\r\n      memberId: this.memberId.toJson(),\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate.toISOString(),\r\n      date: this.date.toISOString(),\r\n      memberInfo: this.memberInfo === null || this.memberInfo === undefined ? null : this.memberInfo.toJson(),\r\n    };\r\n  }\r\n\r\n  // fromJson method to create an object from a JSON string\r\n  static fromJson(json: any): MemberMeetingEventDayModel {\r\n    const model = new MemberMeetingEventDayModel();\r\n    model.id = json.id;\r\n    model.meetingEventId = MeetingEventIDModel.fromJson(json.meetingEventId);\r\n    model.dayId = DayIdFullModel.fromJson(json.dayId);\r\n    model.memberId = MeetingAttendanceMemberModel.fromJson(json.memberId);\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = new Date(json.updateDate);\r\n    model.date = new Date(json.date);\r\n    model.memberInfo = json.memberInfo === null || json.memberInfo === undefined ? null : ('certificates' in json.memberInfo ? OrganizationMemberModel.fromJson(json.memberInfo) : IndividualMemberModel.fromJson(json.memberInfo));\r\n\r\n    console.log({\"model-model--model\": model});\r\n    \r\n    return model;\r\n  }\r\n\r\n  // toString method to return a string representation of the object\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\n\r\n// Export class for the \"dayId\" field\r\nexport class DayIdModel {\r\n  id: number;\r\n  date: Date;\r\n\r\n  // toJson method to convert the object to a JSON string\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      date: this.date.toISOString(),\r\n    };\r\n  }\r\n\r\n  // fromJson method to create an object from a JSON string\r\n  static fromJson(json: any): DayIdModel {\r\n    const model = new DayIdModel();\r\n    model.id = json.id;\r\n    model.date = new Date(json.date);\r\n    return model;\r\n  }\r\n\r\n  // toString method to return a string representation of the object\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\n\r\n// Export class for the \"dayId\" field\r\nexport class DayIdFullModel {\r\n  id: number;\r\n  meetingEventId: MeetingEventIDModel;\r\n  dayId: number;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  updatedBy: number;\r\n  updateDate: Date;\r\n  date: Date;\r\n\r\n  // toJson method to convert the object to a JSON string\r\n  toJson(): any {\r\n    return {\r\n      id: this.id,\r\n      meetingEventId: this.meetingEventId.toJson(),\r\n      dayId: this.dayId,\r\n      startDate: this.startDate.toISOString(),\r\n      endDate: this.endDate.toISOString(),\r\n      updatedBy: this.updatedBy,\r\n      updateDate: this.updateDate.toISOString(),\r\n      date: this.date.toISOString(),\r\n    };\r\n  }\r\n\r\n  // fromJson method to create an object from a JSON string\r\n  static fromJson(json: any): DayIdFullModel {\r\n    const model = new DayIdFullModel();\r\n    model.id = json.id;\r\n    model.meetingEventId = MeetingEventIDModel.fromJson(json.meetingEventId);\r\n    model.dayId = json.dayId;\r\n    model.startDate = new Date(json.startDate);\r\n    model.endDate = new Date(json.endDate);\r\n    model.updatedBy = json.updatedBy;\r\n    model.updateDate = new Date(json.updateDate);\r\n    model.date = new Date(json.date);\r\n    return model;\r\n  }\r\n\r\n  // toString method to return a string representation of the object\r\n  toString(): string {\r\n    return JSON.stringify(this.toJson());\r\n  }\r\n}\r\n\r\n\r\nexport class MemberMeetingEventDayFormInputModel {\r\n  meetingEventId: number;\r\n  dayId: number;\r\n  memberId: number;\r\n\r\n  toJson(): object {\r\n    return {\r\n      meetingEventId: this.meetingEventId,\r\n      dayId: this.dayId,\r\n      memberId: this.memberId,\r\n    };\r\n  }\r\n\r\n  static fromJson(json: any): MemberMeetingEventDayFormInputModel {\r\n    const model = new MemberMeetingEventDayFormInputModel();\r\n    model.meetingEventId = json.meetingEventId;\r\n    model.dayId = json.dayId;\r\n    model.memberId = json.memberId;\r\n    return model;\r\n  }\r\n\r\n  toString(): string {\r\n    return `MemberMeetingEventDayFormInputModel(meetingEventId=${this.meetingEventId}, dayId=${this.dayId}, memberId=${this.memberId})`;\r\n  }\r\n}\r\n","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_DayOfWeek<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/day-of-week'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceScheduleDay<Type>(ID: Number = null, url_params: string = \"\", ) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/day'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function DELETE_AttendanceScheduleMemberDay(meetingMemberId: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/member-day/' + meetingMemberId,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Remove Member Day?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceScheduleMemberDay<Type>(ID: Number = null, url_params: string = \"\", ) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/member-day'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { MemberMeetingEventDayFormInputModel } from \"@@addons/interfaces/attendance/meeting_event/member/member/day\";\r\n\r\n\r\nexport async function POST_AttendanceScheduleMemberDayBulk(dayInfos: Array<MemberMeetingEventDayFormInputModel>): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/member-day/bulk',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"add-schedule-member-day\"]'),\r\n    formData = JSON.stringify(dayInfos);\r\n\r\n  return Swal.fire({\r\n    title: 'Add Member Day(s)?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        // try {\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSES = networkCallRes.multipleResponse;\r\n        // console.log({ _RESPONSES });\r\n        let errors: Array<{ error: string }> = [];\r\n        if (_RESPONSES !== null) {\r\n          _RESPONSES.forEach((_RESPONSE, i) => {\r\n            // console.log({ \"_RESPONSE._RESPONSE\": _RESPONSE });\r\n            if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n              if (_RESPONSE.unknownError.length > 0) {\r\n                // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n                _RESPONSE.unknownError.forEach(e => {\r\n                  const _errors = e.errors;\r\n                  _errors.forEach(err => {\r\n                    errors.push({ error: `[${\"Entry\".toUpperCase()} ${i+1}] - ${err}` });\r\n                  });\r\n                });\r\n              } else {\r\n                if (_RESPONSE.nameError.length > 0) {\r\n                  // console.log({\"_RESPONSE.nameError\": _RESPONSE.nameError});\r\n\r\n                  _RESPONSE.nameError.forEach(e => {\r\n                    const _errorId = e.id;\r\n                    const _errors = e.errors;\r\n                    _errors.forEach(err => {\r\n                      errors.push({ error: `[${\"Entry\".toUpperCase()} ${i+1}] - ${_errorId.toUpperCase()} :: ${err}` });\r\n                    });\r\n                  });\r\n                }\r\n\r\n              }\r\n            }\r\n          });\r\n\r\n        }\r\n        if (errors.length > 0) {\r\n          const res = https_swal_error_format(errors);\r\n          return Swal.showValidationMessage(\r\n            `${res}`\r\n          );\r\n        }\r\n        return networkCallRes;\r\n        // } catch (error) {\r\n        //   console.error({ error });\r\n        //   let errorHttp = HTTP;\r\n        //   errorHttp['error'] = error;\r\n        //   const networkCallRes = new NetWorkCallResponses(\"post\", errorHttp, true, formContainer);\r\n        //   networkCallRes.postForm\r\n        //   return networkCallRes;\r\n        // }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceScheduleMember<Type>(ID: Number = null, url_params: string = \"\", ) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/member'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}"],"names":["getDate","date","options","Date","toLocaleDateString","MemberMeetingEventDayModel","toJson","id","this","meetingEventId","dayId","memberId","updatedBy","updateDate","toISOString","memberInfo","undefined","static","json","model","MeetingEventIDModel","DayIdFullModel","fromJson","MeetingAttendanceMemberModel","OrganizationMemberModel","IndividualMemberModel","console","log","toString","JSON","stringify","DayIdModel","startDate","endDate","MemberMeetingEventDayFormInputModel","GET_DayOfWeek","type","_get_cookie","getUserLoginInfoCookie","url","CONSTANTS","HTTP","http","method","headers","Authorization","token","NetWorkCallResponses","error","errorHttp","GET_AttendanceScheduleDay","ID","url_params","DELETE_AttendanceScheduleMemberDay","meetingMemberId","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","body","then","networkCallRes","_RESPONSE","response","unknownError","length","errors","forEach","e","err","push","res","https_swal_error_format","postForm","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","message","success","setTimeout","window","location","reload","GET_AttendanceScheduleMemberDay","POST_AttendanceScheduleMemberDayBulk","dayInfos","formContainer","document","querySelector","_RESPONSES","multipleResponse","i","toUpperCase","nameError","_errorId","GET_AttendanceScheduleMember"],"sourceRoot":""}