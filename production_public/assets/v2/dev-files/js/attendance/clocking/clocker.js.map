{"version":3,"file":"../../production_public/assets/v2/dev-files/js/attendance/clocking/clocker.js","mappings":"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","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/network/attendance/clocking/multiple_clocking.ts","webpack://webpackNumbers/./src/addons/network/attendance/clocking/reset-clocking-list.ts","webpack://webpackNumbers/./src/view/attendance/clocking/clocker/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { BreakClockingTYPE, GenericMeetingEventClockingTypeInfo_I } from \"@@addons/interfaces/generic/meeting_event/clocking_type\";\r\n\r\n\r\nexport async function PATCH_AttendanceMultipleClockingBreak(meetingEventId: Number, action: string,\r\n  clockingType: BreakClockingTYPE, clockingIds: number[], clockingTypes: GenericMeetingEventClockingTypeInfo_I[]): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  let clockingTypeId = 0;\r\n  clockingTypes.forEach(cT => {\r\n    if (cT.name === clockingType) {\r\n      clockingTypeId = cT.id;\r\n    }\r\n  });\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/bulk-clocking/' + meetingEventId,\r\n    formData = {\r\n      clockingType: clockingTypeId,\r\n      clockingIds: clockingIds\r\n    };\r\n\r\n  return Swal.fire({\r\n    title: `${action} multiple action?`,\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, true).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses<string>(\"patch\", HTTP, false);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\";\r\n      const _VALUE = result.value;\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n      }\r\n\r\n      if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n        Swal.fire({\r\n          title: successMsg,\r\n          icon: 'success',\r\n          iconColor: '#f97817',\r\n          confirmButtonColor: '#f97817',\r\n        });\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 500);\r\n      }\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_AttendanceClockingUpdateClockingList(meetingEventId: Number, date: string): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/attendance/reset-clocking-list/' + meetingEventId,\r\n    formData = {\"time\": date};\r\n\r\n  return Swal.fire({\r\n    title: 'Update Clocking List?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return Swal.fire({\r\n        title: 'Update Clocking List?',\r\n        // text: \"You won't be able to revert this!\",\r\n        icon: 'info',\r\n        iconColor: '#f97817',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes',\r\n        cancelButtonText: 'Cancel',\r\n        confirmButtonColor: '#f97817',\r\n        cancelButtonColor: '#ddd',\r\n        reverseButtons: true,\r\n        showLoaderOnConfirm: true,\r\n        backdrop: true,\r\n        preConfirm: async (login) => {\r\n          return await http(url, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(formData),\r\n            headers: {\r\n              Authorization: \"Token \" + _get_cookie.token\r\n            }\r\n          }, true, false).then((HTTP) => {\r\n            // console.log({ HTTP });\r\n    \r\n            const networkCallRes = new NetWorkCallResponses<string>(\"post\", HTTP, false);\r\n            const _RESPONSE = networkCallRes.response;\r\n            // console.log({\"_RESPONSE\": _RESPONSE});\r\n            if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n              if (_RESPONSE.unknownError.length > 0) {\r\n                // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n    \r\n                let errors: Array<{ error: string }> = [];\r\n                _RESPONSE.unknownError.forEach(e => {\r\n                  const _errors = e.errors;\r\n                  _errors.forEach(err => {\r\n                    let errormsg = { error: e.id + \": \" + err };\r\n                    if (e.id === \"non_field_errors\") {\r\n                      errormsg = { error: err };\r\n                    }\r\n    \r\n                    errors.push(errormsg);\r\n                  });\r\n                });\r\n    \r\n                const res = https_swal_error_format(errors);\r\n                Swal.showValidationMessage(\r\n                  `${res}`\r\n                );\r\n              }\r\n            }\r\n            return networkCallRes;\r\n          }).catch(error => {\r\n            Swal.showValidationMessage(\r\n              `${String(error)}`\r\n            );\r\n          });\r\n        },\r\n        allowOutsideClick: () => !Swal.isLoading()\r\n      }).then((result) => {\r\n        // console.log({ result });\r\n        if (result.isConfirmed) {\r\n          let successMsg = \"Success\";\r\n          const _VALUE = result.value;\r\n    \r\n          if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n            const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n            successMsg = String(VALUE.message);\r\n          }\r\n    \r\n          if (_VALUE instanceof Object && (_VALUE.response !== null)) {\r\n            Swal.fire({\r\n              title: successMsg,\r\n              icon: 'success',\r\n              iconColor: '#f97817',\r\n              confirmButtonColor: '#f97817',\r\n            });\r\n            setTimeout(() => {\r\n              window.location.reload();\r\n            }, 500);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  });\r\n}","import '@@assets/styles/views/attendance/clocking/main.scss';\r\nimport { LitElement, html, css, TemplateResult, nothing } from 'lit';\r\nimport { customElement, property, query, } from 'lit/decorators.js';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-select';\r\nimport '@material/mwc-textfield';\r\nimport '@@widgets/datatables';\r\nimport '@@interfaces/datatables';\r\nimport '@@views/no_access/account_expired';\r\nimport '@@views/no_access/no_page_entry';\r\nimport { getActiveBranchIdCookie } from '@@addons/functions/views/home/branch';\r\nimport { MembershipUser_I } from '@@addons/interfaces/members/user';\r\nimport { ClientBranchShort_I } from '@@addons/interfaces/clients/branches';\r\nimport { NetworkCallPaginResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport '@@addons/widgets/form/new/switch';\r\nimport { base64Decode, base64Encode } from '@@addons/functions/base64';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { urlQueryParams, urlQueryParamsGet, urlQueryParamsJoin } from '@@addons/functions/url_query_params';\r\nimport { GET_GenericGender } from '@@addons/network/generic/gender';\r\nimport { GenericGenderInfo_I, GenericGenderInfo_S } from '@@addons/interfaces/generic/gender';\r\nimport { FilterFieldBox } from '@@addons/classes/filter_field_box';\r\nimport { Button } from '@material/mwc-button';\r\nimport '..';\r\nimport { GroupingsMemberCategories_I } from '@@addons/interfaces/members/groupings/member_categories';\r\nimport { GET_MemberGroupingsMemberCategories } from '@@addons/network/members/groupings/member_categories';\r\nimport { MemberClockingInfo_I, MemberClockingInfo_S } from '@@addons/interfaces/attendance/member_clocking_info';\r\nimport { POST_AttendanceClockingUpdateClockingList } from '@@addons/network/attendance/clocking/reset-clocking-list';\r\nimport { TextField } from '@material/mwc-textfield';\r\nimport { PATCH_AttendanceMultipleClockingBreak } from '@@addons/network/attendance/clocking/multiple_clocking';\r\nimport { GET_GenericMeetingEventClockingType } from '@@addons/network/generic/meeting_event/clocking_type';\r\nimport { GenericMeetingEventClockingTypeInfo_I, GenericMeetingEventClockingTypeInfo_S } from '@@addons/interfaces/generic/meeting_event/clocking_type';\r\nimport { GET_MemberGroupingsGroups } from '@@addons/network/members/groupings/group';\r\nimport '../../../membership/members/select-member-type';\r\nimport { MeetingEventScheduleGroup_I } from '@@addons/interfaces/attendance/meeting_event/group';\r\nimport { GET_AttendanceScheduleGroup } from '@@addons/network/attendance/setup/group';\r\nimport { until } from 'lit/directives/until.js';\r\nimport { GroupingsGroup_I, GroupingsGroup_S } from '@@addons/interfaces/members/groupings/group';\r\nimport { MeetingEventScheduleSubGroup_I } from '@@addons/interfaces/attendance/meeting_event/subgroup';\r\nimport { GroupingsSubGroup_I, GroupingsSubGroup_S } from '@@addons/interfaces/members/groupings/subgroup';\r\nimport { GET_AttendanceScheduleSubGroup } from '@@addons/network/attendance/setup/subgroup';\r\nimport { GET_MemberGroupingsSubGroups } from '@@addons/network/members/groupings/subgroup';\r\nimport './table_parts/first';\r\nimport './table_parts/second';\r\nimport './table_parts/third';\r\nimport { setClockingTimeInfo } from './table_parts/second';\r\nimport { AppSetup } from '@@addons/functions/app_settings';\r\nimport { getAppSettingsExtraSettings } from '@@addons/functions/app_settings/extra_settings';\r\nimport { PageButtonUserAccess, AppSettingsExtraUserAccess } from '@@addons/functions/app_settings/extra_settings/user_access';\r\nimport { PAGE__IDS } from '@@views/attendance/page__id';\r\n\r\n@customElement(\"pdb-attendance-clocking-clocker\")\r\nexport class PdbAttendanceClockingClocker extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @query('[filter-section-context=\"btn\"]')\r\n  private filterSectionContextBtn: Button;\r\n\r\n  @query('[filter-section-context=\"container\"]')\r\n  private filterSectionContextContainer: Element;\r\n\r\n  @query('[make-general-posts=\"submit_filter_form\"]')\r\n  private filterSectionContextForm: HTMLFormElement;\r\n\r\n  @property({ type: Number })\r\n  private meetingEventId?: number = 0;\r\n\r\n  @property({ type: String })\r\n  private meetingEventIdEnc?: string = null;\r\n\r\n  @property({ type: String })\r\n  private datatablePathUrl: string = \"attendance/meeting-event/attendance\";\r\n\r\n  @property({ type: Array })\r\n  private _genders: GenericGenderInfo_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _clockingTypes: GenericMeetingEventClockingTypeInfo_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n  @property({ type: Array })\r\n  private _scheduleGroups: MeetingEventScheduleGroup_I[]  = [];\r\n\r\n  @property({ type: Array })\r\n  private _scheduleSubGroups: MeetingEventScheduleSubGroup_I[]  = [];\r\n\r\n  @property({ type: Array })\r\n  private _activeBranchId?: ClientBranchShort_I[] = null;\r\n\r\n  @property({ type: Number })\r\n  private _memberType?: number = 1;\r\n\r\n  @property({ type: String })\r\n  private clockingTimeValue?: string = \"\";\r\n\r\n  @property({ type: Boolean })\r\n  private clockingTime: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private meetingEventForToday: boolean = false;\r\n\r\n  private __members: NetworkCallPaginResponse_I<MembershipUser_I> = null;\r\n\r\n  public set _members(value: NetworkCallPaginResponse_I<MembershipUser_I>) {\r\n    this.__members = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _members(): NetworkCallPaginResponse_I<MembershipUser_I> {\r\n    return this.__members;\r\n  }\r\n\r\n  private filterBox: FilterFieldBox;\r\n\r\n  @property({ type: Boolean })\r\n  private _hasSetup: boolean = false;\r\n\r\n  @property({ type: Boolean })\r\n  private _pageButtonAccess: boolean = false;\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n    AppSetup().then(() => this._hasSetup = true);\r\n\r\n    this.getMeetingEventId();\r\n\r\n    const activeBranchId = getActiveBranchIdCookie();\r\n    this._activeBranchId = (activeBranchId === null) ? null : [activeBranchId];\r\n\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }\r\n    });\r\n\r\n    await this.getGenders();\r\n    await this.getClockingType();\r\n    await this.getClientMemberCategories();\r\n    await this.getAttendanceScheduleGroup();\r\n    await this.getAttendanceScheduleSubGroup();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    if (this._hasSetup) {\r\n      if (getAppSettingsExtraSettings()?.expiration_date.expired) {\r\n        return html`<account-expired-component></account-expired-component>`;\r\n      }\r\n      this._pageButtonAccess = PageButtonUserAccess(PAGE__IDS.clocking);\r\n      \r\n      if (!AppSettingsExtraUserAccess({pageId: PAGE__IDS.clocking, viewType: \"Both\"}, false)) {\r\n        return html`<no-page-entry-component></no-page-entry-component>`;\r\n      }\r\n    }\r\n    // console.log({ \"this.clockingTime\": this.clockingTime, \"this.clockingTimeValue\": this.clockingTimeValue });\r\n    if ((this.meetingEventId === 0) || (this.meetingEventId === null) || (Number.isNaN(this.meetingEventId))) {\r\n      return html`\r\n        <div class=\"shadow bg-white p-2\">\r\n          <pdb-attendance-clocking-meeting-picker\r\n            openContentBaseUrl=\"/clocking/clocker?meeting-event-id=\">\r\n          </pdb-attendance-clocking-meeting-picker>\r\n        </div>\r\n      `;\r\n    } else {\r\n      return html`\r\n        <div class=\"shadow bg-white p-2\">\r\n          <span class=\"flex flex-row md:flex-col w-100\"></span>\r\n          <div class=\"block my-1\">\r\n            <mwc-button icon=\"open_with\" label=\"Filters\" raised class=\"primary mt-1\"\r\n              filter-section-context=\"btn\" @click=\"${this.filterBox.toggleFilterFields}\">\r\n            </mwc-button>\r\n          </div>\r\n          <div class=\"block my-1\">\r\n            ${this.filterForm}\r\n          </div>\r\n          <div class=\"block my-1 overflow-x-scroll\">\r\n            <hr class=\"my-2\"/>\r\n            <div class=\"my-2 flex flex-col items-end\">\r\n              <div class=\"col-md-6 col-lg-4 flex flex-col items-end\">\r\n                <h4 class=\"font-semibold my-2 capitalize\">Override Clocking Time</h4>\r\n                <switch-input class=\"capitalize\" ?isSelected=\"${this.clockingTime}\" name=\"clockingTimeSwitchAction\"\r\n                  label=\"Override Clocking Time\"></switch-input>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n            ${this.clockingTimeField}\r\n            ${this.table}\r\n          </div>\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  private get clockingTimeField() {\r\n    if (this.clockingTime) {\r\n      return html`\r\n        <div class=\"my-1 flex flex-col items-end\">\r\n          <div class=\"col-md-6 col-lg-4 flex flex-col items-end\">\r\n            <h4 class=\"font-semibold my-2\">Select Date</h4>\r\n            <mwc-textfield name=\"setClockingTimeBtn\" type=\"datetime-local\" step=\"1\" class=\"w-full\" label=\"Select Clocking Time\"\r\n              value=\"${this.clockingTimeValue}\" outlined required>\r\n            </mwc-textfield><br>\r\n            <mwc-button raised label=\"Set Clocking Time\" @click=\"${this.setClockingTimeBtn}\"></mwc-button>\r\n          </div>\r\n        </div>\r\n      `;\r\n    } else {\r\n      return nothing;\r\n    }\r\n  }\r\n\r\n  private get resetClockingList() {\r\n    // if (this.meetingEventForToday) {\r\n      return html`\r\n        <div class=\"my-1 flex flex-col items-end\">\r\n          <div class=\"col-md-6 col-lg-4 flex flex-col items-end\">\r\n            <mwc-button raised label=\"Refresh Clocking List\" class=\"success\" @click=\"${this.UpdateClockingList}\"></mwc-button>\r\n          </div>\r\n        </div>\r\n      `;\r\n    // } else {\r\n    //   return nothing;\r\n    // }\r\n  }\r\n\r\n  private setClockingTimeBtn(e: any) {\r\n    // console.log({ e });\r\n    document.querySelectorAll('mwc-textfield[name=\"setClockingTimeBtn\"]').forEach((input: TextField) => {\r\n      this.clockingTimeValue = input.value;\r\n    });\r\n    // console.log({ \"this.clockingTimeValue\": this.clockingTimeValue });\r\n  }\r\n\r\n  private clockingTimeSwitchAction() {\r\n    const _this = this; \r\n    document.querySelectorAll('[name=\"clockingTimeSwitchAction\"]').forEach((_switch) => {\r\n      _switch.addEventListener(\"click\", (evt) => {\r\n        // @ts-ignore \r\n        _this.clockingTime = _switch.isSelected;\r\n        // console.log({ \"_this.clockingTime\": _this.clockingTime });\r\n        // @ts-ignore\r\n        // console.log({ \"_switch.isSelected\": _switch.isSelected });\r\n      });\r\n    });\r\n  }\r\n\r\n  firstUpdated() {\r\n    this.filterBox = new FilterFieldBox({\r\n      selectors: {\r\n        container: this.filterSectionContextContainer,\r\n        form: this.filterSectionContextForm,\r\n        filterSectionContextBtn: this.filterSectionContextBtn,\r\n      }, unmutableInputNames: [\r\n        { name: 'meeting-event-id', value: this.meetingEventIdEnc },\r\n      ],\r\n    });\r\n    this.clockingTimeSwitchAction();\r\n    setInterval(() => setClockingTimeInfo(this.clockingTime, this.clockingTimeValue)); // this is to change automatically update clocking times since datatabel is not allowing it\r\n  }\r\n\r\n  private getMeetingEventId() {\r\n    let meetingEventId = urlQueryParamsGet('meeting-event-id');\r\n    // console.log({ userId });\r\n    let _meetingEventId = meetingEventId !== null ? base64Decode(meetingEventId) : null;\r\n    this.meetingEventId = Number.isNaN(_meetingEventId) ? null : Number(_meetingEventId);\r\n    // console.log({ \"this.meetingEventId\": this.meetingEventId });\r\n    this.meetingEventIdEnc = base64Encode(String(this.meetingEventId), true);\r\n  }\r\n\r\n  private get filterForm() {\r\n    let returnHtml = html``;\r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_date = \"filter_date\",\r\n      filterNameId_filter_gender = \"filter_gender\",\r\n      filterNameId_filter_name = \"filter_name\",\r\n      filterNameId_filter_identity = \"filter_identity\",\r\n      filterNameId_filter_member_category = \"filter_member_category\",\r\n      filterNameId_filter_group = \"filter_group\",\r\n      filterNameId_filter_subgroup = \"filter_subgroup\",\r\n      filterNameId_filter_from_age = \"filter_from_age\",\r\n      filterNameId_filter_to_age = \"filter_to_age\";\r\n\r\n    let filterNameId_filter_dateVal: string = null,\r\n      filterNameId_filter_genderVal: string = null,\r\n      filterNameId_filter_nameVal:string = null,\r\n      filterNameId_filter_identityVal: string = null,\r\n      filterNameId_filter_member_categoryVal: number = null,\r\n      filterNameId_filter_groupVal: number = null,\r\n      filterNameId_filter_subgroupVal: number = null,\r\n      filterNameId_filter_from_ageVal: number = null,\r\n      filterNameId_filter_to_ageVal: number = null;\r\n    \r\n      for (const key in _urlQueryParams) {\r\n        let value = String(_urlQueryParams[key]);\r\n        value = value === \"\" ? null : value;\r\n        if (key === filterNameId_filter_date) {\r\n          if (value === null) {\r\n            filterNameId_filter_dateVal = \"\";\r\n          } else {\r\n            const date = new Date(value),\r\n              _DATE = date.toLocaleDateString('en-US', {\r\n                day: '2-digit', month: '2-digit', year: 'numeric', formatMatcher: 'best fit',\r\n                // @ts-ignore\r\n              }).split('/'),\r\n              DATE = [_DATE[2], _DATE[0], _DATE[1]].join('-'); \r\n            filterNameId_filter_dateVal = DATE;\r\n          }\r\n        }\r\n        if (key === filterNameId_filter_gender) {\r\n          filterNameId_filter_genderVal = value;\r\n        }\r\n        if (key === filterNameId_filter_name) {\r\n          filterNameId_filter_nameVal = value;\r\n        }\r\n        if (key === filterNameId_filter_identity) {\r\n          filterNameId_filter_identityVal = value;\r\n        }\r\n        if (key === filterNameId_filter_member_category) {\r\n          filterNameId_filter_member_categoryVal = Number(value);\r\n        }\r\n        if (key === filterNameId_filter_group) {\r\n          filterNameId_filter_groupVal = Number(value);\r\n        }\r\n        if (key === filterNameId_filter_subgroup) {\r\n          filterNameId_filter_subgroupVal = Number(value);\r\n        }\r\n        if (key === filterNameId_filter_from_age) {\r\n          filterNameId_filter_from_ageVal = Number(value);\r\n        }\r\n        if (key === filterNameId_filter_to_age) {\r\n          filterNameId_filter_to_ageVal = Number(value);\r\n        }\r\n      }\r\n    \r\n    const nameField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Search By Name\r\n          <mwc-textfield type=\"text\" name=\"${filterNameId_filter_name}\" id=\"${filterNameId_filter_name}\" label=\"Search By Name\" \r\n            value=\"${filterNameId_filter_nameVal === null ? \"\" : filterNameId_filter_nameVal}\" outlined required>\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const ageField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Filter Age In Years\r\n          <div class=\"flex\">\r\n            <mwc-textfield type=\"number\" min=\"0\" name=\"${filterNameId_filter_from_age}\" id=\"${filterNameId_filter_from_age}\" label=\"Pick From Age\" \r\n              value=\"${filterNameId_filter_from_ageVal === null ? \"\" : filterNameId_filter_from_ageVal}\" class=\"mx-1\" outlined required>\r\n            </mwc-textfield>\r\n            <mwc-textfield type=\"number\" min=\"0\" name=\"${filterNameId_filter_to_age}\" id=\"${filterNameId_filter_to_age}\" label=\"Pick To Age\" \r\n              value=\"${filterNameId_filter_to_ageVal === null ? \"\" : filterNameId_filter_to_ageVal}\" class=\"mx-1\" outlined required>\r\n            </mwc-textfield>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const memberCategoryField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Member Category\r\n          <pdb-membership-select-member-type defaultValue=\"${filterNameId_filter_member_categoryVal}\" \r\n            name=\"${filterNameId_filter_member_category}\" id=\"${filterNameId_filter_member_category}\"\r\n            label=\"Select Member Category\" outlined required>\r\n          </pdb-membership-select-member-type>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const dateField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Pick Date\r\n          <mwc-textfield type=\"date\" name=\"${filterNameId_filter_date}\" id=\"${filterNameId_filter_date}\"\r\n            value=\"${filterNameId_filter_dateVal}\" outlined required></mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const genderField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Gender\r\n          <mwc-select name=\"${filterNameId_filter_gender}\" id=\"${filterNameId_filter_gender}\" label=\"Select Gender\" outlined required>\r\n            ${this._genders.map((item) => {\r\n              // console.log({item});\r\n              if (filterNameId_filter_genderVal === null) {\r\n                return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n              } else {\r\n                if (Number(filterNameId_filter_genderVal) === item.id) {\r\n                  return html`<mwc-list-item value=\"${item.id}\" selected>${item.name}</mwc-list-item>`;\r\n                } else {\r\n                  return html`<mwc-list-item value=\"${item.id}\">${item.name}</mwc-list-item>`;\r\n                }\r\n              }\r\n            })}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const groupField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Meeting/ Event Group\r\n          <mwc-select name=\"${filterNameId_filter_group}\" id=\"${filterNameId_filter_group}\" label=\"Select Meeting/ Event Group\" outlined required>\r\n            ${this._scheduleGroups.map((item) => {\r\n              // console.log({item});\r\n              const groupId = item.groupId;\r\n              const groupName = until(this.getGroup(groupId), html`<span>Loading...</span>`);\r\n              if (filterNameId_filter_groupVal === null) {\r\n                return html`<mwc-list-item value=\"${groupId}\">${groupName}</mwc-list-item>`;\r\n              } else {\r\n                if (Number(filterNameId_filter_groupVal) === groupId) {\r\n                  return html`<mwc-list-item value=\"${groupId}\" selected>${groupName}</mwc-list-item>`;\r\n                } else {\r\n                  return html`<mwc-list-item value=\"${groupId}\">${groupName}</mwc-list-item>`;\r\n                }\r\n              }\r\n            })}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const subGroupField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Meeting/ Event Sub-Group\r\n          <mwc-select name=\"${filterNameId_filter_subgroup}\" id=\"${filterNameId_filter_subgroup}\" label=\"Select Meeting/ Event Sub-Group\" outlined required>\r\n            ${this._scheduleSubGroups.map((item) => {\r\n              // console.log({item});\r\n              const subGroupId = item.subGroupId;\r\n              const subGroupName = until(this.getSubGroup(subGroupId), html`<span>Loading...</span>`);\r\n              if (filterNameId_filter_subgroupVal === null) {\r\n                return html`<mwc-list-item value=\"${subGroupId}\">${subGroupName}</mwc-list-item>`;\r\n              } else {\r\n                if (Number(filterNameId_filter_subgroupVal) === subGroupId) {\r\n                  return html`<mwc-list-item value=\"${subGroupId}\" selected>${subGroupName}</mwc-list-item>`;\r\n                } else {\r\n                  return html`<mwc-list-item value=\"${subGroupId}\">${subGroupName}</mwc-list-item>`;\r\n                }\r\n              }\r\n            })}\r\n          </mwc-select>\r\n        </div>\r\n      </div>`;\r\n    \r\n    const identifyField = html`\r\n      <div class=\"col-xl-4 col-md-6\">\r\n        <div class=\"form-input-container !block\">Search By Member ID\r\n          <mwc-textfield name=\"${filterNameId_filter_identity}\" id=\"${filterNameId_filter_identity}\" label=\"Search By Member ID\"\r\n            value=\"${filterNameId_filter_identityVal === null ? \"\" : filterNameId_filter_identityVal}\" outlined required>\r\n          </mwc-textfield>\r\n        </div>\r\n      </div>`;\r\n      returnHtml = html`<form method=\"get\" class=\"form\" make-general-posts=\"submit_filter_form\" filter-section-context=\"container\" hidden>\r\n          <div class=\"container\">\r\n            <div class=\"row\">\r\n              ${memberCategoryField} ${nameField} ${genderField} ${ageField} ${identifyField} ${groupField} ${subGroupField} ${dateField}\r\n              <div class=\"col-xl-12 col-md-10\">\r\n                <div class=\"form-input-container mt-1\">\r\n                  <input type=\"hidden\" name=\"meeting-event-id\" value=\"${this.meetingEventIdEnc}\" />\r\n                  <mwc-button label=\"Clear\" @click=\"${this.filterBox.clear_filter}\"></mwc-button>\r\n                  <mwc-button label=\"Filter\" raised @click=\"${this.filterBox.submit}\"></mwc-button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>`\r\n    return returnHtml;\r\n  }\r\n\r\n  private get __tableHeaders(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member', },\r\n      { title: 'Clock In', },\r\n      { title: 'Clock Out', },\r\n    ];\r\n  }\r\n\r\n  private get __tableBody(): DataTables_ColumnSettings_I[][] {\r\n    return [];\r\n  }\r\n\r\n  private get __tableFoot(): DataTables_ColumnSettings_I[] {\r\n    return [\r\n      { title: 'Member', },\r\n      { title: 'Clock In', },\r\n      { title: 'Clock Out', },\r\n    ];\r\n  }\r\n\r\n  private get table(): TemplateResult {\r\n    const memberType = this._memberType;\r\n    let branchId = 0;\r\n    if (this._activeBranchId !== null) {\r\n      branchId = this._activeBranchId[0].id;\r\n    }\r\n    let URL = CONSTANTS.URLS.AKWAABA_API_BASE_URL + \"\" + this.datatablePathUrl + \"?branchId=\" + branchId\r\n      + \"&meetingEventId=\" + this.meetingEventId + \"&memberType=\" + memberType + \"&order__by=firstname&datatable_plugin\";\r\n\r\n    const _urlQueryString = this.urlQueryString;\r\n    // console.log({_urlQueryString});\r\n    URL = URL + _urlQueryString;\r\n    // console.log({URL});\r\n    \r\n    const __dataTable = this.__dataTable(URL);\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    return html`\r\n      ${this._pageButtonAccess? this.resetClockingList: nothing}\r\n      <form>\r\n        <div class=\"my-1 flex flex-col items-end\">\r\n          <div class=\"col-md-6 col-lg-4 flex flex-row-reverse my-1 items-end\">\r\n            <button type=\"submit\" class=\"btn btn-sm btn-outline-danger !mx-1\" multi-break-clocking=\"outTime\">Clock Out Selected</button>\r\n            <button type=\"submit\" class=\"btn btn-sm btn-outline-success !mx-1\" multi-break-clocking=\"inTime\">Clock In Selected</button>\r\n          </div>\r\n          <div class=\"col-md-6 col-lg-4 flex flex-row-reverse my-1 items-end\">\r\n            <button type=\"submit\" class=\"btn btn-sm btn-outline-danger !mx-1\" multi-break-clocking=\"endBreak\">End Break For Selected</button>\r\n            <button type=\"submit\" class=\"btn btn-sm btn-outline-success !mx-1\" multi-break-clocking=\"startBreak\">Start Break For Selected</button>\r\n          </div>\r\n        </div>\r\n        <datatables-new .datatable=\"${__dataTable}\" .ajaxHeader=\"${ajaxHeader}\" .dt_body=\"${this.__tableBody}\"\r\n          .dt_foot=\"${this.__tableFoot}\" .dt_head=\"${this.__tableHeaders}\"></datatables-new>\r\n      </form>\r\n    `;\r\n  }\r\n\r\n  private renderMemberInfo(data: any, type: any, clockingInfo: MemberClockingInfo_I) {\r\n    // console.log({clockingInfo});\r\n    const _clockingInfo = MemberClockingInfo_S(clockingInfo);\r\n    const TODAY = new Date();\r\n    this.meetingEventForToday = _clockingInfo.date.toDateString() === TODAY.toDateString();\r\n    // @ts-ignore\r\n    return `<clocker-table-parts-first data=\"${data}\" type=\"${type}\" clocking_info='${JSON.stringify(_clockingInfo).replaceAll(\"'\", \"&rsquo;\")}' ></clocker-table-parts-first>`;\r\n  }\r\n\r\n  private renderClockInInfo(data: any, type: any, clockingInfo: MemberClockingInfo_I) {\r\n    // console.log({clockingInfo});\r\n      console.log({\"--this._pageButtonAccess--\": this._pageButtonAccess});\r\n      if (this._pageButtonAccess) {\r\n        // @ts-ignore\r\n        return `<clocker-table-parts-second clocking data=\"${data}\" type=\"${type}\" clocking_info='${JSON.stringify(clockingInfo).replaceAll(\"'\", \"&rsquo;\")}'\r\n          ?clockingtime=\"${this.clockingTime}\" pageButtonAccess clockingTimeValue=\"${this.clockingTimeValue}\" >\r\n        </clocker-table-parts-second>`;\r\n      } else {\r\n        // @ts-ignore\r\n        return `<clocker-table-parts-second clocking data=\"${data}\" type=\"${type}\" clocking_info='${JSON.stringify(clockingInfo).replaceAll(\"'\", \"&rsquo;\")}'\r\n          ?clockingtime=\"${this.clockingTime}\" clockingTimeValue=\"${this.clockingTimeValue}\" >\r\n        </clocker-table-parts-second>`;\r\n      }\r\n  }\r\n\r\n  private renderClockOutInfo(data: any, type: any, clockingInfo: MemberClockingInfo_I) {\r\n    // console.log({clockingInfo});\r\n    if (this._pageButtonAccess) {\r\n      // @ts-ignore\r\n      return `<clocker-table-parts-third clocking data=\"${data}\" type=\"${type}\" clocking_info='${JSON.stringify(clockingInfo).replaceAll(\"'\", \"&rsquo;\")}'\r\n        ?clockingtime=\"${this.clockingTime}\" pageButtonAccess clockingTimeValue=\"${this.clockingTimeValue}\" >\r\n      </clocker-table-parts-third>`;\r\n    } else {\r\n      // @ts-ignore\r\n      return `<clocker-table-parts-third clocking data=\"${data}\" type=\"${type}\" clocking_info='${JSON.stringify(clockingInfo).replaceAll(\"'\", \"&rsquo;\")}'\r\n        ?clockingtime=\"${this.clockingTime}\" clockingTimeValue=\"${this.clockingTimeValue}\" >\r\n      </clocker-table-parts-third>`;\r\n    }\r\n  }\r\n\r\n  private multiBreakClocking() {\r\n    const selectorString = 'multi-break-clocking';\r\n    document.querySelectorAll('[' + selectorString + ']').forEach(break_clocking => {\r\n      break_clocking.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        this.multiBreakClockingSubmit(break_clocking, selectorString, e);\r\n      });\r\n    });\r\n  }\r\n\r\n  async multiBreakClockingSubmit(element: Element, selectorString: string, e: any) {\r\n    e.preventDefault();\r\n    // @ts-ignore \r\n    const break_clockingTYPE: BreakClockingTYPE = element.getAttribute(selectorString);\r\n    // console.log({ e, element, break_clockingTYPE });\r\n    const IN = document.querySelectorAll('input[type=\"checkbox\"][multi-break-check-in]');\r\n    const OUT = document.querySelectorAll('input[type=\"checkbox\"][multi-break-check-out]');\r\n\r\n    let checkedIn: Array<number> = [],\r\n      checkedOut: Array<number> = [];\r\n    IN.forEach((checkbox: HTMLInputElement) => {\r\n      // console.log({\"IN - checkbox\": checkbox});\r\n      if (checkbox.checked) {\r\n        const memberId = Number(checkbox.getAttribute(\"multi-break-check-in\"));\r\n        if (!checkedIn.includes(memberId)) {\r\n          checkedIn.push(memberId)\r\n        }\r\n      }\r\n    });\r\n    OUT.forEach((checkbox: HTMLInputElement) => {\r\n      // console.log({\"OUT - checkbox\": checkbox});\r\n      if (checkbox.checked) {\r\n        const memberId = Number(checkbox.getAttribute(\"multi-break-check-out\"));\r\n        if (!checkedOut.includes(memberId)) {\r\n          checkedOut.push(memberId)\r\n        }\r\n      }\r\n    });\r\n    if (break_clockingTYPE === \"inTime\" || break_clockingTYPE === \"startBreak\") {\r\n      // console.log({ break_clockingTYPE, \"checkedIn\": checkedIn });      \r\n      let action: string = \"Initiate\";\r\n      if (break_clockingTYPE === \"inTime\") {\r\n        action = \"Clock In\";\r\n      }\r\n      if (break_clockingTYPE === \"startBreak\") {\r\n        action = \"Start Break\";\r\n      }\r\n      await PATCH_AttendanceMultipleClockingBreak(\r\n        this.meetingEventId, action, break_clockingTYPE, checkedIn, this._clockingTypes\r\n      );\r\n    } else if (break_clockingTYPE === \"outTime\" || break_clockingTYPE === \"endBreak\") {\r\n      // console.log({break_clockingTYPE, \"checkedOut\": checkedOut});        \r\n      let action: string = \"Initiate\";\r\n      if (break_clockingTYPE === \"outTime\") {\r\n        action = \"Clock Out\";\r\n      }\r\n      if (break_clockingTYPE === \"endBreak\") {\r\n        action = \"End Break\";\r\n      }\r\n      await PATCH_AttendanceMultipleClockingBreak(\r\n        this.meetingEventId, action, break_clockingTYPE, checkedOut, this._clockingTypes\r\n      );\r\n    }\r\n  }\r\n\r\n  async UpdateClockingList(e: any) {\r\n    e.preventDefault();\r\n\r\n    let today_date = new Date(),\r\n      year = today_date.toLocaleString('default', { year: \"numeric\" }),\r\n      month = today_date.toLocaleString('default', { month: \"2-digit\" }),\r\n      day = today_date.toLocaleString('default', { day: \"2-digit\" }),\r\n      filter_date = year + \"-\" + month + \"-\" + day;\r\n    \r\n    const _urlQueryParams = urlQueryParams(),\r\n      filterNameId_filter_date = \"filter_date\";\r\n    \r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if (key === filterNameId_filter_date) {\r\n        // console.log({value, });\r\n        \r\n        filter_date = value;\r\n      }\r\n    } \r\n    // console.log({ \"filter_date\": filter_date });\r\n    \r\n    await POST_AttendanceClockingUpdateClockingList(this.meetingEventId, filter_date);\r\n  }\r\n\r\n  private get urlQueryString() {\r\n    const _urlQueryParams = urlQueryParams(),\r\n    filterNameId_filter_date = \"filter_date\",\r\n    filterNameId_filter_gender = \"filter_gender\",\r\n    filterNameId_filter_name = \"filter_name\",\r\n    filterNameId_filter_identity = \"filter_identity\",\r\n    filterNameId_filter_member_category = \"filter_member_category\",\r\n    filterNameId_filter_group = \"filter_group\",\r\n    filterNameId_filter_subgroup = \"filter_subgroup\",\r\n    filterNameId_filter_from_age = \"filter_from_age\",\r\n    filterNameId_filter_to_age = \"filter_to_age\";\r\n\r\n    let newObject:any = {};\r\n\r\n    for (const key in _urlQueryParams) {\r\n      let value = String(_urlQueryParams[key]);\r\n      if ((key === filterNameId_filter_date) || (key === filterNameId_filter_gender) || (key === filterNameId_filter_name)\r\n        || (key === filterNameId_filter_identity) || (key === filterNameId_filter_member_category)\r\n        || (key === filterNameId_filter_group) || (key === filterNameId_filter_subgroup)\r\n        || (key === filterNameId_filter_from_age) || (key === filterNameId_filter_to_age)) {\r\n        // console.log({value, });\r\n        \r\n        newObject[key] = value;\r\n      }\r\n    } \r\n\r\n    let _urlQueryParamsJoin = urlQueryParamsJoin(newObject);\r\n\r\n    return (_urlQueryParamsJoin.length === 0)\r\n      ? _urlQueryParamsJoin : \"&\" + _urlQueryParamsJoin;\r\n  }\r\n\r\n  private async getGenders() {\r\n    const _networkResponse = await GET_GenericGender<GenericGenderInfo_I>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let __genders: GenericGenderInfo_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __genders.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GenericGenderInfo_I[] = data.map(value => {\r\n          return GenericGenderInfo_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        __genders = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GenericGenderInfo_I> = [];\r\n    new_data.push(...this._genders, ...__genders);\r\n    this._genders = new_data;\r\n  }\r\n\r\n  private async getClockingType() {\r\n    const _networkResponse = await GET_GenericMeetingEventClockingType<GenericMeetingEventClockingTypeInfo_I>();\r\n    // console.log({_networkResponse});\r\n    \r\n    let ___clockingTypes: GenericGenderInfo_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      ___clockingTypes.push({ id: 0, name: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const data: any[] = _networkResponse.response.data;\r\n\r\n        const DATA: GenericMeetingEventClockingTypeInfo_I[] = data.map(value => {\r\n          return GenericMeetingEventClockingTypeInfo_S(value)\r\n        });\r\n        // console.log({DATA});\r\n        ___clockingTypes = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GenericMeetingEventClockingTypeInfo_I> = [];\r\n    new_data.push(...this._clockingTypes, ...___clockingTypes);\r\n    this._clockingTypes = new_data;\r\n  }\r\n\r\n  private async getAttendanceScheduleGroup() {\r\n    if (this.meetingEventId === 0) return;\r\n    const _networkResponse = await GET_AttendanceScheduleGroup<MeetingEventScheduleGroup_I>(\r\n      null, \"?meetingEventId=\" + this.meetingEventId\r\n    );\r\n    // console.log({ _networkResponse });\r\n    if (_networkResponse !== null) {\r\n      const _scheduleGroups = _networkResponse.paginResponse;\r\n      if (_scheduleGroups.results.length > 0) {\r\n        this._scheduleGroups = _scheduleGroups.results;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async getGroup(ID: number) {\r\n    const _networkResponse = await GET_MemberGroupingsGroups<GroupingsGroup_I>(ID);\r\n    if (_networkResponse === null) {\r\n      return \"???\";\r\n    } else {\r\n      if (_networkResponse.response.success && 'group' in _networkResponse.response.data) {\r\n        \r\n        const group: GroupingsGroup_I = GroupingsGroup_S(_networkResponse.response.data);\r\n        return group.group;\r\n      } else {\r\n        return _networkResponse.response.message;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async getAttendanceScheduleSubGroup() {\r\n    if (this.meetingEventId === 0) return;\r\n    const _networkResponse = await GET_AttendanceScheduleSubGroup<MeetingEventScheduleSubGroup_I>(\r\n      null, \"?meetingEventId=\" + this.meetingEventId\r\n    );\r\n    // console.log({ _networkResponse });\r\n    if (_networkResponse !== null) {\r\n      const _scheduleSubGroups = _networkResponse.paginResponse;\r\n      if (_scheduleSubGroups.results.length > 0) {\r\n        this._scheduleSubGroups = _scheduleSubGroups.results;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async getSubGroup(ID: number) {\r\n    // console.log({subgroup_ID: ID})\r\n    const _networkResponse = await GET_MemberGroupingsSubGroups<GroupingsSubGroup_I>(ID);\r\n    if (_networkResponse === null) {\r\n      return \"???\";\r\n    } else {\r\n      if (_networkResponse.response.success && 'subgroup' in _networkResponse.response.data) {\r\n        \r\n        const subgroup: GroupingsSubGroup_I = GroupingsSubGroup_S(_networkResponse.response.data);\r\n        // console.log({subgroup})\r\n        return subgroup.subgroup;\r\n      } else {\r\n        return _networkResponse.response.message;\r\n      }\r\n    }\r\n  }\r\n  \r\n  private async getClientMemberCategories() {\r\n    const _networkResponse = await GET_MemberGroupingsMemberCategories<GroupingsMemberCategories_I>();\r\n    let __memberCategories: GroupingsMemberCategories_I[] = [];\r\n\r\n    if (_networkResponse === null) {\r\n      __memberCategories.push({ id: 0, category: \"**NOT FOUND**\" });\r\n    } else {\r\n      if ((_networkResponse.response.success === true) && ('length' in _networkResponse.response.data)) {\r\n        const DATA: GroupingsMemberCategories_I[] = _networkResponse.response.data;\r\n        // console.log({DATA});\r\n        __memberCategories = DATA;\r\n      }\r\n    }\r\n    const new_data: Array<GroupingsMemberCategories_I> = [];\r\n    new_data.push(...this._memberCategories, ...__memberCategories);\r\n    this._memberCategories = new_data;\r\n  }\r\n\r\n  private __dataTable(url: string): DataTables_Settings_I {\r\n    const __this = this;\r\n\r\n    // console.log({ \"projects\": this._questionnaireResponses });\r\n    \r\n    let dataTable: DataTables_Settings_I = {\r\n      'order': [[0, 'desc']],\r\n      'processing': true,\r\n      'serverSide': true,\r\n      'ajax': {\r\n        url: url,\r\n        dataSrc: 'data',\r\n        apiType: \"akwaabaApp\",\r\n      },\r\n      \"columns\": [\r\n        {\r\n          data: 'id',\r\n          render: (data: any, type: any, clockingInfo: MemberClockingInfo_I) => __this.renderMemberInfo(data, type, clockingInfo),\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'inTime',\r\n          render: (data: any, type: any, clockingInfo: MemberClockingInfo_I) => __this.renderClockInInfo(data, type, clockingInfo),\r\n          orderable: true\r\n        },\r\n        {\r\n          data: 'outTime',\r\n          render: (data: any, type: any, clockingInfo: MemberClockingInfo_I) => __this.renderClockOutInfo(data, type, clockingInfo),\r\n          orderable: true\r\n        },\r\n\r\n      ],\r\n      'columnDefs': [\r\n        {\r\n          targets: ['_all'],\r\n          className: 'mdc-data-table__cell',\r\n          // @ts-ignore\r\n          checkboxes: {\r\n            selectRow: true\r\n          },\r\n        }\r\n      ],\r\n      'lengthMenu': [10, 25, 50, 100, 500, 1000],\r\n      \"drawCallback\": async function (e) {\r\n        const aoData = e.aoData;\r\n        // console.log({ aoData })\r\n        __this.multiBreakClocking();\r\n      },\r\n      \"responsive\": false,\r\n      \"dom\": 'Blfrtip',\r\n      buttons: [\r\n        'selected',\r\n        'selectedSingle',\r\n        'selectAll',\r\n        'selectNone',\r\n        'selectRows',\r\n        'selectColumns',\r\n        'selectCells',\r\n        'pdf',\r\n        'excel',\r\n        'copy',\r\n        'csv',\r\n      ],\r\n      select: true,\r\n      // \"select\": {\r\n      //   \"style\": \"multi\"\r\n      // },\r\n    };\r\n    return dataTable;\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","PATCH_AttendanceMultipleClockingBreak","meetingEventId","action","clockingType","clockingIds","clockingTypes","_get_cookie","getUserLoginInfoCookie","clockingTypeId","forEach","cT","name","id","url","CONSTANTS","URLS","AKWAABA_API_BASE_URL","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","method","body","JSON","stringify","headers","Authorization","token","then","HTTP","networkCallRes","NetWorkCallResponses","_RESPONSE","response","unknownError","length","errors","e","err","errormsg","error","push","res","https_swal_error_format","catch","String","allowOutsideClick","result","isConfirmed","successMsg","_VALUE","value","Object","VALUE","message","setTimeout","window","location","reload","POST_AttendanceClockingUpdateClockingList","date","PdbAttendanceClockingClocker","LitElement","constructor","super","meetingEventIdEnc","datatablePathUrl","_genders","_clockingTypes","_memberCategories","_scheduleGroups","_scheduleSubGroups","_activeBranchId","_memberType","clockingTimeValue","clockingTime","meetingEventForToday","__members","_hasSetup","_pageButtonAccess","_members","this","requestUpdate","connectedCallback","AppSetup","getMeetingEventId","activeBranchId","getActiveBranchIdCookie","filterBox","FilterFieldBox","selectors","container","filterSectionContextContainer","form","filterSectionContextForm","filterSectionContextBtn","getGenders","getClockingType","getClientMemberCategories","getAttendanceScheduleGroup","getAttendanceScheduleSubGroup","disconnectedCallback","render","getAppSettingsExtraSettings","expiration_date","expired","html","PageButtonUserAccess","PAGE__IDS","clocking","AppSettingsExtraUserAccess","pageId","viewType","Number","isNaN","toggleFilterFields","filterForm","clockingTimeField","table","setClockingTimeBtn","nothing","resetClockingList","UpdateClockingList","document","querySelectorAll","input","clockingTimeSwitchAction","_this","_switch","addEventListener","evt","isSelected","firstUpdated","unmutableInputNames","setInterval","setClockingTimeInfo","urlQueryParamsGet","_meetingEventId","base64Decode","base64Encode","returnHtml","_urlQueryParams","urlQueryParams","filterNameId_filter_date","filterNameId_filter_gender","filterNameId_filter_name","filterNameId_filter_identity","filterNameId_filter_member_category","filterNameId_filter_group","filterNameId_filter_subgroup","filterNameId_filter_from_age","filterNameId_filter_to_age","filterNameId_filter_dateVal","filterNameId_filter_genderVal","filterNameId_filter_nameVal","filterNameId_filter_identityVal","filterNameId_filter_member_categoryVal","filterNameId_filter_groupVal","filterNameId_filter_subgroupVal","filterNameId_filter_from_ageVal","filterNameId_filter_to_ageVal","key","_DATE","Date","toLocaleDateString","day","month","year","formatMatcher","split","join","nameField","ageField","memberCategoryField","dateField","genderField","map","item","groupField","groupId","groupName","until","getGroup","subGroupField","subGroupId","subGroupName","getSubGroup","identifyField","clear_filter","submit","__tableHeaders","__tableBody","__tableFoot","memberType","branchId","URL","urlQueryString","__dataTable","ajaxHeader","renderMemberInfo","data","type","clockingInfo","_clockingInfo","MemberClockingInfo_S","TODAY","toDateString","replaceAll","renderClockInInfo","console","log","renderClockOutInfo","multiBreakClocking","selectorString","break_clocking","preventDefault","multiBreakClockingSubmit","element","break_clockingTYPE","getAttribute","IN","OUT","checkedIn","checkedOut","checkbox","checked","memberId","includes","today_date","filter_date","toLocaleString","newObject","_urlQueryParamsJoin","urlQueryParamsJoin","_networkResponse","GET_GenericGender","__genders","success","GenericGenderInfo_S","new_data","GET_GenericMeetingEventClockingType","___clockingTypes","GenericMeetingEventClockingTypeInfo_S","GET_AttendanceScheduleGroup","paginResponse","results","ID","GET_MemberGroupingsGroups","GroupingsGroup_S","group","GET_AttendanceScheduleSubGroup","GET_MemberGroupingsSubGroups","GroupingsSubGroup_S","subgroup","GET_MemberGroupingsMemberCategories","__memberCategories","category","__this","dataSrc","apiType","orderable","targets","className","checkboxes","selectRow","aoData","buttons","select","createRenderRoot","styles","css","query","Button","Element","HTMLFormElement","property","Array","Boolean","customElement"],"sourceRoot":""}