{"version":3,"file":"../../production_public/assets/v2/dev-files/css/src_assets_styles_views_admin_register_main_scss.css","mappings":"AAAA;EACI;EACA;ACCJ;;ADGA;AENA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ADOJ;;ADXA;AAGA;AGbA;AAAgE;EAAiB;EAAuB;AF6BxG;;AE7B8H;EAAe;AFiC7I;;AEjC6J;EAAK;EAA8B;EAA6B;EAAiM;EAAgB;EAAgB;EAAc;AF2C5c;;AE3Cud;EAAK;EAAoB;AFgDhf;;AEhDyf;EAAG;EAAqB;EAAc;AFsD/hB;;AEtDwiB;EAAoB;EAAyC;AF2DrmB;;AE3DsoB;EAAkB;EAAkB;AFgE1qB;;AEhE8rB;EAAE;EAAc;AFqE9sB;;AErEsuB;EAAS;AFyE/uB;;AEzEkwB;EAAkB;EAAoG;AF8Ex3B;;AE9Es4B;EAAM;AFkF54B;;AElF05B;EAAQ;EAAc;EAAc;EAAkB;AFyFh9B;;AEzFw+B;EAAI;AF6F5+B;;AE7F0/B;EAAI;AFiG9/B;;AEjGwgC;EAAM;EAAyB;EAAqB;AFuG5jC;;AEvG0kC;EAAsC;EAAc;EAAoB;EAAe;EAAoB;EAAoB;EAAS;AFiHltC;;AEjH4tC;EAAc;AFqH1uC;;AErH8vC;EAAgD;EAA0B;EAA6B;AF2Hr2C;;AE3H23C;EAAgB;AF+H34C;;AE/Hw5C;EAAiB;AFmIz6C;;AEnIy7C;EAAS;AFuIl8C;;AEvI09C;EAAwD;AF2IlhD;;AE3I8hD;EAAc;EAA6B;AFgJzkD;;AEhJ6lD;EAA4B;AFoJznD;;AEpJipD;EAA6B;EAA0B;AFyJxsD;;AEzJqtD;EAAQ;AF6J7tD;;AE7J+uD;EAAmD;AFiKlyD;;AEjK2yD;EAAS;AFqKpzD;;AErK6zD;EAAgB;AFyK70D;;AEzKu1D;EAAW;EAAgB;EAAS;AF+K33D;;AE/Kq4D;EAAS;AFmL94D;;AEnL85D;EAAmD;EAAc;AFwL/9D;;AExLy+D;EAAyC;EAAc;AF6LhiE;;AE7L0iE;EAAqB;AFiM/jE;;AEjM8kE;EAAU;AFqMxlE;;AErMumE;EAA+C;EAAc;AF0MpqE;;AE1M0rE;EAAU;EAAY;AF+MhtE;;AE/M+tE;EAAS;AFmNxuE;;AEnNqvE;EAAiB;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AFkQjpG;;AElQuqG;EAAW;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AFiT7jI;;AEjTmlI;EAAW;AFqT9lI;;AErTymI;EAAyB;IAAW;EF0T3oI;AACF;AE3T8pI;EAAyB;IAAW;EF+ThsI;AACF;AEhUmtI;EAA0B;IAAW;EFoUtvI;AACF;AErU0wI;EAA0B;IAAW;EFyU7yI;AACF;AE1Ui0I;EAA0B;IAAW;EF8Up2I;AACF;AE/Uw3I;EAA0B;IAAW;EFmV35I;AACF;AEpV+6I;EAAS;AFuVx7I;;AEvV28I;EAAW;AF2Vt9I;;AE3Vw+I;EAAQ;AF+Vh/I;;AE/VggJ;EAAO;AFmWvgJ;;AEnWshJ;EAAU;AFuWhiJ;;AEvWkjJ;EAAU;AF2W5jJ;;AE3W8kJ;EAAS;EAAS;EAAO;EAAQ;AFkX/mJ;;AElXqnJ;EAAQ;AFsX7nJ;;AEtXwoJ;EAAQ;AF0XhpJ;;AE1XupJ;EAAS;AF8XhqJ;;AE9XwqJ;EAAS;AFkYjrJ;;AElY4rJ;EAAW;AFsYvsJ;;AEtYmtJ;EAAO;AF0Y1tJ;;AE1YguJ;EAAO;AF8YvuJ;;AE9YgvJ;EAAS;AFkZzvJ;;AElZmwJ;EAAQ;AFsZ3wJ;;AEtZoxJ;EAAQ;AF0Z5xJ;;AE1ZqyJ;EAAU;AF8Z/yJ;;AE9Z4zJ;EAAS;AFkar0J;;AElam1J;EAAU;AFsa71J;;AEta42J;EAAgB;AF0a53J;;AE1au4J;EAAM;AF8a74J;;AE9aw5J;EAAM;AFkb95J;;AElby6J;EAAM;AFsb/6J;;AEtb07J;EAAK;AF0b/7J;;AE1by8J;EAAK;AF8b98J;;AE9b49J;EAAK;AFkcj+J;;AElc0+J;EAAO;EAAmB;AFucpgK;;AEvcohK;EAAS;EAAiB;AF4c9iK;;AE5cgkK;EAAO;EAAiB;AFidxlK;;AEjd0mK;EAAM;EAAoB;AFsdpoK;;AEtdqpK;EAAM;EAAgB;AF2d3qK;;AE3dwrK;EAAM;EAAqB;AFgentK;;AEhequK;EAAM;EAAiB;AFqe5vK;;AEre8wK;EAAM;EAAmB;AF0evyK;;AE1euzK;EAAM;EAAkB;AF+e/0K;;AE/ek2K;EAAM;EAAmB;AFof33K;;AEpf+4K;EAAQ;EAA6B;AFyfp7K;;AEzfk9K;EAAQ;EAA+B;AF8fz/K;;AE9fqhL;EAAO;AFkgB5hL;;AElgB+iL;EAAO;AFsgBtjL;;AEtgBskL;EAAO;AF0gB7kL;;AE1gBgmL;EAAM;AF8gBtmL;;AE9gBynL;EAAM;AFkhB/nL;;AElhBipL;EAAM;AFshBvpL;;AEthB2qL;EAAM;AF0hBjrL;;AE1hBmsL;EAAM;AF8hBzsL;;AE9hBytL;EAAM;AFkiB/tL;;AEliBkvL;EAAM;AFsiBxvL;;AEtiB0wL;EAAM;AF0iBhxL;;AE1iBiyL;EAAM;AF8iBvyL;;AE9iB4zL;EAAM;AFkjBl0L;;AEljBs1L;EAAM;AFsjB51L;;AEtjB+2L;EAAM;AF0jBr3L;;AE1jBk4L;EAAM;AF8jBx4L;;AE9jB05L;EAAM;AFkkBh6L;;AElkBk7L;EAAM;AFskBx7L;;AEtkBs8L;EAAM;AF0kB58L;;AE1kB29L;EAAM;AF8kBj+L;;AE9kBo/L;EAAO;AFklB3/L;;AEllB6gM;EAAO;AFslBphM;;AEtlBuiM;EAAO;AF0lB9iM;;AE1lBikM;EAAM;AF8lBvkM;;AE9lBwlM;EAAO;AFkmB/lM;;AElmBinM;EAAM;AFsmBvnM;;AEtmB4oM;EAAO;AF0mBnpM;;AE1mBiqM;EAAS;AF8mB1qM;;AE9mBksM;EAAc;AFknBhtM;;AElnBquM;EAAM;AFsnB3uM;;AEtnBwvM;EAAQ;AF0nBhwM;;AE1nBuxM;EAAa;AF8nBpyM;;AE9nBwzM;EAAO;AFkoB/zM;;AEloB60M;EAAY;AFsoBz1M;;AEtoB42M;EAAoB;AF0oBh4M;;AE1oB25M;EAAiB;AF8oB56M;;AE9oBo8M;EAAW;AFkpB/8M;;AElpBi+M;EAAM;AFspBv+M;;AEtpBo/M;EAAU;AF0pB9/M;;AE1pB+gN;EAAQ;AF8pBvhN;;AE9pBoiN;EAAM;AFkqB1iN;;AElqBujN;EAAQ;AFsqB/jN;;AEtqB2kN;EAAK;AF0qBhlN;;AE1qB4lN;EAAM;AF8qBlmN;;AE9qB8mN;EAAM;AFkrBpnN;;AElrBgoN;EAAM;AFsrBtoN;;AEtrBmpN;EAAM;AF0rBzpN;;AE1rBsqN;EAAK;AF8rB3qN;;AE9rByrN;EAAM;AFksB/rN;;AElsB4sN;EAAM;AFssBltN;;AEtsB+tN;EAAM;AF0sBruN;;AE1sBivN;EAAM;AF8sBvvN;;AE9sBqwN;EAAM;AFktB3wN;;AEltB0xN;EAAK;AFstB/xN;;AEttB4yN;EAAO;EAAwB;AF2tB30N;;AE3tB81N;EAAM;AF+tBp2N;;AE/tBg3N;EAAK;AFmuBr3N;;AEnuBi4N;EAAa;AFuuB94N;;AEvuB25N;EAAU;AF2uBr6N;;AE3uBs7N;EAAQ;AF+uB97N;;AE/uBy8N;EAAK;AFmvB98N;;AEnvBy9N;EAAM;AFuvB/9N;;AEvvB0+N;EAAM;AF2vBh/N;;AE3vB2/N;EAAO;EAAuB;AFgwBzhO;;AEhwB2iO;EAAK;AFowBhjO;;AEpwB6jO;EAAK;AFwwBlkO;;AExwB+kO;EAAK;AF4wBplO;;AE5wBgmO;EAAQ;AFgxBxmO;;AEhxBmnO;EAAM;AFoxBznO;;AEpxBqoO;EAAM;AFwxB3oO;;AExxBupO;EAAM;AF4xB7pO;;AE5xBwqO;EAAM;AFgyB9qO;;AEhyB0rO;EAAM;AFoyBhsO;;AEpyB4sO;EAAM;AFwyBltO;;AExyB8tO;EAAmB;EAAuB;AF6yBxwO;;AE7yB0xO;EAAa;AFizBvyO;;AEjzBmzO;EAAQ;AFqzB3zO;;AErzBg1O;EAAQ;AFyzBx1O;;AEzzBy2O;EAAM;AF6zB/2O;;AE7zB03O;EAAK;AFi0B/3O;;AEj0B04O;EAAM;AFq0Bh5O;;AEr0B25O;EAAa;AFy0Bx6O;;AEz0Bo7O;EAAc;AF60Bl8O;;AE70B29O;EAAQ;AFi1Bn+O;;AEj1B++O;EAAa;AFq1B5/O;;AEr1B0gP;EAAW;AFy1BrhP;;AEz1BiiP;EAAW;AF61B5iP;;AE71B8jP;EAAsB;AFi2BplP;;AEj2BkxP;EAAQ;AFq2B1xP;;AEr2BsyP;EAAW;AFy2BjzP;;AEz2Bs0P;EAAiB;EAAwB;EAAqB;AF+2Bp4P;;AE/2Bo5P;EAAe;AFm3Bn6P;;AEn3Bs7P;EAAa;AFu3Bn8P;;AEv3Bi/P;EAAU;AF23B3/P;;AE33B8gQ;EAAkB;AF+3BhiQ;;AE/3B2jQ;EAAU;AFm4BrkQ;;AEn4B2lQ;EAAW;AFu4BtmQ;;AEv4BqnQ;EAAa;AF24BloQ;;AE34BmpQ;EAAgB;AF+4BnqQ;;AE/4BwrQ;EAAiB;AFm5BzsQ;;AEn5BquQ;EAAgB;AFu5BrvQ;;AEv5BgxQ;EAAa;AF25B7xQ;;AE35BozQ;EAAW;AF+5B/zQ;;AE/5Bo1Q;EAAc;AFm6Bl2Q;;AEn6Bq3Q;EAAe;AFu6Bp4Q;;AEv6Bw5Q;EAAe;AF26Bv6Q;;AE36Bk8Q;EAAa;AF+6B/8Q;;AE/6Bw+Q;EAAgB;AFm7Bx/Q;;AEn7B+gR;EAAiB;AFu7BhiR;;AEv7B8jR;EAAmB;AF27BjlR;;AE37BynR;EAAgB;AF+7BzoR;;AE/7BsqR;EAAQ;AFm8B9qR;;AEn8BurR;EAAO;AFu8B9rR;;AEv8BusR;EAAO;AF28B9sR;;AE38BytR;EAAO;AF+8BhuR;;AE/8B0uR;EAAyC;EAAuB;EAAqD;AFq9B/1R;;AEr9Bu5R;EAAwC;EAAwB;EAAyD;AF29BhhS;;AE39B4kS;EAA+C;EAAsB;AFg+BjpS;;AEh+BwsS;EAAiB;AFo+BztS;;AEp+ByuS;EAAiB;AFw+B1vS;;AEx+B0wS;EAAmB;AF4+B7xS;;AE5+B+yS;EAAmB;AFg/Bl0S;;AEh/Bo1S;EAAmB;AFo/Bv2S;;AEp/By3S;EAAU;EAAgB;EAAuB;AF0/B16S;;AE1/B67S;EAAmB;AF8/Bh9S;;AE9/Bm+S;EAAmB;AFkgCt/S;;AElgCygT;EAAqB;AFsgC9hT;;AEtgCmjT;EAAqB;AF0gCxkT;;AE1gC6lT;EAAY;AF8gCzmT;;AE9gC+nT;EAAS;AFkhCxoT;;AElhC6pT;EAAY;AFshCzqT;;AEthC6rT;EAAc;AF0hC3sT;;AE1hCguT;EAAc;AF8hC9uT;;AE9hC8vT;EAAa;AFkiC3wT;;AEliC8xT;EAAY;AFsiC1yT;;AEtiC+zT;EAAa;AF0iC50T;;AE1iCi2T;EAAY;AF8iC72T;;AE9iCm4T;EAAgB;EAA6B;AFmjCh7T;;AEnjC08T;EAAc;EAAkC;AFwjC1/T;;AExjC6hU;EAAU;AF4jCviU;;AE5jCwjU;EAAQ;AFgkChkU;;AEhkCilU;EAAU;AFokC3lU;;AEpkC0mU;EAAY;AFwkCtnU;;AExkC2oU;EAAwB;AF4kCnqU;;AE5kC2rU;EAAY;AFglCvsU;;AEhlC4tU;EAAU;AFolCtuU;;AEplC8vU;EAAU;AFwlCxwU;;AExlC6xU;EAAY;AF4lCzyU;;AE5lCg0U;EAAY;AFgmC50U;;AEhmCk2U;EAAc;AFomCh3U;;AEpmCm4U;EAAa;AFwmCh5U;;AExmCk6U;EAAiB;EAAsB;AF6mCz8U;;AE7mCggV;EAAmB;EAAsB;AFknCziV;;AElnC8lV;EAA6B;EAAsB;AFunCjpV;;AEvnCusV;EAAiB;EAAsB;AF4nC9uV;;AE5nCqyV;EAAiB;EAAsB;AFioC50V;;AEjoCm4V;EAAgB;EAAsB;AFsoCz6V;;AEtoC89V;EAAoB;AF0oCl/V;;AE1oC2gW;EAA4B;EAAsB;AF+oC7jW;;AE/oCinW;EAAmB;EAAsB;AFopC1pW;;AEppCutW;EAAkB;EAAsB;AFypC/vW;;AEzpC6zW;EAAU;EAAkB;AF8pCz1W;;AE9pCg5W;EAAc;EAAkB;AFmqCh7W;;AEnqCq+W;EAAc;EAAkB;AFwqCrgX;;AExqC0jX;EAAY;EAAkB;AF6qCxlX;;AE7qC+oX;EAAa;EAAkB;AFkrC9qX;;AElrCquX;EAAa;EAAkB;AFurCpwX;;AEvrC2zX;EAAgB;AF2rC30X;;AE3rCw2X;EAAc;EAAkB;AFgsCx4X;;AEhsC47X;EAAa;EAAkB;AFqsC39X;;AErsC+gY;EAAa;EAAkB;AF0sC9iY;;AE1sCqmY;EAAmB;AF8sCxnY;;AE9sCgsY;EAAkB;AFktCltY;;AEltCsxY;EAAmB;AFstCzyY;;AEttCo3Y;EAA6B;EAA2B;EAAoC;AF4tCh9Y;;AE5tCkhZ;EAAc;EAA2B;EAAqC;AFkuChmZ;;AEluCkqZ;EAA2B;EAA2B;EAAoC;AFwuC5vZ;;AExuC8zZ;EAAW;EAAmC;AF6uC52Z;;AE7uCm7Z;EAAc;EAAqC;AFkvCt+Z;;AElvCgja;EAAwB;AFsvCxka;;AEtvCima;EAAY;AF0vC7ma;;AE1vCqoa;EAAc;AF8vCnpa;;AE9vCqqa;EAAgB;EAAsB;AFmwC3sa;;AEnwC8ta;EAAc;EAAoB;AFwwChwa;;AExwCixa;EAAe;EAA0B;AF6wC1za;;AE7wCi1a;EAAK;AFixCt1a;;AEjxCo2a;EAAK;AFqxCz2a;;AErxCm3a;EAAK;AFyxCx3a;;AEzxCu4a;EAAK;AF6xC54a;;AE7xC25a;EAAK;AFiyCh6a;;AEjyC66a;EAAK;AFqyCl7a;;AEryCi8a;EAAQ;AFyyCz8a;;AEzyCy9a;EAAM;EAAoB;AF8yCn/a;;AE9yCwgb;EAAO;EAAoB;AFmzCnib;;AEnzCojb;EAAM;EAAqB;AFwzC/kb;;AExzCqmb;EAAM;EAAsB;AF6zCjob;;AE7zCopb;EAAQ;EAAgC;AFk0C5rb;;AEl0Cytb;EAAQ;EAAyB;AFu0C1vb;;AEv0Coxb;EAAM;EAAqB;AF40C/yb;;AE50Ci0b;EAAM;EAAoB;AFi1C31b;;AEj1Cg3b;EAAM;EAAoB;AFs1C14b;;AEt1C+5b;EAAQ;EAA8B;AF21Cr8b;;AE31Cg+b;EAAM;EAAmB;AFg2Cz/b;;AEh2C6gc;EAAM;EAAkB;AFq2Cric;;AEr2Cwjc;EAAM;EAAqB;AF02Cnlc;;AE12Cymc;EAAM;EAAoB;AF+2Cnoc;;AE/2Copc;EAAM;EAAe;AFo3Czqc;;AEp3Cyrc;EAAM;EAAsB;AFy3Crtc;;AEz3Cwuc;EAAQ;EAA8B;AF83C9wc;;AE93C6yc;EAAM;EAAiB;AFm4Cp0c;;AEn4Ck1c;EAAM;AFu4Cx1c;;AEv4C42c;EAAM;AF24Cl3c;;AE34Cq4c;EAAM;AF+4C34c;;AE/4C85c;EAAM;AFm5Cp6c;;AEn5Cs7c;EAAM;AFu5C57c;;AEv5Ci9c;EAAM;AF25Cv9c;;AE35C8+c;EAAM;AF+5Cp/c;;AE/5Cugd;EAAM;AFm6C7gd;;AEn6Ciid;EAAM;AFu6Cvid;;AEv6Csjd;EAAM;AF26C5jd;;AE36Cild;EAAM;AF+6Cvld;;AE/6C2md;EAAW;AFm7Ctnd;;AEn7Csod;EAAa;AFu7Cnpd;;AEv7Cqqd;EAAe;AF27Cprd;;AE37Cgtd;EAAY;AF+7C5td;;AE/7C6ud;EAAc;AFm8C3vd;;AEn8Csxd;EAAc;AFu8Cpyd;;AEv8C0zd;EAAY;AF28Ct0d;;AE38Cu4d;EAAS;EAAkB;AFg9Cl6d;;AEh9Cs7d;EAAU;EAAe;AFq9C/8d;;AEr9C69d;EAAS;AFy9Ct+d;;AEz9Cw/d;EAAkB;AF69C1ge;;AE79C8he;EAAS;AFi+Cvie;;AEj+C0je;EAAW;EAAe;AFs+Cple;;AEt+Cume;EAAU;EAAmB;AF2+Cpoe;;AE3+Cwpe;EAAS;EAAiB;AFg/Clre;;AEh/Cmse;EAAa;AFo/Chte;;AEp/Cgue;EAAW;AFw/C3ue;;AEx/C2ve;EAAe;AF4/C1we;;AE5/C0xe;EAAa;AFggDvye;;AEhgDuze;EAAY;AFogDn0e;;AEpgDm1e;EAAW;AFwgD91e;;AExgDu3e;EAAY;AF4gDn4e;;AE5gD65e;EAAQ;AFghDr6e;;AEhhDu7e;EAAc;AFohDr8e;;AEphDu9e;EAAe;AFwhDt+e;;AExhDu/e;EAAgB;AF4hDvgf;;AE5hD8hf;EAAe;AFgiD7if;;AEhiDmkf;EAAiB;EAA8B;AFqiDlnf;;AEriDuqf;EAAe;EAAoB;AF0iD1sf;;AE1iDqvf;EAAY;EAAoB;AF+iDrxf;;AE/iDm0f;EAAgB;EAA8B;AFojDj3f;;AEpjDy6f;EAAiB;EAAoB;AFyjD98f;;AEzjD0/f;EAAY;EAAoB;AF8jD1hgB;;AE9jDkkgB;EAAc;EAAoB;AFmkDpmgB;;AEnkDgpgB;EAAiB;EAAoB;AFwkDrrgB;;AExkDiugB;EAAe;EAAoB;AF6kDpwgB;;AE7kDkzgB;EAAe;EAAoB;AFklDr1gB;;AEllDi4gB;EAAgB;EAAoB;AFulDr6gB;;AEvlDi9gB;EAAc;EAAoB;AF4lDn/gB;;AE5lD+hhB;EAAe;EAAoB;AFimDlkhB;;AEjmDgnhB;EAAgB;EAAoB;AFsmDpphB;;AEtmDgshB;EAAc;EAAoB;AF2mDluhB;;AE3mDgxhB;EAAe;EAAoB;AFgnDnzhB;;AEhnD81hB;EAAe;EAAoB;AFqnDj4hB;;AErnD46hB;EAA0B;EAAoB;AF0nD19hB;;AE1nDqgiB;EAAiB;EAAoB;AF+nD1iiB;;AE/nDuliB;EAAiB;EAAoB;AFooD5niB;;AEpoDwqiB;EAAc;EAAoB;AFyoD1siB;;AEzoDsviB;EAAgB;EAAoB;AF8oD1xiB;;AE9oDs0iB;EAAe;EAAoB;AFmpDz2iB;;AEnpDq5iB;EAA2B;EAAoB;AFwpDp8iB;;AExpDi/iB;EAAe;EAAoB;AF6pDphjB;;AE7pDikjB;EAAiB;EAAoB;AFkqDtmjB;;AElqDmpjB;EAAiB;EAAoB;AFuqDxrjB;;AEvqDqujB;EAAW;AF2qDhvjB;;AE3qD+wjB;EAAc;AF+qD7xjB;;AE/qDuzjB;EAAW;AFmrDl0jB;;AEnrD40jB;EAAW;EAAwE;AFwrD/5jB;;AExrD+/jB;EAAsB;AF4rDrhkB;;AE5rDwnkB;EAAW;EAA0E;AFisD7skB;;AEjsD+ykB;EAAQ;EAAqE;AFssD53kB;;AEtsDy9kB;EAAmB;AF0sD5+kB;;AE1sD+klB;EAAW;EAAwC;AF+sDlolB;;AE/sDyrlB;EAAW;EAA2E;AFotD/wlB;;AEptDk3lB;EAAyB;AFwtD34lB;;AExtD8+lB;EAAc;EAA8C;AF6tD1imB;;AE7tDummB;EAAa;EAAsB;EAA8B;AFmuDxqmB;;AEnuD2wmB;EAAc;EAA8B;AFwuDvzmB;;AExuD00mB;EAAQ;EAA2G;AF6uD77mB;;AE7uDginB;EAAc;AFivD9inB;;AEjvDuonB;EAAM;EAA2G;AFsvDxvnB;;AEtvDi2nB;EAA2B;EAAoB;AF2vDh5nB;;AE3vDu8nB;EAAM;AF+vD78nB;;AE/vDi+nB;EAAc;AFmwD/+nB;;AEnwDgqoB;EAAY;EAAyB;EAAsJ;EAA8I;EAAsK;AF2wD/opB;;AE3wDkspB;EAAoB;EAA4B;AFgxDlvpB;;AEhxDqypB;EAAkC;AFoxDv0pB;;AEpxDg2pB;EAAc;AFwxD92pB;;AExxDs4pB;EAAa;AF4xDn5pB;;AE5xDs8pB;EAAK;EAA2B;EAAqC;EAAkE;EAAqC;EAA0E;EAAyB;EAAoE;AFuyDzxqB;;AEvyD2yqB;EAA6C;EAAe;AF4yDv2qB;;AE5yDi3qB;EAAmD;EAAqD;AFizDz9qB;;AEjzDw+qB;EAAmD;EAAyB;AFszDpjrB;;AEtzDmkrB;EAAW;AF0zD9krB;;AE1zDmmrB;EAAgC;EAAwB;EAAyB;AFg0DprrB;;AEh0D2srB;EAA2C;AFo0DtvrB;;AEp0D2wrB;EAAyD;EAAsB;EAAoB;AF00D92rB;;AE10Dm4rB;EAAkB;EAAY;AF+0Dj6rB;;AE/0Di7rB;EAA6G;EAAkB;EAAuD;EAAmB;EAAqB;AFu1D/osB;;AEv1D8psB;EAAqH;AF21DnxsB;;AE31DuysB;EAAyB;IAAgC;EFg2D91sB;EEh2D03sB;IAAwF;IAAwB;EFo2D1+sB;EEp2DsgtB;IAAkB;IAAa;EFw2DritB;AACF;AEz2D0jtB;EAA0B;IAAgC;IAA4B;EF82D9otB;AACF;AE/2D8qtB;EAAe;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AFu3Dh6tB;;AEv3DgguB;EAA6B;EAAkB;EAA2E;AF63D1nuB;;AE73D6tuB;EAAc;EAA2B;EAAmC;EAAkE;EAAyB;EAAwE;AFs4D58uB;;AEt4D4ivB;EAAe;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AF+4D9xvB;;AE/4D83vB;EAA+B;EAAkB;EAA2E;AFq5D1/vB;;AEr5D6lwB;EAAgB;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AF85Dh1wB;;AE95Dg7wB;EAAiB;EAA2B;EAAoC;EAAkE;EAAyB;EAAwE;AFu6DnqxB;;AEv6DmwxB;EAAmC;EAAkB;EAA2E;AF66Dn4xB;;AE76Ds+xB;EAAkB;EAA2B;EAAoC;EAAkE;EAAyB;EAAwE;AFs7D1tyB;;AEt7D0zyB;EAA2J;EAAiB;EAAkB;EAAoB;EAAqB;AF87DjizB;;AE97D4izB;EAAoB;EAAa;EAAe;EAAoB;EAAqB;EAAmB;AFu8DxpzB;;AEv8DyqzB;EAAsB;EAAsB;EAAc;EAAkB;EAAe;EAAoB;EAAqB;AFi9D7yzB;;AEj9DwzzB;EAAyB;IAAmC;EFs9Dl3zB;EEt9Dk4zB;IAAuB;EFy9Dz5zB;EEz9Dq6zB;IAA4B;IAAc;EF69D/8zB;EE79D09zB;IAAyB;IAAc;EFi+Djg0B;EEj+Dih0B;IAAyB;IAAc;EFq+Dxj0B;EEr+Dyk0B;IAAyB;IAAc;EFy+Dhn0B;EEz+D0n0B;IAAyB;IAAc;EF6+Djq0B;EE7+Dkr0B;IAAyB;IAAc;EFi/Dzt0B;EEj/D0u0B;IAAyB;IAAc;EFq/Djx0B;EEr/D2x0B;IAAyB;IAAc;EFy/Dl00B;EEz/Dm10B;IAAyB;IAAc;EF6/D130B;EE7/D240B;IAAyB;IAAc;EFigEl70B;EEjgE470B;IAA0B;IAAc;EFqgEp+0B;EErgEq/0B;IAA0B;IAAc;EFygE7h1B;EEzgE8i1B;IAA0B;IAAc;EF6gEtl1B;AACF;AE9gEom1B;EAAyB;IAAsD;EFkhEjr1B;EElhEis1B;IAAuB;EFqhExt1B;EErhEou1B;IAA4B;IAAc;EFyhE9w1B;EEzhEyx1B;IAAyB;IAAc;EF6hEh01B;EE7hEg11B;IAAyB;IAAc;EFiiEv31B;EEjiEw41B;IAAyB;IAAc;EFqiE/61B;EEriEy71B;IAAyB;IAAc;EFyiEh+1B;EEziEi/1B;IAAyB;IAAc;EF6iExh2B;EE7iEyi2B;IAAyB;IAAc;EFijEhl2B;EEjjE0l2B;IAAyB;IAAc;EFqjEjo2B;EErjEkp2B;IAAyB;IAAc;EFyjEzr2B;EEzjE0s2B;IAAyB;IAAc;EF6jEjv2B;EE7jE2v2B;IAA0B;IAAc;EFikEny2B;EEjkEoz2B;IAA0B;IAAc;EFqkE512B;EErkE622B;IAA0B;IAAc;EFykEr52B;AACF;AE1kEm62B;EAA0B;IAAyE;EF8kEpg3B;EE9kEqh3B;IAAuB;EFilE5i3B;EEjlEwj3B;IAA4B;IAAc;EFqlElm3B;EErlE6m3B;IAAyB;IAAc;EFylEpp3B;EEzlEoq3B;IAAyB;IAAc;EF6lE3s3B;EE7lE4t3B;IAAyB;IAAc;EFimEnw3B;EEjmE6w3B;IAAyB;IAAc;EFqmEpz3B;EErmEq03B;IAAyB;IAAc;EFymE523B;EEzmE633B;IAAyB;IAAc;EF6mEp63B;EE7mE863B;IAAyB;IAAc;EFinEr93B;EEjnEs+3B;IAAyB;IAAc;EFqnE7g4B;EErnE8h4B;IAAyB;IAAc;EFynErk4B;EEznE+k4B;IAA0B;IAAc;EF6nEvn4B;EE7nEwo4B;IAA0B;IAAc;EFioEhr4B;EEjoEis4B;IAA0B;IAAc;EFqoEzu4B;AACF;AEtoEuv4B;EAA0B;IAA4F;EF0oE324B;EE1oE434B;IAAuB;EF6oEn54B;EE7oE+54B;IAA4B;IAAc;EFipEz84B;EEjpEo94B;IAAyB;IAAc;EFqpE3/4B;EErpE2g5B;IAAyB;IAAc;EFypElj5B;EEzpEmk5B;IAAyB;IAAc;EF6pE1m5B;EE7pEon5B;IAAyB;IAAc;EFiqE3p5B;EEjqE4q5B;IAAyB;IAAc;EFqqEnt5B;EErqEou5B;IAAyB;IAAc;EFyqE3w5B;EEzqEqx5B;IAAyB;IAAc;EF6qE5z5B;EE7qE605B;IAAyB;IAAc;EFirEp35B;EEjrEq45B;IAAyB;IAAc;EFqrE565B;EErrEs75B;IAA0B;IAAc;EFyrE995B;EEzrE++5B;IAA0B;IAAc;EF6rEvh6B;EE7rEwi6B;IAA0B;IAAc;EFisEhl6B;AACF;AElsE8l6B;EAA0B;IAAgH;EFssEtu6B;EEtsEuv6B;IAAwB;EFysE/w6B;EEzsE2x6B;IAA6B;IAAc;EF6sEt06B;EE7sEi16B;IAA0B;IAAc;EFitEz36B;EEjtEy46B;IAA0B;IAAc;EFqtEj76B;EErtEk86B;IAA0B;IAAc;EFytE1+6B;EEztEo/6B;IAA0B;IAAc;EF6tE5h7B;EE7tE6i7B;IAA0B;IAAc;EFiuErl7B;EEjuEsm7B;IAA0B;IAAc;EFquE9o7B;EEruEwp7B;IAA0B;IAAc;EFyuEhs7B;EEzuEit7B;IAA0B;IAAc;EF6uEzv7B;EE7uE0w7B;IAA0B;IAAc;EFivElz7B;EEjvE4z7B;IAA2B;IAAc;EFqvEr27B;EErvEs37B;IAA2B;IAAc;EFyvE/57B;EEzvEg77B;IAA2B;IAAc;EF6vEz97B;AACF;AE9vEu+7B;EAA0B;IAAqI;EFkwEpo8B;EElwEqp8B;IAAyB;EFqwE9q8B;EErwE0r8B;IAA8B;IAAc;EFywEtu8B;EEzwEiv8B;IAA2B;IAAc;EF6wE1x8B;EE7wE0y8B;IAA2B;IAAc;EFixEn18B;EEjxEo28B;IAA2B;IAAc;EFqxE748B;EErxEu58B;IAA2B;IAAc;EFyxEh88B;EEzxEi98B;IAA2B;IAAc;EF6xE1/8B;EE7xE2g9B;IAA2B;IAAc;EFiyEpj9B;EEjyE8j9B;IAA2B;IAAc;EFqyEvm9B;EEryEwn9B;IAA2B;IAAc;EFyyEjq9B;EEzyEkr9B;IAA2B;IAAc;EF6yE3t9B;EE7yEqu9B;IAA4B;IAAc;EFizE/w9B;EEjzEgy9B;IAA4B;IAAc;EFqzE109B;EErzE219B;IAA4B;IAAc;EFyzEr49B;AACF;AE1zEm59B;EAAsB;EAAyC;AF8zEl99B;;AE9zEig+B;EAA2B;EAA4C;AFm0Exk+B;;AEn0Eon+B;EAA8B;EAA+C;AFw0Ejs+B;;AEx0E0u+B;EAA2B;EAA4C;AF60Ejz+B;;AE70E01+B;EAA8B;EAA+C;AFk1Ev6+B;;AEl1Eg9+B;EAA6B;EAA8C;AFu1E3h/B;;AEv1Eok/B;EAA8B;EAA+C;AF41Ejp/B;;AE51E0r/B;EAAiC;EAAsB;EAAgB;AFk2Ejw/B;;AEl2Esx/B;EAA8D;EAAuB;AFu2E32/B;;AEv2E44/B;EAA8B;AF22E16/B;;AE32Ei8/B;EAAgB;EAAwE;EAAgG;EAAqB;EAAmB;EAAqB;EAAqB;AFq3E3sgC;;AEr3EkugC;EAAsC;AFy3ExwgC;;AEz3E22gC;EAAsB;EAA0E;AF83E38gC;;AE93E6ihC;EAAyB;EAAkB;EAAkB;EAAoB;EAAuD;AFs4ErrhC;;AEt4EmuhC;EAAuB;EAA2B;EAAoC;EAAkE;EAAyB;EAAkB;EAAoB;EAAwE;EAAgG;EAA2E;EAAmG;AFo5EhxiC;;AEp5E8ziC;EAAiC;EAA6B;AFy5E53iC;;AEz5E05iC;EAA+B;EAAgC;AF85Ez9iC;;AE95E0/iC;EAA0B;EAAkB;AFm6EtijC;;AEn6E6ljC;EAA8B;EAA8B;AFw6EzpjC;;AEx6E8sjC;EAA2B;AF46EzujC;;AE56EmwjC;EAAwB;EAA0E;EAAkG;AFk7Ev8jC;;AEl7E0ikC;EAAgC;EAAsB;AFu7EhmkC;;AEv7EupkC;EAAwB;EAA0E;EAAkG;AF67E31kC;;AE77E87kC;EAA2B;EAA8B;AFk8Ev/kC;;AEl8E0glC;EAAqB;EAA2G;AFu8E1olC;;AEv8E6ulC;EAAwC;AF28ErxlC;;AE38E82lC;EAAmB;EAA2G;AFg9E5+lC;;AEh9EqlmC;EAAqB;EAA2G;EAAyG;AFs9E9zmC;;AEt9Eu5mC;EAA8B;EAAoB;AF29Ez8mC;;AE39EignC;EAA4B;EAAoB;AFg+EjjnC;;AEh+EymnC;EAA8B;AFo+EvonC;;AEp+E6pnC;EAA0B;EAA0E;EAAkG;AF0+En2nC;;AE1+Es8nC;EAAuC;EAAkB;AF++E//nC;;AE/+EsjoC;EAA2D;EAAsB;AFo/EvooC;;AEp/E2roC;EAA6B;EAAsB;AFy/E9uoC;;AEz/EkyoC;EAAyB;EAAkB;AF8/E70oC;;AE9/Ei4oC;EAAyB;EAAkB;AFmgF56oC;;AEngFg+oC;EAAyB;EAAkB;AFwgF3gpC;;AExgF+jpC;EAAyB;EAAkB;AF6gF1mpC;;AE7gFiqpC;EAAwB;EAAoB;AFkhF7spC;;AElhF2vpC;EAA2B;EAAoB;AFuhF1ypC;;AEvhFw1pC;EAA2B;EAAoB;AF4hFv4pC;;AE5hFm7pC;EAAsC;EAAkB;AFiiF3+pC;;AEjiF+hqC;EAAwC;EAAoB;AFsiF3lqC;;AEtiFgpqC;EAAmD;EAAkB;AF2iFrtqC;;AE3iF4wqC;EAAyB;IAAY;EFgjF/yqC;EEhjF4zqC;IAAY;EFmjFx0qC;EEnjFk1qC;IAAY;EFsjF91qC;EEtjFw2qC;IAAiB;EFyjFz3qC;EEzjFu6qC;IAAiB;EF4jFx7qC;EE5jFs+qC;IAAc;EF+jFp/qC;AACF;AEhkF0grC;EAAyB;IAAW;IAAiB;EFqkF7jrC;EErkF+krC;IAAW;IAAmB;EFykF7mrC;EEzkF6nrC;IAAU;EF4kFvorC;EE5kFuprC;IAAW;EF+kFlqrC;EE/kFgrrC;IAAY;EFklF5rrC;EEllFysrC;IAAU;EFqlFntrC;EErlFgurC;IAAiB;EFwlFjvrC;EExlF6vrC;IAAiB;EF2lF9wrC;EE3lF0xrC;IAAiB;EF8lF3yrC;EE9lFy1rC;IAAiB;EFimF12rC;EEjmFw5rC;IAAc;EFomFt6rC;EEpmFy7rC;IAAc;EFumFv8rC;EEvmF69rC;IAAS;EF0mFt+rC;EE1mFm/rC;IAAW;IAAkB;EF8mFhhsC;EE9mFmisC;IAAiB;EFinFpjsC;EEjnFsksC;IAAc;IAAkB;EFqnFtmsC;EErnFonsC;IAAc;IAAiB;EFynFnpsC;EEznFoqsC;IAAa;IAAmB;EF6nFpssC;EE7nFwtsC;IAAe;IAAe;EFioFtvsC;AACF;AEloF4wsC;EAA0B;IAAU;EFsoF9ysC;EEtoF2zsC;IAAU;EFyoFr0sC;EEzoFq1sC;IAAiB;EF4oFt2sC;EE5oFo5sC;IAAiB;EF+oFr6sC;EE/oFm9sC;IAAc;EFkpFj+sC;EElpFo/sC;IAAe;EFqpFngtC;AACF;AEtpFshtC;EAA0B;IAAU;EF0pFxjtC;EE1pFoktC;IAAgB;EF6pFpltC;EE7pF8ltC;IAAW;IAAkB;EFiqF3ntC;EEjqF8otC;IAAc;IAAiB;EFqqF7qtC;EErqF2rtC;IAAc;IAAmB;EFyqF5ttC;AACF;ADzpFA;AIjBA;AAAgE;EAAiB;EAAuB;AHgrFxG;;AGhrF8H;EAAe;AHorF7I;;AGprF6J;EAAK;EAA8B;EAA6B;EAAiM;EAAgB;EAAgB;EAAc;AH8rF5c;;AG9rFud;EAAK;EAAoB;AHmsFhf;;AGnsFyf;EAAG;EAAqB;EAAc;AHysF/hB;;AGzsFwiB;EAAoB;EAAyC;AH8sFrmB;;AG9sFsoB;EAAkB;EAAkB;AHmtF1qB;;AGntF8rB;EAAE;EAAc;AHwtF9sB;;AGxtFsuB;EAAS;AH4tF/uB;;AG5tFkwB;EAAkB;EAAoG;AHiuFx3B;;AGjuFs4B;EAAM;AHquF54B;;AGruF05B;EAAQ;EAAc;EAAc;EAAkB;AH4uFh9B;;AG5uFw+B;EAAI;AHgvF5+B;;AGhvF0/B;EAAI;AHovF9/B;;AGpvFwgC;EAAM;EAAyB;EAAqB;AH0vF5jC;;AG1vF0kC;EAAsC;EAAc;EAAoB;EAAe;EAAoB;EAAoB;EAAS;AHowFltC;;AGpwF4tC;EAAc;AHwwF1uC;;AGxwF8vC;EAAgD;EAA0B;EAA6B;AH8wFr2C;;AG9wF23C;EAAgB;AHkxF34C;;AGlxFw5C;EAAiB;AHsxFz6C;;AGtxFy7C;EAAS;AH0xFl8C;;AG1xF09C;EAAwD;AH8xFlhD;;AG9xF8hD;EAAc;EAA6B;AHmyFzkD;;AGnyF6lD;EAA4B;AHuyFznD;;AGvyFipD;EAA6B;EAA0B;AH4yFxsD;;AG5yFqtD;EAAQ;AHgzF7tD;;AGhzF+uD;EAAmD;AHozFlyD;;AGpzF2yD;EAAS;AHwzFpzD;;AGxzF6zD;EAAgB;AH4zF70D;;AG5zFu1D;EAAW;EAAgB;EAAS;AHk0F33D;;AGl0Fq4D;EAAS;AHs0F94D;;AGt0F85D;EAAmD;EAAc;AH20F/9D;;AG30Fy+D;EAAyC;EAAc;AHg1FhiE;;AGh1F0iE;EAAqB;AHo1F/jE;;AGp1F8kE;EAAU;AHw1FxlE;;AGx1FumE;EAA+C;EAAc;AH61FpqE;;AG71F0rE;EAAU;EAAY;AHk2FhtE;;AGl2F+tE;EAAS;AHs2FxuE;;AGt2FqvE;EAAiB;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AHq5FjpG;;AGr5FuqG;EAAW;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AHo8F7jI;;AGp8FmlI;EAAW;AHw8F9lI;;AGx8FymI;EAAyB;IAAW;EH68F3oI;AACF;AG98F8pI;EAAyB;IAAW;EHk9FhsI;AACF;AGn9FmtI;EAA0B;IAAW;EHu9FtvI;AACF;AGx9F0wI;EAA0B;IAAW;EH49F7yI;AACF;AG79Fi0I;EAA0B;IAAW;EHi+Fp2I;AACF;AGl+Fw3I;EAA0B;IAAW;EHs+F35I;AACF;AGv+F+6I;EAAS;AH0+Fx7I;;AG1+F28I;EAAW;AH8+Ft9I;;AG9+Fw+I;EAAQ;AHk/Fh/I;;AGl/FggJ;EAAO;AHs/FvgJ;;AGt/FshJ;EAAU;AH0/FhiJ;;AG1/FkjJ;EAAU;AH8/F5jJ;;AG9/F8kJ;EAAS;EAAS;EAAO;EAAQ;AHqgG/mJ;;AGrgGqnJ;EAAQ;AHygG7nJ;;AGzgGwoJ;EAAQ;AH6gGhpJ;;AG7gGupJ;EAAS;AHihGhqJ;;AGjhGwqJ;EAAS;AHqhGjrJ;;AGrhG4rJ;EAAW;AHyhGvsJ;;AGzhGmtJ;EAAO;AH6hG1tJ;;AG7hGguJ;EAAO;AHiiGvuJ;;AGjiGgvJ;EAAS;AHqiGzvJ;;AGriGmwJ;EAAQ;AHyiG3wJ;;AGziGoxJ;EAAQ;AH6iG5xJ;;AG7iGqyJ;EAAU;AHijG/yJ;;AGjjG4zJ;EAAS;AHqjGr0J;;AGrjGm1J;EAAU;AHyjG71J;;AGzjG42J;EAAgB;AH6jG53J;;AG7jGu4J;EAAM;AHikG74J;;AGjkGw5J;EAAM;AHqkG95J;;AGrkGy6J;EAAM;AHykG/6J;;AGzkG07J;EAAK;AH6kG/7J;;AG7kGy8J;EAAK;AHilG98J;;AGjlG49J;EAAK;AHqlGj+J;;AGrlG0+J;EAAO;EAAmB;AH0lGpgK;;AG1lGohK;EAAS;EAAiB;AH+lG9iK;;AG/lGgkK;EAAO;EAAiB;AHomGxlK;;AGpmG0mK;EAAM;EAAoB;AHymGpoK;;AGzmGqpK;EAAM;EAAgB;AH8mG3qK;;AG9mGwrK;EAAM;EAAqB;AHmnGntK;;AGnnGquK;EAAM;EAAiB;AHwnG5vK;;AGxnG8wK;EAAM;EAAmB;AH6nGvyK;;AG7nGuzK;EAAM;EAAkB;AHkoG/0K;;AGloGk2K;EAAM;EAAmB;AHuoG33K;;AGvoG+4K;EAAQ;EAA6B;AH4oGp7K;;AG5oGk9K;EAAQ;EAA+B;AHipGz/K;;AGjpGqhL;EAAO;AHqpG5hL;;AGrpG+iL;EAAO;AHypGtjL;;AGzpGskL;EAAO;AH6pG7kL;;AG7pGgmL;EAAM;AHiqGtmL;;AGjqGynL;EAAM;AHqqG/nL;;AGrqGipL;EAAM;AHyqGvpL;;AGzqG2qL;EAAM;AH6qGjrL;;AG7qGmsL;EAAM;AHirGzsL;;AGjrGytL;EAAM;AHqrG/tL;;AGrrGkvL;EAAM;AHyrGxvL;;AGzrG0wL;EAAM;AH6rGhxL;;AG7rGiyL;EAAM;AHisGvyL;;AGjsG4zL;EAAM;AHqsGl0L;;AGrsGs1L;EAAM;AHysG51L;;AGzsG+2L;EAAM;AH6sGr3L;;AG7sGk4L;EAAM;AHitGx4L;;AGjtG05L;EAAM;AHqtGh6L;;AGrtGk7L;EAAM;AHytGx7L;;AGztGs8L;EAAM;AH6tG58L;;AG7tG29L;EAAM;AHiuGj+L;;AGjuGo/L;EAAO;AHquG3/L;;AGruG6gM;EAAO;AHyuGphM;;AGzuGuiM;EAAO;AH6uG9iM;;AG7uGikM;EAAM;AHivGvkM;;AGjvGwlM;EAAO;AHqvG/lM;;AGrvGinM;EAAM;AHyvGvnM;;AGzvG4oM;EAAO;AH6vGnpM;;AG7vGiqM;EAAS;AHiwG1qM;;AGjwGksM;EAAc;AHqwGhtM;;AGrwGquM;EAAM;AHywG3uM;;AGzwGwvM;EAAQ;AH6wGhwM;;AG7wGuxM;EAAa;AHixGpyM;;AGjxGwzM;EAAO;AHqxG/zM;;AGrxG60M;EAAY;AHyxGz1M;;AGzxG42M;EAAoB;AH6xGh4M;;AG7xG25M;EAAiB;AHiyG56M;;AGjyGo8M;EAAW;AHqyG/8M;;AGryGi+M;EAAM;AHyyGv+M;;AGzyGo/M;EAAU;AH6yG9/M;;AG7yG+gN;EAAQ;AHizGvhN;;AGjzGoiN;EAAM;AHqzG1iN;;AGrzGujN;EAAQ;AHyzG/jN;;AGzzG2kN;EAAK;AH6zGhlN;;AG7zG4lN;EAAM;AHi0GlmN;;AGj0G8mN;EAAM;AHq0GpnN;;AGr0GgoN;EAAM;AHy0GtoN;;AGz0GmpN;EAAM;AH60GzpN;;AG70GsqN;EAAK;AHi1G3qN;;AGj1GyrN;EAAM;AHq1G/rN;;AGr1G4sN;EAAM;AHy1GltN;;AGz1G+tN;EAAM;AH61GruN;;AG71GivN;EAAM;AHi2GvvN;;AGj2GqwN;EAAM;AHq2G3wN;;AGr2G0xN;EAAK;AHy2G/xN;;AGz2G4yN;EAAO;EAAwB;AH82G30N;;AG92G81N;EAAM;AHk3Gp2N;;AGl3Gg3N;EAAK;AHs3Gr3N;;AGt3Gi4N;EAAa;AH03G94N;;AG13G25N;EAAU;AH83Gr6N;;AG93Gs7N;EAAQ;AHk4G97N;;AGl4Gy8N;EAAK;AHs4G98N;;AGt4Gy9N;EAAM;AH04G/9N;;AG14G0+N;EAAM;AH84Gh/N;;AG94G2/N;EAAO;EAAuB;AHm5GzhO;;AGn5G2iO;EAAK;AHu5GhjO;;AGv5G6jO;EAAK;AH25GlkO;;AG35G+kO;EAAK;AH+5GplO;;AG/5GgmO;EAAQ;AHm6GxmO;;AGn6GmnO;EAAM;AHu6GznO;;AGv6GqoO;EAAM;AH26G3oO;;AG36GupO;EAAM;AH+6G7pO;;AG/6GwqO;EAAM;AHm7G9qO;;AGn7G0rO;EAAM;AHu7GhsO;;AGv7G4sO;EAAM;AH27GltO;;AG37G8tO;EAAmB;EAAuB;AHg8GxwO;;AGh8G0xO;EAAa;AHo8GvyO;;AGp8GmzO;EAAQ;AHw8G3zO;;AGx8Gg1O;EAAQ;AH48Gx1O;;AG58Gy2O;EAAM;AHg9G/2O;;AGh9G03O;EAAK;AHo9G/3O;;AGp9G04O;EAAM;AHw9Gh5O;;AGx9G25O;EAAa;AH49Gx6O;;AG59Go7O;EAAc;AHg+Gl8O;;AGh+G29O;EAAQ;AHo+Gn+O;;AGp+G++O;EAAa;AHw+G5/O;;AGx+G0gP;EAAW;AH4+GrhP;;AG5+GiiP;EAAW;AHg/G5iP;;AGh/G8jP;EAAsB;AHo/GplP;;AGp/GkxP;EAAQ;AHw/G1xP;;AGx/GsyP;EAAW;AH4/GjzP;;AG5/Gs0P;EAAiB;EAAwB;EAAqB;AHkgHp4P;;AGlgHo5P;EAAe;AHsgHn6P;;AGtgHs7P;EAAa;AH0gHn8P;;AG1gHi/P;EAAU;AH8gH3/P;;AG9gH8gQ;EAAkB;AHkhHhiQ;;AGlhH2jQ;EAAU;AHshHrkQ;;AGthH2lQ;EAAW;AH0hHtmQ;;AG1hHqnQ;EAAa;AH8hHloQ;;AG9hHmpQ;EAAgB;AHkiHnqQ;;AGliHwrQ;EAAiB;AHsiHzsQ;;AGtiHquQ;EAAgB;AH0iHrvQ;;AG1iHgxQ;EAAa;AH8iH7xQ;;AG9iHozQ;EAAW;AHkjH/zQ;;AGljHo1Q;EAAc;AHsjHl2Q;;AGtjHq3Q;EAAe;AH0jHp4Q;;AG1jHw5Q;EAAe;AH8jHv6Q;;AG9jHk8Q;EAAa;AHkkH/8Q;;AGlkHw+Q;EAAgB;AHskHx/Q;;AGtkH+gR;EAAiB;AH0kHhiR;;AG1kH8jR;EAAmB;AH8kHjlR;;AG9kHynR;EAAgB;AHklHzoR;;AGllHsqR;EAAQ;AHslH9qR;;AGtlHurR;EAAO;AH0lH9rR;;AG1lHusR;EAAO;AH8lH9sR;;AG9lHytR;EAAO;AHkmHhuR;;AGlmH0uR;EAAyC;EAAuB;EAAqD;AHwmH/1R;;AGxmHu5R;EAAwC;EAAwB;EAAyD;AH8mHhhS;;AG9mH4kS;EAA+C;EAAsB;AHmnHjpS;;AGnnHwsS;EAAiB;AHunHztS;;AGvnHyuS;EAAiB;AH2nH1vS;;AG3nH0wS;EAAmB;AH+nH7xS;;AG/nH+yS;EAAmB;AHmoHl0S;;AGnoHo1S;EAAmB;AHuoHv2S;;AGvoHy3S;EAAU;EAAgB;EAAuB;AH6oH16S;;AG7oH67S;EAAmB;AHipHh9S;;AGjpHm+S;EAAmB;AHqpHt/S;;AGrpHygT;EAAqB;AHypH9hT;;AGzpHmjT;EAAqB;AH6pHxkT;;AG7pH6lT;EAAY;AHiqHzmT;;AGjqH+nT;EAAS;AHqqHxoT;;AGrqH6pT;EAAY;AHyqHzqT;;AGzqH6rT;EAAc;AH6qH3sT;;AG7qHguT;EAAc;AHirH9uT;;AGjrH8vT;EAAa;AHqrH3wT;;AGrrH8xT;EAAY;AHyrH1yT;;AGzrH+zT;EAAa;AH6rH50T;;AG7rHi2T;EAAY;AHisH72T;;AGjsHm4T;EAAgB;EAA6B;AHssHh7T;;AGtsH08T;EAAc;EAAkC;AH2sH1/T;;AG3sH6hU;EAAU;AH+sHviU;;AG/sHwjU;EAAQ;AHmtHhkU;;AGntHilU;EAAU;AHutH3lU;;AGvtH0mU;EAAY;AH2tHtnU;;AG3tH2oU;EAAwB;AH+tHnqU;;AG/tH2rU;EAAY;AHmuHvsU;;AGnuH4tU;EAAU;AHuuHtuU;;AGvuH8vU;EAAU;AH2uHxwU;;AG3uH6xU;EAAY;AH+uHzyU;;AG/uHg0U;EAAY;AHmvH50U;;AGnvHk2U;EAAc;AHuvHh3U;;AGvvHm4U;EAAa;AH2vHh5U;;AG3vHk6U;EAAiB;EAAsB;AHgwHz8U;;AGhwHggV;EAAmB;EAAsB;AHqwHziV;;AGrwH8lV;EAA6B;EAAsB;AH0wHjpV;;AG1wHusV;EAAiB;EAAsB;AH+wH9uV;;AG/wHqyV;EAAiB;EAAsB;AHoxH50V;;AGpxHm4V;EAAgB;EAAsB;AHyxHz6V;;AGzxH89V;EAAoB;AH6xHl/V;;AG7xH2gW;EAA4B;EAAsB;AHkyH7jW;;AGlyHinW;EAAmB;EAAsB;AHuyH1pW;;AGvyHutW;EAAkB;EAAsB;AH4yH/vW;;AG5yH6zW;EAAU;EAAkB;AHizHz1W;;AGjzHg5W;EAAc;EAAkB;AHszHh7W;;AGtzHq+W;EAAc;EAAkB;AH2zHrgX;;AG3zH0jX;EAAY;EAAkB;AHg0HxlX;;AGh0H+oX;EAAa;EAAkB;AHq0H9qX;;AGr0HquX;EAAa;EAAkB;AH00HpwX;;AG10H2zX;EAAgB;AH80H30X;;AG90Hw2X;EAAc;EAAkB;AHm1Hx4X;;AGn1H47X;EAAa;EAAkB;AHw1H39X;;AGx1H+gY;EAAa;EAAkB;AH61H9iY;;AG71HqmY;EAAmB;AHi2HxnY;;AGj2HgsY;EAAkB;AHq2HltY;;AGr2HsxY;EAAmB;AHy2HzyY;;AGz2Ho3Y;EAA6B;EAA2B;EAAoC;AH+2Hh9Y;;AG/2HkhZ;EAAc;EAA2B;EAAqC;AHq3HhmZ;;AGr3HkqZ;EAA2B;EAA2B;EAAoC;AH23H5vZ;;AG33H8zZ;EAAW;EAAmC;AHg4H52Z;;AGh4Hm7Z;EAAc;EAAqC;AHq4Ht+Z;;AGr4Hgja;EAAwB;AHy4Hxka;;AGz4Hima;EAAY;AH64H7ma;;AG74Hqoa;EAAc;AHi5Hnpa;;AGj5Hqqa;EAAgB;EAAsB;AHs5H3sa;;AGt5H8ta;EAAc;EAAoB;AH25Hhwa;;AG35Hixa;EAAe;EAA0B;AHg6H1za;;AGh6Hi1a;EAAK;AHo6Ht1a;;AGp6Ho2a;EAAK;AHw6Hz2a;;AGx6Hm3a;EAAK;AH46Hx3a;;AG56Hu4a;EAAK;AHg7H54a;;AGh7H25a;EAAK;AHo7Hh6a;;AGp7H66a;EAAK;AHw7Hl7a;;AGx7Hi8a;EAAQ;AH47Hz8a;;AG57Hy9a;EAAM;EAAoB;AHi8Hn/a;;AGj8Hwgb;EAAO;EAAoB;AHs8Hnib;;AGt8Hojb;EAAM;EAAqB;AH28H/kb;;AG38Hqmb;EAAM;EAAsB;AHg9Hjob;;AGh9Hopb;EAAQ;EAAgC;AHq9H5rb;;AGr9Hytb;EAAQ;EAAyB;AH09H1vb;;AG19Hoxb;EAAM;EAAqB;AH+9H/yb;;AG/9Hi0b;EAAM;EAAoB;AHo+H31b;;AGp+Hg3b;EAAM;EAAoB;AHy+H14b;;AGz+H+5b;EAAQ;EAA8B;AH8+Hr8b;;AG9+Hg+b;EAAM;EAAmB;AHm/Hz/b;;AGn/H6gc;EAAM;EAAkB;AHw/Hric;;AGx/Hwjc;EAAM;EAAqB;AH6/Hnlc;;AG7/Hymc;EAAM;EAAoB;AHkgInoc;;AGlgIopc;EAAM;EAAe;AHugIzqc;;AGvgIyrc;EAAM;EAAsB;AH4gIrtc;;AG5gIwuc;EAAQ;EAA8B;AHihI9wc;;AGjhI6yc;EAAM;EAAiB;AHshIp0c;;AGthIk1c;EAAM;AH0hIx1c;;AG1hI42c;EAAM;AH8hIl3c;;AG9hIq4c;EAAM;AHkiI34c;;AGliI85c;EAAM;AHsiIp6c;;AGtiIs7c;EAAM;AH0iI57c;;AG1iIi9c;EAAM;AH8iIv9c;;AG9iI8+c;EAAM;AHkjIp/c;;AGljIugd;EAAM;AHsjI7gd;;AGtjIiid;EAAM;AH0jIvid;;AG1jIsjd;EAAM;AH8jI5jd;;AG9jIild;EAAM;AHkkIvld;;AGlkI2md;EAAW;AHskItnd;;AGtkIsod;EAAa;AH0kInpd;;AG1kIqqd;EAAe;AH8kIprd;;AG9kIgtd;EAAY;AHklI5td;;AGllI6ud;EAAc;AHslI3vd;;AGtlIsxd;EAAc;AH0lIpyd;;AG1lI0zd;EAAY;AH8lIt0d;;AG9lIu4d;EAAS;EAAkB;AHmmIl6d;;AGnmIs7d;EAAU;EAAe;AHwmI/8d;;AGxmI69d;EAAS;AH4mIt+d;;AG5mIw/d;EAAkB;AHgnI1ge;;AGhnI8he;EAAS;AHonIvie;;AGpnI0je;EAAW;EAAe;AHynIple;;AGznIume;EAAU;EAAmB;AH8nIpoe;;AG9nIwpe;EAAS;EAAiB;AHmoIlre;;AGnoImse;EAAa;AHuoIhte;;AGvoIgue;EAAW;AH2oI3ue;;AG3oI2ve;EAAe;AH+oI1we;;AG/oI0xe;EAAa;AHmpIvye;;AGnpIuze;EAAY;AHupIn0e;;AGvpIm1e;EAAW;AH2pI91e;;AG3pIu3e;EAAY;AH+pIn4e;;AG/pI65e;EAAQ;AHmqIr6e;;AGnqIu7e;EAAc;AHuqIr8e;;AGvqIu9e;EAAe;AH2qIt+e;;AG3qIu/e;EAAgB;AH+qIvgf;;AG/qI8hf;EAAe;AHmrI7if;;AGnrImkf;EAAiB;EAA8B;AHwrIlnf;;AGxrIuqf;EAAe;EAAoB;AH6rI1sf;;AG7rIqvf;EAAY;EAAoB;AHksIrxf;;AGlsIm0f;EAAgB;EAA8B;AHusIj3f;;AGvsIy6f;EAAiB;EAAoB;AH4sI98f;;AG5sI0/f;EAAY;EAAoB;AHitI1hgB;;AGjtIkkgB;EAAc;EAAoB;AHstIpmgB;;AGttIgpgB;EAAiB;EAAoB;AH2tIrrgB;;AG3tIiugB;EAAe;EAAoB;AHguIpwgB;;AGhuIkzgB;EAAe;EAAoB;AHquIr1gB;;AGruIi4gB;EAAgB;EAAoB;AH0uIr6gB;;AG1uIi9gB;EAAc;EAAoB;AH+uIn/gB;;AG/uI+hhB;EAAe;EAAoB;AHovIlkhB;;AGpvIgnhB;EAAgB;EAAoB;AHyvIpphB;;AGzvIgshB;EAAc;EAAoB;AH8vIluhB;;AG9vIgxhB;EAAe;EAAoB;AHmwInzhB;;AGnwI81hB;EAAe;EAAoB;AHwwIj4hB;;AGxwI46hB;EAA0B;EAAoB;AH6wI19hB;;AG7wIqgiB;EAAiB;EAAoB;AHkxI1iiB;;AGlxIuliB;EAAiB;EAAoB;AHuxI5niB;;AGvxIwqiB;EAAc;EAAoB;AH4xI1siB;;AG5xIsviB;EAAgB;EAAoB;AHiyI1xiB;;AGjyIs0iB;EAAe;EAAoB;AHsyIz2iB;;AGtyIq5iB;EAA2B;EAAoB;AH2yIp8iB;;AG3yIi/iB;EAAe;EAAoB;AHgzIphjB;;AGhzIikjB;EAAiB;EAAoB;AHqzItmjB;;AGrzImpjB;EAAiB;EAAoB;AH0zIxrjB;;AG1zIqujB;EAAW;AH8zIhvjB;;AG9zI+wjB;EAAc;AHk0I7xjB;;AGl0IuzjB;EAAW;AHs0Il0jB;;AGt0I40jB;EAAW;EAAwE;AH20I/5jB;;AG30I+/jB;EAAsB;AH+0IrhkB;;AG/0IwnkB;EAAW;EAA0E;AHo1I7skB;;AGp1I+ykB;EAAQ;EAAqE;AHy1I53kB;;AGz1Iy9kB;EAAmB;AH61I5+kB;;AG71I+klB;EAAW;EAAwC;AHk2IlolB;;AGl2IyrlB;EAAW;EAA2E;AHu2I/wlB;;AGv2Ik3lB;EAAyB;AH22I34lB;;AG32I8+lB;EAAc;EAA8C;AHg3I1imB;;AGh3IummB;EAAa;EAAsB;EAA8B;AHs3IxqmB;;AGt3I2wmB;EAAc;EAA8B;AH23IvzmB;;AG33I00mB;EAAQ;EAA2G;AHg4I77mB;;AGh4IginB;EAAc;AHo4I9inB;;AGp4IuonB;EAAM;EAA2G;AHy4IxvnB;;AGz4Ii2nB;EAA2B;EAAoB;AH84Ih5nB;;AG94Iu8nB;EAAM;AHk5I78nB;;AGl5Ii+nB;EAAc;AHs5I/+nB;;AGt5IgqoB;EAAY;EAAyB;EAAsJ;EAA8I;EAAsK;AH85I/opB;;AG95IkspB;EAAoB;EAA4B;AHm6IlvpB;;AGn6IqypB;EAAkC;AHu6Iv0pB;;AGv6Ig2pB;EAAc;AH26I92pB;;AG36Is4pB;EAAa;AH+6In5pB;;AG/6Is8pB;EAAK;EAA2B;EAAqC;EAAkE;EAAqC;EAA0E;EAAyB;EAAoE;AH07IzxqB;;AG17I2yqB;EAA6C;EAAe;AH+7Iv2qB;;AG/7Ii3qB;EAAmD;EAAqD;AHo8Iz9qB;;AGp8Iw+qB;EAAmD;EAAyB;AHy8IpjrB;;AGz8ImkrB;EAAW;AH68I9krB;;AG78ImmrB;EAAgC;EAAwB;EAAyB;AHm9IprrB;;AGn9I2srB;EAA2C;AHu9ItvrB;;AGv9I2wrB;EAAyD;EAAsB;EAAoB;AH69I92rB;;AG79Im4rB;EAAkB;EAAY;AHk+Ij6rB;;AGl+Ii7rB;EAA6G;EAAkB;EAAuD;EAAmB;EAAqB;AH0+I/osB;;AG1+I8psB;EAAqH;AH8+InxsB;;AG9+IuysB;EAAyB;IAAgC;EHm/I91sB;EGn/I03sB;IAAwF;IAAwB;EHu/I1+sB;EGv/IsgtB;IAAkB;IAAa;EH2/IritB;AACF;AG5/I0jtB;EAA0B;IAAgC;IAA4B;EHigJ9otB;AACF;AGlgJ8qtB;EAAe;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AH0gJh6tB;;AG1gJgguB;EAA6B;EAAkB;EAA2E;AHghJ1nuB;;AGhhJ6tuB;EAAc;EAA2B;EAAmC;EAAkE;EAAyB;EAAwE;AHyhJ58uB;;AGzhJ4ivB;EAAe;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AHkiJ9xvB;;AGliJ83vB;EAA+B;EAAkB;EAA2E;AHwiJ1/vB;;AGxiJ6lwB;EAAgB;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AHijJh1wB;;AGjjJg7wB;EAAiB;EAA2B;EAAoC;EAAkE;EAAyB;EAAwE;AH0jJnqxB;;AG1jJmwxB;EAAmC;EAAkB;EAA2E;AHgkJn4xB;;AGhkJs+xB;EAAkB;EAA2B;EAAoC;EAAkE;EAAyB;EAAwE;AHykJ1tyB;;AGzkJ0zyB;EAA2J;EAAiB;EAAkB;EAAoB;EAAqB;AHilJjizB;;AGjlJ4izB;EAAoB;EAAa;EAAe;EAAoB;EAAqB;EAAmB;AH0lJxpzB;;AG1lJyqzB;EAAsB;EAAsB;EAAc;EAAkB;EAAe;EAAoB;EAAqB;AHomJ7yzB;;AGpmJwzzB;EAAyB;IAAmC;EHymJl3zB;EGzmJk4zB;IAAuB;EH4mJz5zB;EG5mJq6zB;IAA4B;IAAc;EHgnJ/8zB;EGhnJ09zB;IAAyB;IAAc;EHonJjg0B;EGpnJih0B;IAAyB;IAAc;EHwnJxj0B;EGxnJyk0B;IAAyB;IAAc;EH4nJhn0B;EG5nJ0n0B;IAAyB;IAAc;EHgoJjq0B;EGhoJkr0B;IAAyB;IAAc;EHooJzt0B;EGpoJ0u0B;IAAyB;IAAc;EHwoJjx0B;EGxoJ2x0B;IAAyB;IAAc;EH4oJl00B;EG5oJm10B;IAAyB;IAAc;EHgpJ130B;EGhpJ240B;IAAyB;IAAc;EHopJl70B;EGppJ470B;IAA0B;IAAc;EHwpJp+0B;EGxpJq/0B;IAA0B;IAAc;EH4pJ7h1B;EG5pJ8i1B;IAA0B;IAAc;EHgqJtl1B;AACF;AGjqJom1B;EAAyB;IAAsD;EHqqJjr1B;EGrqJis1B;IAAuB;EHwqJxt1B;EGxqJou1B;IAA4B;IAAc;EH4qJ9w1B;EG5qJyx1B;IAAyB;IAAc;EHgrJh01B;EGhrJg11B;IAAyB;IAAc;EHorJv31B;EGprJw41B;IAAyB;IAAc;EHwrJ/61B;EGxrJy71B;IAAyB;IAAc;EH4rJh+1B;EG5rJi/1B;IAAyB;IAAc;EHgsJxh2B;EGhsJyi2B;IAAyB;IAAc;EHosJhl2B;EGpsJ0l2B;IAAyB;IAAc;EHwsJjo2B;EGxsJkp2B;IAAyB;IAAc;EH4sJzr2B;EG5sJ0s2B;IAAyB;IAAc;EHgtJjv2B;EGhtJ2v2B;IAA0B;IAAc;EHotJny2B;EGptJoz2B;IAA0B;IAAc;EHwtJ512B;EGxtJ622B;IAA0B;IAAc;EH4tJr52B;AACF;AG7tJm62B;EAA0B;IAAyE;EHiuJpg3B;EGjuJqh3B;IAAuB;EHouJ5i3B;EGpuJwj3B;IAA4B;IAAc;EHwuJlm3B;EGxuJ6m3B;IAAyB;IAAc;EH4uJpp3B;EG5uJoq3B;IAAyB;IAAc;EHgvJ3s3B;EGhvJ4t3B;IAAyB;IAAc;EHovJnw3B;EGpvJ6w3B;IAAyB;IAAc;EHwvJpz3B;EGxvJq03B;IAAyB;IAAc;EH4vJ523B;EG5vJ633B;IAAyB;IAAc;EHgwJp63B;EGhwJ863B;IAAyB;IAAc;EHowJr93B;EGpwJs+3B;IAAyB;IAAc;EHwwJ7g4B;EGxwJ8h4B;IAAyB;IAAc;EH4wJrk4B;EG5wJ+k4B;IAA0B;IAAc;EHgxJvn4B;EGhxJwo4B;IAA0B;IAAc;EHoxJhr4B;EGpxJis4B;IAA0B;IAAc;EHwxJzu4B;AACF;AGzxJuv4B;EAA0B;IAA4F;EH6xJ324B;EG7xJ434B;IAAuB;EHgyJn54B;EGhyJ+54B;IAA4B;IAAc;EHoyJz84B;EGpyJo94B;IAAyB;IAAc;EHwyJ3/4B;EGxyJ2g5B;IAAyB;IAAc;EH4yJlj5B;EG5yJmk5B;IAAyB;IAAc;EHgzJ1m5B;EGhzJon5B;IAAyB;IAAc;EHozJ3p5B;EGpzJ4q5B;IAAyB;IAAc;EHwzJnt5B;EGxzJou5B;IAAyB;IAAc;EH4zJ3w5B;EG5zJqx5B;IAAyB;IAAc;EHg0J5z5B;EGh0J605B;IAAyB;IAAc;EHo0Jp35B;EGp0Jq45B;IAAyB;IAAc;EHw0J565B;EGx0Js75B;IAA0B;IAAc;EH40J995B;EG50J++5B;IAA0B;IAAc;EHg1Jvh6B;EGh1Jwi6B;IAA0B;IAAc;EHo1Jhl6B;AACF;AGr1J8l6B;EAA0B;IAAgH;EHy1Jtu6B;EGz1Juv6B;IAAwB;EH41J/w6B;EG51J2x6B;IAA6B;IAAc;EHg2Jt06B;EGh2Ji16B;IAA0B;IAAc;EHo2Jz36B;EGp2Jy46B;IAA0B;IAAc;EHw2Jj76B;EGx2Jk86B;IAA0B;IAAc;EH42J1+6B;EG52Jo/6B;IAA0B;IAAc;EHg3J5h7B;EGh3J6i7B;IAA0B;IAAc;EHo3Jrl7B;EGp3Jsm7B;IAA0B;IAAc;EHw3J9o7B;EGx3Jwp7B;IAA0B;IAAc;EH43Jhs7B;EG53Jit7B;IAA0B;IAAc;EHg4Jzv7B;EGh4J0w7B;IAA0B;IAAc;EHo4Jlz7B;EGp4J4z7B;IAA2B;IAAc;EHw4Jr27B;EGx4Js37B;IAA2B;IAAc;EH44J/57B;EG54Jg77B;IAA2B;IAAc;EHg5Jz97B;AACF;AGj5Ju+7B;EAA0B;IAAqI;EHq5Jpo8B;EGr5Jqp8B;IAAyB;EHw5J9q8B;EGx5J0r8B;IAA8B;IAAc;EH45Jtu8B;EG55Jiv8B;IAA2B;IAAc;EHg6J1x8B;EGh6J0y8B;IAA2B;IAAc;EHo6Jn18B;EGp6Jo28B;IAA2B;IAAc;EHw6J748B;EGx6Ju58B;IAA2B;IAAc;EH46Jh88B;EG56Ji98B;IAA2B;IAAc;EHg7J1/8B;EGh7J2g9B;IAA2B;IAAc;EHo7Jpj9B;EGp7J8j9B;IAA2B;IAAc;EHw7Jvm9B;EGx7Jwn9B;IAA2B;IAAc;EH47Jjq9B;EG57Jkr9B;IAA2B;IAAc;EHg8J3t9B;EGh8Jqu9B;IAA4B;IAAc;EHo8J/w9B;EGp8Jgy9B;IAA4B;IAAc;EHw8J109B;EGx8J219B;IAA4B;IAAc;EH48Jr49B;AACF;AG78Jm59B;EAAsB;EAAyC;AHi9Jl99B;;AGj9Jig+B;EAA2B;EAA4C;AHs9Jxk+B;;AGt9Jon+B;EAA8B;EAA+C;AH29Jjs+B;;AG39J0u+B;EAA2B;EAA4C;AHg+Jjz+B;;AGh+J01+B;EAA8B;EAA+C;AHq+Jv6+B;;AGr+Jg9+B;EAA6B;EAA8C;AH0+J3h/B;;AG1+Jok/B;EAA8B;EAA+C;AH++Jjp/B;;AG/+J0r/B;EAAiC;EAAsB;EAAgB;AHq/Jjw/B;;AGr/Jsx/B;EAA8D;EAAuB;AH0/J32/B;;AG1/J44/B;EAA8B;AH8/J16/B;;AG9/Ji8/B;EAAgB;EAAwE;EAAgG;EAAqB;EAAmB;EAAqB;EAAqB;AHwgK3sgC;;AGxgKkugC;EAAsC;AH4gKxwgC;;AG5gK22gC;EAAsB;EAA0E;AHihK38gC;;AGjhK6ihC;EAAyB;EAAkB;EAAkB;EAAoB;EAAuD;AHyhKrrhC;;AGzhKmuhC;EAAuB;EAA2B;EAAoC;EAAkE;EAAyB;EAAkB;EAAoB;EAAwE;EAAgG;EAA2E;EAAmG;AHuiKhxiC;;AGviK8ziC;EAAwH;EAAoB;EAA2C;EAAc;EAAiB;EAAgB;EAAiB;EAAkB;AHkjKvkjC;;AGljKuljC;EAAgJ;EAAoB;EAA6C;EAAe;EAAc;AH0jKr0jC;;AG1jKk1jC;EAA4Q;EAAoB;EAA6C;EAAiB;EAAgB;AHkkKhskC;;AGlkKitkC;EAA4Q;EAAoB;EAA6C;EAAkB;EAAgB;EAAoB;AH2kKpllC;;AG3kKumlC;EAAsB;AH+kK7nlC;;AG/kK+olC;EAA2E;EAA8B;AHolKxvlC;;AGplK8ylC;EAA4I;EAA8B;AHylKx9lC;;AGzlK8gmC;EAA4qB;EAA8B;AH8lKxtnC;;AG9lK6wnC;EAAqE;EAA8B;AHmmKh3nC;;AGnmKu6nC;EAAgI;EAA8B;AHwmKrkoC;;AGxmK6noC;EAA2E;EAA8B;AH6mKtuoC;;AG7mK2xoC;EAA4I;EAA8B;AHknKr8oC;;AGlnK2/oC;EAAyE;EAA8B;AHunKlmpC;;AGvnKwppC;EAAwI;EAA8B;AH4nK9zpC;;AG5nKo3pC;EAA2E;EAA8B;AHioK79pC;;AGjoKmhqC;EAA4I;EAA8B;AHsoK7rqC;;AGtoKmvqC;EAAsB;AH0oKzwqC;;AG1oK4xqC;EAAkC;AH8oK9zqC;;AG9oK20qC;EAAsC;EAAkB;EAAuD;EAAkB;EAAc;EAAkB;AHupK5+qC;;AGvpKu/qC;EAAa;AH2pKpgrC;;AG3pKihrC;EAAW;EAAkB;EAA8D;EAA0C;EAA0C;EAA4C;EAA2C;EAAuD;EAAkB;EAAc;AHwqK92rC;;AGxqKg4rC;EAAiD;AH4qKj7rC;;AG5qKg+rC;EAAiF;AHgrKjjsC;;AGhrKgmsC;EAAqE;AHorKrqsC;;AGprKitsC;EAAiF;AHwrKlysC;;AGxrKi1sC;EAA6E;AH4rK95sC;;AG5rK48sC;EAAiF;AHgsK7htC;;AGhsK4ktC;EAAsB;EAAa;AHqsK/mtC;;AGrsKwotC;EAAqB;EAAkB;EAAkB;EAAoB;EAAoD;AH6sKzwtC;;AG7sKoztC;EAAwB;AHitK50tC;;AGjtKi4tC;EAA6C;EAAkB;EAAkB;EAAoB;AHwtKt+tC;;AGxtKohuC;EAAqB;AH4tKziuC;;AG5tK+luC;EAAwB;AHguKvnuC;;AGhuK6quC;EAA+C;EAAkB;EAAkB;EAAoB;AHuuKpxuC;;AGvuKk0uC;EAAuB;AH2uKz1uC;;AG3uK84uC;EAAwB;EAAkB;EAAkB;EAAoB;EAAqD;AHmvKnhvC;;AGnvKikvC;EAAmB;EAA+C;AHwvKnovC;;AGxvK+pvC;EAAkG;EAA4C;AH6vK7yvC;;AG7vK40vC;EAA8G;EAA+C;AHkwKz+vC;;AGlwKqgwC;EAAkG;EAA4C;AHuwKnpwC;;AGvwK+qwC;EAA8G;EAA+C;AH4wK50wC;;AG5wKw2wC;EAA0G;EAA8C;AHixKhgxC;;AGjxK4hxC;EAA8G;EAA+C;AHsxKzrxC;;AGtxKqtxC;EAAyE;EAA4C;AH2xK10xC;;AG3xKs2xC;EAA+E;EAAwD;AHgyK7+xC;;AGhyKygyC;EAAyE;EAAqD;AHqyKvoyC;;AGryKmqyC;EAA+E;EAAwD;AH0yK1yyC;;AG1yKs0yC;EAA6E;EAAuD;AH+yK18yC;;AG/yKs+yC;EAA+E;EAAwD;AHozK7mzC;;AGpzKyozC;EAAiB;EAAkB;EAAkB;EAAoB;EAAoD;AH4zKtwzC;;AG5zKizzC;EAAoB;AHg0Kr0zC;;AGh0K03zC;EAAqC;EAAkB;EAAkB;EAAoB;AHu0Kv9zC;;AGv0Kqg0C;EAAiB;AH20Kth0C;;AG30K4k0C;EAAoB;AH+0Khm0C;;AG/0Ksp0C;EAAuC;EAAkB;EAAkB;EAAoB;AHs1Krv0C;;AGt1Kmy0C;EAAmB;AH01Ktz0C;;AG11K220C;EAAoB;EAAkB;EAAkB;EAAoB;EAAqD;AHk2K5+0C;;AGl2K0h1C;EAAY;EAAqC;EAA+C;EAAmD;EAA8D;AH02K3u1C;;AG12Kuw1C;EAAiB;EAA4C;EAAgD;EAA2D;AHi3K/61C;;AGj3K881C;EAAoB;EAA+C;EAAmD;EAA8D;AHw3Klo2C;;AGx3K8p2C;EAAiB;EAA4C;EAAgD;EAA2D;AH+3Kt02C;;AG/3Kk22C;EAAoB;EAA+C;EAAmD;EAA8D;AHs4Kth3C;;AGt4Kkj3C;EAAmB;EAA8C;EAAkD;EAA6D;AH64Klu3C;;AG74K8v3C;EAAoB;EAA+C;EAAmD;EAA8D;AHo5Kl73C;;AGp5K883C;EAAiC;EAA6B;AHy5K5g4C;;AGz5K0i4C;EAA+B;EAAgC;AH85Kzm4C;;AG95K0o4C;EAA0B;EAAkB;AHm6Ktr4C;;AGn6K6u4C;EAA8B;EAA8B;AHw6Kzy4C;;AGx6K814C;EAA2B;AH46Kz34C;;AG56Km54C;EAAwB;EAA0E;EAAkG;AHk7Kvl5C;;AGl7K0r5C;EAAgC;EAAsB;AHu7Khv5C;;AGv7Kuy5C;EAAwB;EAA0E;EAAkG;AH67K3+5C;;AG77K8k6C;EAA2B;EAA8B;AHk8Kvo6C;;AGl8K0p6C;EAAqB;EAA2G;AHu8K1x6C;;AGv8K636C;EAAwC;AH28Kr66C;;AG38K8/6C;EAAmB;EAA2G;AHg9K5n7C;;AGh9Kqu7C;EAAqB;EAA2G;EAAyG;AHs9K987C;;AGt9Kui8C;EAA8B;EAAoB;AH29Kzl8C;;AG39Kip8C;EAA4B;EAAoB;AHg+Kjs8C;;AGh+Kyv8C;EAA8B;AHo+Kvx8C;;AGp+K6y8C;EAA0B;EAA0E;EAAkG;AH0+Kn/8C;;AG1+Ksl9C;EAAuC;EAAkB;AH++K/o9C;;AG/+Kss9C;EAA2D;EAAsB;AHo/Kvx9C;;AGp/K209C;EAA6B;EAAsB;AHy/K939C;;AGz/Kk79C;EAAyB;EAAkB;AH8/K799C;;AG9/Kih+C;EAAyB;EAAkB;AHmgL5j+C;;AGngLgn+C;EAAyB;EAAkB;AHwgL3p+C;;AGxgL+s+C;EAAyB;EAAkB;AH6gL1v+C;;AG7gLiz+C;EAAwB;EAAoB;AHkhL71+C;;AGlhL24+C;EAA2B;EAAoB;AHuhL17+C;;AGvhLw++C;EAA2B;EAAoB;AH4hLvh/C;;AG5hLmk/C;EAAsC;EAAkB;AHiiL3n/C;;AGjiL+q/C;EAAwC;EAAoB;AHsiL3u/C;;AGtiLgy/C;EAAmD;EAAkB;AH2iLr2/C;;AG3iL45/C;EAAyB;IAAY;EHgjL/7/C;EGhjL48/C;IAAY;EHmjLx9/C;EGnjLk+/C;IAAY;EHsjL9+/C;EGtjLw//C;IAAiB;EHyjLzggD;EGzjLujgD;IAAiB;EH4jLxkgD;EG5jLsngD;IAAc;EH+jLpogD;AACF;AGhkL0pgD;EAAyB;IAAW;IAAiB;EHqkL7sgD;EGrkL+tgD;IAAW;IAAmB;EHykL7vgD;EGzkL6wgD;IAAU;EH4kLvxgD;EG5kLuygD;IAAW;EH+kLlzgD;EG/kLg0gD;IAAY;EHklL50gD;EGllLy1gD;IAAU;EHqlLn2gD;EGrlLg3gD;IAAiB;EHwlLj4gD;EGxlL64gD;IAAiB;EH2lL95gD;EG3lL06gD;IAAiB;EH8lL37gD;EG9lLy+gD;IAAiB;EHimL1/gD;EGjmLwihD;IAAc;EHomLtjhD;EGpmLykhD;IAAc;EHumLvlhD;EGvmL6mhD;IAAS;EH0mLtnhD;EG1mLmohD;IAAW;IAAkB;EH8mLhqhD;EG9mLmrhD;IAAiB;EHinLpshD;EGjnLsthD;IAAc;IAAkB;EHqnLtvhD;EGrnLowhD;IAAc;IAAiB;EHynLnyhD;EGznLozhD;IAAa;IAAmB;EH6nLp1hD;EG7nLw2hD;IAAe;IAAe;EHioLt4hD;AACF;AGloL45hD;EAA0B;IAAU;EHsoL97hD;EGtoL28hD;IAAU;EHyoLr9hD;EGzoLq+hD;IAAiB;EH4oLt/hD;EG5oLoiiD;IAAiB;EH+oLrjiD;EG/oLmmiD;IAAc;EHkpLjniD;EGlpLooiD;IAAe;EHqpLnpiD;AACF;AGtpLsqiD;EAA0B;IAAU;EH0pLxsiD;EG1pLotiD;IAAgB;EH6pLpuiD;EG7pL8uiD;IAAW;IAAkB;EHiqL3wiD;EGjqL8xiD;IAAc;IAAiB;EHqqL7ziD;EGrqL20iD;IAAc;IAAmB;EHyqL52iD;AACF,EI1qLA;AAAgE;EAAiB;EAAuB;AJ8qLxG;;AI9qL8H;EAAe;AJkrL7I;;AIlrL6J;EAAK;EAA8B;EAA6B;EAAiM;EAAgB;EAAgB;EAAc;AJ4rL5c;;AI5rLud;EAAK;EAAoB;AJisLhf;;AIjsLyf;EAAG;EAAqB;EAAc;AJusL/hB;;AIvsLwiB;EAAoB;EAAyC;AJ4sLrmB;;AI5sLsoB;EAAkB;EAAkB;AJitL1qB;;AIjtL8rB;EAAE;EAAc;AJstL9sB;;AIttLsuB;EAAS;AJ0tL/uB;;AI1tLkwB;EAAkB;EAAoG;AJ+tLx3B;;AI/tLs4B;EAAM;AJmuL54B;;AInuL05B;EAAQ;EAAc;EAAc;EAAkB;AJ0uLh9B;;AI1uLw+B;EAAI;AJ8uL5+B;;AI9uL0/B;EAAI;AJkvL9/B;;AIlvLwgC;EAAM;EAAyB;EAAqB;AJwvL5jC;;AIxvL0kC;EAAsC;EAAc;EAAoB;EAAe;EAAoB;EAAoB;EAAS;AJkwLltC;;AIlwL4tC;EAAc;AJswL1uC;;AItwL8vC;EAAgD;EAA0B;EAA6B;AJ4wLr2C;;AI5wL23C;EAAgB;AJgxL34C;;AIhxLw5C;EAAiB;AJoxLz6C;;AIpxLy7C;EAAS;AJwxLl8C;;AIxxL09C;EAAwD;AJ4xLlhD;;AI5xL8hD;EAAc;EAA6B;AJiyLzkD;;AIjyL6lD;EAA4B;AJqyLznD;;AIryLipD;EAA6B;EAA0B;AJ0yLxsD;;AI1yLqtD;EAAQ;AJ8yL7tD;;AI9yL+uD;EAAmD;AJkzLlyD;;AIlzL2yD;EAAS;AJszLpzD;;AItzL6zD;EAAgB;AJ0zL70D;;AI1zLu1D;EAAW;EAAgB;EAAS;AJg0L33D;;AIh0Lq4D;EAAS;AJo0L94D;;AIp0L85D;EAAmD;EAAc;AJy0L/9D;;AIz0Ly+D;EAAyC;EAAc;AJ80LhiE;;AI90L0iE;EAAqB;AJk1L/jE;;AIl1L8kE;EAAU;AJs1LxlE;;AIt1LumE;EAA+C;EAAc;AJ21LpqE;;AI31L0rE;EAAU;EAAY;AJg2LhtE;;AIh2L+tE;EAAS;AJo2LxuE;;AIp2LqvE;EAAiB;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AJm5LjpG;;AIn5LuqG;EAAW;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AJk8L7jI;;AIl8LmlI;EAAW;AJs8L9lI;;AIt8LymI;EAAyB;IAAW;EJ28L3oI;AACF;AI58L8pI;EAAyB;IAAW;EJg9LhsI;AACF;AIj9LmtI;EAA0B;IAAW;EJq9LtvI;AACF;AIt9L0wI;EAA0B;IAAW;EJ09L7yI;AACF;AI39Li0I;EAA0B;IAAW;EJ+9Lp2I;AACF;AIh+Lw3I;EAA0B;IAAW;EJo+L35I;AACF;AIr+L+6I;EAAS;AJw+Lx7I;;AIx+L28I;EAAW;AJ4+Lt9I;;AI5+Lw+I;EAAQ;AJg/Lh/I;;AIh/LggJ;EAAO;AJo/LvgJ;;AIp/LshJ;EAAU;AJw/LhiJ;;AIx/LkjJ;EAAU;AJ4/L5jJ;;AI5/L8kJ;EAAS;EAAS;EAAO;EAAQ;AJmgM/mJ;;AIngMqnJ;EAAQ;AJugM7nJ;;AIvgMwoJ;EAAQ;AJ2gMhpJ;;AI3gMupJ;EAAS;AJ+gMhqJ;;AI/gMwqJ;EAAS;AJmhMjrJ;;AInhM4rJ;EAAW;AJuhMvsJ;;AIvhMmtJ;EAAO;AJ2hM1tJ;;AI3hMguJ;EAAO;AJ+hMvuJ;;AI/hMgvJ;EAAS;AJmiMzvJ;;AIniMmwJ;EAAQ;AJuiM3wJ;;AIviMoxJ;EAAQ;AJ2iM5xJ;;AI3iMqyJ;EAAU;AJ+iM/yJ;;AI/iM4zJ;EAAS;AJmjMr0J;;AInjMm1J;EAAU;AJujM71J;;AIvjM42J;EAAgB;AJ2jM53J;;AI3jMu4J;EAAM;AJ+jM74J;;AI/jMw5J;EAAM;AJmkM95J;;AInkMy6J;EAAM;AJukM/6J;;AIvkM07J;EAAK;AJ2kM/7J;;AI3kMy8J;EAAK;AJ+kM98J;;AI/kM49J;EAAK;AJmlMj+J;;AInlM0+J;EAAO;EAAmB;AJwlMpgK;;AIxlMohK;EAAS;EAAiB;AJ6lM9iK;;AI7lMgkK;EAAO;EAAiB;AJkmMxlK;;AIlmM0mK;EAAM;EAAoB;AJumMpoK;;AIvmMqpK;EAAM;EAAgB;AJ4mM3qK;;AI5mMwrK;EAAM;EAAqB;AJinMntK;;AIjnMquK;EAAM;EAAiB;AJsnM5vK;;AItnM8wK;EAAM;EAAmB;AJ2nMvyK;;AI3nMuzK;EAAM;EAAkB;AJgoM/0K;;AIhoMk2K;EAAM;EAAmB;AJqoM33K;;AIroM+4K;EAAQ;EAA6B;AJ0oMp7K;;AI1oMk9K;EAAQ;EAA+B;AJ+oMz/K;;AI/oMqhL;EAAO;AJmpM5hL;;AInpM+iL;EAAO;AJupMtjL;;AIvpMskL;EAAO;AJ2pM7kL;;AI3pMgmL;EAAM;AJ+pMtmL;;AI/pMynL;EAAM;AJmqM/nL;;AInqMipL;EAAM;AJuqMvpL;;AIvqM2qL;EAAM;AJ2qMjrL;;AI3qMmsL;EAAM;AJ+qMzsL;;AI/qMytL;EAAM;AJmrM/tL;;AInrMkvL;EAAM;AJurMxvL;;AIvrM0wL;EAAM;AJ2rMhxL;;AI3rMiyL;EAAM;AJ+rMvyL;;AI/rM4zL;EAAM;AJmsMl0L;;AInsMs1L;EAAM;AJusM51L;;AIvsM+2L;EAAM;AJ2sMr3L;;AI3sMk4L;EAAM;AJ+sMx4L;;AI/sM05L;EAAM;AJmtMh6L;;AIntMk7L;EAAM;AJutMx7L;;AIvtMs8L;EAAM;AJ2tM58L;;AI3tM29L;EAAM;AJ+tMj+L;;AI/tMo/L;EAAO;AJmuM3/L;;AInuM6gM;EAAO;AJuuMphM;;AIvuMuiM;EAAO;AJ2uM9iM;;AI3uMikM;EAAM;AJ+uMvkM;;AI/uMwlM;EAAO;AJmvM/lM;;AInvMinM;EAAM;AJuvMvnM;;AIvvM4oM;EAAO;AJ2vMnpM;;AI3vMiqM;EAAS;AJ+vM1qM;;AI/vMksM;EAAc;AJmwMhtM;;AInwMquM;EAAM;AJuwM3uM;;AIvwMwvM;EAAQ;AJ2wMhwM;;AI3wMuxM;EAAa;AJ+wMpyM;;AI/wMwzM;EAAO;AJmxM/zM;;AInxM60M;EAAY;AJuxMz1M;;AIvxM42M;EAAoB;AJ2xMh4M;;AI3xM25M;EAAiB;AJ+xM56M;;AI/xMo8M;EAAW;AJmyM/8M;;AInyMi+M;EAAM;AJuyMv+M;;AIvyMo/M;EAAU;AJ2yM9/M;;AI3yM+gN;EAAQ;AJ+yMvhN;;AI/yMoiN;EAAM;AJmzM1iN;;AInzMujN;EAAQ;AJuzM/jN;;AIvzM2kN;EAAK;AJ2zMhlN;;AI3zM4lN;EAAM;AJ+zMlmN;;AI/zM8mN;EAAM;AJm0MpnN;;AIn0MgoN;EAAM;AJu0MtoN;;AIv0MmpN;EAAM;AJ20MzpN;;AI30MsqN;EAAK;AJ+0M3qN;;AI/0MyrN;EAAM;AJm1M/rN;;AIn1M4sN;EAAM;AJu1MltN;;AIv1M+tN;EAAM;AJ21MruN;;AI31MivN;EAAM;AJ+1MvvN;;AI/1MqwN;EAAM;AJm2M3wN;;AIn2M0xN;EAAK;AJu2M/xN;;AIv2M4yN;EAAO;EAAwB;AJ42M30N;;AI52M81N;EAAM;AJg3Mp2N;;AIh3Mg3N;EAAK;AJo3Mr3N;;AIp3Mi4N;EAAa;AJw3M94N;;AIx3M25N;EAAU;AJ43Mr6N;;AI53Ms7N;EAAQ;AJg4M97N;;AIh4My8N;EAAK;AJo4M98N;;AIp4My9N;EAAM;AJw4M/9N;;AIx4M0+N;EAAM;AJ44Mh/N;;AI54M2/N;EAAO;EAAuB;AJi5MzhO;;AIj5M2iO;EAAK;AJq5MhjO;;AIr5M6jO;EAAK;AJy5MlkO;;AIz5M+kO;EAAK;AJ65MplO;;AI75MgmO;EAAQ;AJi6MxmO;;AIj6MmnO;EAAM;AJq6MznO;;AIr6MqoO;EAAM;AJy6M3oO;;AIz6MupO;EAAM;AJ66M7pO;;AI76MwqO;EAAM;AJi7M9qO;;AIj7M0rO;EAAM;AJq7MhsO;;AIr7M4sO;EAAM;AJy7MltO;;AIz7M8tO;EAAmB;EAAuB;AJ87MxwO;;AI97M0xO;EAAa;AJk8MvyO;;AIl8MmzO;EAAQ;AJs8M3zO;;AIt8Mg1O;EAAQ;AJ08Mx1O;;AI18My2O;EAAM;AJ88M/2O;;AI98M03O;EAAK;AJk9M/3O;;AIl9M04O;EAAM;AJs9Mh5O;;AIt9M25O;EAAa;AJ09Mx6O;;AI19Mo7O;EAAc;AJ89Ml8O;;AI99M29O;EAAQ;AJk+Mn+O;;AIl+M++O;EAAa;AJs+M5/O;;AIt+M0gP;EAAW;AJ0+MrhP;;AI1+MiiP;EAAW;AJ8+M5iP;;AI9+M8jP;EAAsB;AJk/MplP;;AIl/MkxP;EAAQ;AJs/M1xP;;AIt/MsyP;EAAW;AJ0/MjzP;;AI1/Ms0P;EAAiB;EAAwB;EAAqB;AJggNp4P;;AIhgNo5P;EAAe;AJogNn6P;;AIpgNs7P;EAAa;AJwgNn8P;;AIxgNi/P;EAAU;AJ4gN3/P;;AI5gN8gQ;EAAkB;AJghNhiQ;;AIhhN2jQ;EAAU;AJohNrkQ;;AIphN2lQ;EAAW;AJwhNtmQ;;AIxhNqnQ;EAAa;AJ4hNloQ;;AI5hNmpQ;EAAgB;AJgiNnqQ;;AIhiNwrQ;EAAiB;AJoiNzsQ;;AIpiNquQ;EAAgB;AJwiNrvQ;;AIxiNgxQ;EAAa;AJ4iN7xQ;;AI5iNozQ;EAAW;AJgjN/zQ;;AIhjNo1Q;EAAc;AJojNl2Q;;AIpjNq3Q;EAAe;AJwjNp4Q;;AIxjNw5Q;EAAe;AJ4jNv6Q;;AI5jNk8Q;EAAa;AJgkN/8Q;;AIhkNw+Q;EAAgB;AJokNx/Q;;AIpkN+gR;EAAiB;AJwkNhiR;;AIxkN8jR;EAAmB;AJ4kNjlR;;AI5kNynR;EAAgB;AJglNzoR;;AIhlNsqR;EAAQ;AJolN9qR;;AIplNurR;EAAO;AJwlN9rR;;AIxlNusR;EAAO;AJ4lN9sR;;AI5lNytR;EAAO;AJgmNhuR;;AIhmN0uR;EAAyC;EAAuB;EAAqD;AJsmN/1R;;AItmNu5R;EAAwC;EAAwB;EAAyD;AJ4mNhhS;;AI5mN4kS;EAA+C;EAAsB;AJinNjpS;;AIjnNwsS;EAAiB;AJqnNztS;;AIrnNyuS;EAAiB;AJynN1vS;;AIznN0wS;EAAmB;AJ6nN7xS;;AI7nN+yS;EAAmB;AJioNl0S;;AIjoNo1S;EAAmB;AJqoNv2S;;AIroNy3S;EAAU;EAAgB;EAAuB;AJ2oN16S;;AI3oN67S;EAAmB;AJ+oNh9S;;AI/oNm+S;EAAmB;AJmpNt/S;;AInpNygT;EAAqB;AJupN9hT;;AIvpNmjT;EAAqB;AJ2pNxkT;;AI3pN6lT;EAAY;AJ+pNzmT;;AI/pN+nT;EAAS;AJmqNxoT;;AInqN6pT;EAAY;AJuqNzqT;;AIvqN6rT;EAAc;AJ2qN3sT;;AI3qNguT;EAAc;AJ+qN9uT;;AI/qN8vT;EAAa;AJmrN3wT;;AInrN8xT;EAAY;AJurN1yT;;AIvrN+zT;EAAa;AJ2rN50T;;AI3rNi2T;EAAY;AJ+rN72T;;AI/rNm4T;EAAgB;EAA6B;AJosNh7T;;AIpsN08T;EAAc;EAAkC;AJysN1/T;;AIzsN6hU;EAAU;AJ6sNviU;;AI7sNwjU;EAAQ;AJitNhkU;;AIjtNilU;EAAU;AJqtN3lU;;AIrtN0mU;EAAY;AJytNtnU;;AIztN2oU;EAAwB;AJ6tNnqU;;AI7tN2rU;EAAY;AJiuNvsU;;AIjuN4tU;EAAU;AJquNtuU;;AIruN8vU;EAAU;AJyuNxwU;;AIzuN6xU;EAAY;AJ6uNzyU;;AI7uNg0U;EAAY;AJivN50U;;AIjvNk2U;EAAc;AJqvNh3U;;AIrvNm4U;EAAa;AJyvNh5U;;AIzvNk6U;EAAiB;EAAsB;AJ8vNz8U;;AI9vNggV;EAAmB;EAAsB;AJmwNziV;;AInwN8lV;EAA6B;EAAsB;AJwwNjpV;;AIxwNusV;EAAiB;EAAsB;AJ6wN9uV;;AI7wNqyV;EAAiB;EAAsB;AJkxN50V;;AIlxNm4V;EAAgB;EAAsB;AJuxNz6V;;AIvxN89V;EAAoB;AJ2xNl/V;;AI3xN2gW;EAA4B;EAAsB;AJgyN7jW;;AIhyNinW;EAAmB;EAAsB;AJqyN1pW;;AIryNutW;EAAkB;EAAsB;AJ0yN/vW;;AI1yN6zW;EAAU;EAAkB;AJ+yNz1W;;AI/yNg5W;EAAc;EAAkB;AJozNh7W;;AIpzNq+W;EAAc;EAAkB;AJyzNrgX;;AIzzN0jX;EAAY;EAAkB;AJ8zNxlX;;AI9zN+oX;EAAa;EAAkB;AJm0N9qX;;AIn0NquX;EAAa;EAAkB;AJw0NpwX;;AIx0N2zX;EAAgB;AJ40N30X;;AI50Nw2X;EAAc;EAAkB;AJi1Nx4X;;AIj1N47X;EAAa;EAAkB;AJs1N39X;;AIt1N+gY;EAAa;EAAkB;AJ21N9iY;;AI31NqmY;EAAmB;AJ+1NxnY;;AI/1NgsY;EAAkB;AJm2NltY;;AIn2NsxY;EAAmB;AJu2NzyY;;AIv2No3Y;EAA6B;EAA2B;EAAoC;AJ62Nh9Y;;AI72NkhZ;EAAc;EAA2B;EAAqC;AJm3NhmZ;;AIn3NkqZ;EAA2B;EAA2B;EAAoC;AJy3N5vZ;;AIz3N8zZ;EAAW;EAAmC;AJ83N52Z;;AI93Nm7Z;EAAc;EAAqC;AJm4Nt+Z;;AIn4Ngja;EAAwB;AJu4Nxka;;AIv4Nima;EAAY;AJ24N7ma;;AI34Nqoa;EAAc;AJ+4Nnpa;;AI/4Nqqa;EAAgB;EAAsB;AJo5N3sa;;AIp5N8ta;EAAc;EAAoB;AJy5Nhwa;;AIz5Nixa;EAAe;EAA0B;AJ85N1za;;AI95Ni1a;EAAK;AJk6Nt1a;;AIl6No2a;EAAK;AJs6Nz2a;;AIt6Nm3a;EAAK;AJ06Nx3a;;AI16Nu4a;EAAK;AJ86N54a;;AI96N25a;EAAK;AJk7Nh6a;;AIl7N66a;EAAK;AJs7Nl7a;;AIt7Ni8a;EAAQ;AJ07Nz8a;;AI17Ny9a;EAAM;EAAoB;AJ+7Nn/a;;AI/7Nwgb;EAAO;EAAoB;AJo8Nnib;;AIp8Nojb;EAAM;EAAqB;AJy8N/kb;;AIz8Nqmb;EAAM;EAAsB;AJ88Njob;;AI98Nopb;EAAQ;EAAgC;AJm9N5rb;;AIn9Nytb;EAAQ;EAAyB;AJw9N1vb;;AIx9Noxb;EAAM;EAAqB;AJ69N/yb;;AI79Ni0b;EAAM;EAAoB;AJk+N31b;;AIl+Ng3b;EAAM;EAAoB;AJu+N14b;;AIv+N+5b;EAAQ;EAA8B;AJ4+Nr8b;;AI5+Ng+b;EAAM;EAAmB;AJi/Nz/b;;AIj/N6gc;EAAM;EAAkB;AJs/Nric;;AIt/Nwjc;EAAM;EAAqB;AJ2/Nnlc;;AI3/Nymc;EAAM;EAAoB;AJggOnoc;;AIhgOopc;EAAM;EAAe;AJqgOzqc;;AIrgOyrc;EAAM;EAAsB;AJ0gOrtc;;AI1gOwuc;EAAQ;EAA8B;AJ+gO9wc;;AI/gO6yc;EAAM;EAAiB;AJohOp0c;;AIphOk1c;EAAM;AJwhOx1c;;AIxhO42c;EAAM;AJ4hOl3c;;AI5hOq4c;EAAM;AJgiO34c;;AIhiO85c;EAAM;AJoiOp6c;;AIpiOs7c;EAAM;AJwiO57c;;AIxiOi9c;EAAM;AJ4iOv9c;;AI5iO8+c;EAAM;AJgjOp/c;;AIhjOugd;EAAM;AJojO7gd;;AIpjOiid;EAAM;AJwjOvid;;AIxjOsjd;EAAM;AJ4jO5jd;;AI5jOild;EAAM;AJgkOvld;;AIhkO2md;EAAW;AJokOtnd;;AIpkOsod;EAAa;AJwkOnpd;;AIxkOqqd;EAAe;AJ4kOprd;;AI5kOgtd;EAAY;AJglO5td;;AIhlO6ud;EAAc;AJolO3vd;;AIplOsxd;EAAc;AJwlOpyd;;AIxlO0zd;EAAY;AJ4lOt0d;;AI5lOu4d;EAAS;EAAkB;AJimOl6d;;AIjmOs7d;EAAU;EAAe;AJsmO/8d;;AItmO69d;EAAS;AJ0mOt+d;;AI1mOw/d;EAAkB;AJ8mO1ge;;AI9mO8he;EAAS;AJknOvie;;AIlnO0je;EAAW;EAAe;AJunOple;;AIvnOume;EAAU;EAAmB;AJ4nOpoe;;AI5nOwpe;EAAS;EAAiB;AJioOlre;;AIjoOmse;EAAa;AJqoOhte;;AIroOgue;EAAW;AJyoO3ue;;AIzoO2ve;EAAe;AJ6oO1we;;AI7oO0xe;EAAa;AJipOvye;;AIjpOuze;EAAY;AJqpOn0e;;AIrpOm1e;EAAW;AJypO91e;;AIzpOu3e;EAAY;AJ6pOn4e;;AI7pO65e;EAAQ;AJiqOr6e;;AIjqOu7e;EAAc;AJqqOr8e;;AIrqOu9e;EAAe;AJyqOt+e;;AIzqOu/e;EAAgB;AJ6qOvgf;;AI7qO8hf;EAAe;AJirO7if;;AIjrOmkf;EAAiB;EAA8B;AJsrOlnf;;AItrOuqf;EAAe;EAAoB;AJ2rO1sf;;AI3rOqvf;EAAY;EAAoB;AJgsOrxf;;AIhsOm0f;EAAgB;EAA8B;AJqsOj3f;;AIrsOy6f;EAAiB;EAAoB;AJ0sO98f;;AI1sO0/f;EAAY;EAAoB;AJ+sO1hgB;;AI/sOkkgB;EAAc;EAAoB;AJotOpmgB;;AIptOgpgB;EAAiB;EAAoB;AJytOrrgB;;AIztOiugB;EAAe;EAAoB;AJ8tOpwgB;;AI9tOkzgB;EAAe;EAAoB;AJmuOr1gB;;AInuOi4gB;EAAgB;EAAoB;AJwuOr6gB;;AIxuOi9gB;EAAc;EAAoB;AJ6uOn/gB;;AI7uO+hhB;EAAe;EAAoB;AJkvOlkhB;;AIlvOgnhB;EAAgB;EAAoB;AJuvOpphB;;AIvvOgshB;EAAc;EAAoB;AJ4vOluhB;;AI5vOgxhB;EAAe;EAAoB;AJiwOnzhB;;AIjwO81hB;EAAe;EAAoB;AJswOj4hB;;AItwO46hB;EAA0B;EAAoB;AJ2wO19hB;;AI3wOqgiB;EAAiB;EAAoB;AJgxO1iiB;;AIhxOuliB;EAAiB;EAAoB;AJqxO5niB;;AIrxOwqiB;EAAc;EAAoB;AJ0xO1siB;;AI1xOsviB;EAAgB;EAAoB;AJ+xO1xiB;;AI/xOs0iB;EAAe;EAAoB;AJoyOz2iB;;AIpyOq5iB;EAA2B;EAAoB;AJyyOp8iB;;AIzyOi/iB;EAAe;EAAoB;AJ8yOphjB;;AI9yOikjB;EAAiB;EAAoB;AJmzOtmjB;;AInzOmpjB;EAAiB;EAAoB;AJwzOxrjB;;AIxzOqujB;EAAW;AJ4zOhvjB;;AI5zO+wjB;EAAc;AJg0O7xjB;;AIh0OuzjB;EAAW;AJo0Ol0jB;;AIp0O40jB;EAAW;EAAwE;AJy0O/5jB;;AIz0O+/jB;EAAsB;AJ60OrhkB;;AI70OwnkB;EAAW;EAA0E;AJk1O7skB;;AIl1O+ykB;EAAQ;EAAqE;AJu1O53kB;;AIv1Oy9kB;EAAmB;AJ21O5+kB;;AI31O+klB;EAAW;EAAwC;AJg2OlolB;;AIh2OyrlB;EAAW;EAA2E;AJq2O/wlB;;AIr2Ok3lB;EAAyB;AJy2O34lB;;AIz2O8+lB;EAAc;EAA8C;AJ82O1imB;;AI92OummB;EAAa;EAAsB;EAA8B;AJo3OxqmB;;AIp3O2wmB;EAAc;EAA8B;AJy3OvzmB;;AIz3O00mB;EAAQ;EAA2G;AJ83O77mB;;AI93OginB;EAAc;AJk4O9inB;;AIl4OuonB;EAAM;EAA2G;AJu4OxvnB;;AIv4Oi2nB;EAA2B;EAAoB;AJ44Oh5nB;;AI54Ou8nB;EAAM;AJg5O78nB;;AIh5Oi+nB;EAAc;AJo5O/+nB;;AIp5OgqoB;EAAY;EAAyB;EAAsJ;EAA8I;EAAsK;AJ45O/opB;;AI55OkspB;EAAoB;EAA4B;AJi6OlvpB;;AIj6OqypB;EAAkC;AJq6Ov0pB;;AIr6Og2pB;EAAc;AJy6O92pB;;AIz6Os4pB;EAAa;AJ66On5pB;;AI76Os8pB;EAAW;AJi7Oj9pB;;AIj7Os+pB;EAAsB;AJq7O5/pB;;AIr7O+gqB;EAAkC;AJy7OjjqB;;AIz7O8jqB;EAAsC;EAAkB;EAAuD;EAAkB;EAAc;EAAkB;AJk8O/tqB;;AIl8O0uqB;EAAa;AJs8OvvqB;;AIt8OowqB;EAAW;EAAkB;EAA8D;EAA0C;EAA0C;EAA4C;EAA2C;EAAuD;EAAkB;EAAc;AJm9OjmrB;;AIn9OmnrB;EAAiD;AJu9OpqrB;;AIv9OmtrB;EAAiF;AJ29OpyrB;;AI39Om1rB;EAAqE;AJ+9Ox5rB;;AI/9Oo8rB;EAAiF;AJm+OrhsB;;AIn+OoksB;EAA6E;AJu+OjpsB;;AIv+O+rsB;EAAiF;AJ2+OhxsB;;AI3+O+zsB;EAAsB;EAAa;AJg/Ol2sB;;AIh/O23sB;EAAqB;EAAkB;EAAkB;EAAoB;EAAoD;AJw/O5/sB;;AIx/OuitB;EAAwB;AJ4/O/jtB;;AI5/OontB;EAA6C;EAAkB;EAAkB;EAAoB;AJmgPzttB;;AIngPuwtB;EAAqB;AJugP5xtB;;AIvgPk1tB;EAAwB;AJ2gP12tB;;AI3gPg6tB;EAA+C;EAAkB;EAAkB;EAAoB;AJkhPvguB;;AIlhPqjuB;EAAuB;AJshP5kuB;;AIthPiouB;EAAwB;EAAkB;EAAkB;EAAoB;EAAqD;AJ8hPtwuB;;AI9hPozuB;EAAmB;EAA+C;AJmiPt3uB;;AIniPk5uB;EAAkG;EAA4C;AJwiPhivB;;AIxiP+jvB;EAA8G;EAA+C;AJ6iP5tvB;;AI7iPwvvB;EAAkG;EAA4C;AJkjPt4vB;;AIljPk6vB;EAA8G;EAA+C;AJujP/jwB;;AIvjP2lwB;EAA0G;EAA8C;AJ4jPnvwB;;AI5jP+wwB;EAA8G;EAA+C;AJikP56wB;;AIjkPw8wB;EAAyE;EAA4C;AJskP7jxB;;AItkPylxB;EAA+E;EAAwD;AJ2kPhuxB;;AI3kP4vxB;EAAyE;EAAqD;AJglP13xB;;AIhlPs5xB;EAA+E;EAAwD;AJqlP7hyB;;AIrlPyjyB;EAA6E;EAAuD;AJ0lP7ryB;;AI1lPytyB;EAA+E;EAAwD;AJ+lPh2yB;;AI/lP43yB;EAAiB;EAAkB;EAAkB;EAAoB;EAAoD;AJumPz/yB;;AIvmPoizB;EAAoB;AJ2mPxjzB;;AI3mP6mzB;EAAqC;EAAkB;EAAkB;EAAoB;AJknP1szB;;AIlnPwvzB;EAAiB;AJsnPzwzB;;AItnP+zzB;EAAoB;AJ0nPn1zB;;AI1nPy4zB;EAAuC;EAAkB;EAAkB;EAAoB;AJioPx+zB;;AIjoPsh0B;EAAmB;AJqoPzi0B;;AIroP8l0B;EAAoB;EAAkB;EAAkB;EAAoB;EAAqD;AJ6oP/t0B;;AI7oP6w0B;EAAY;EAAqC;EAA+C;EAAmD;EAA8D;AJqpP990B;;AIrpP0/0B;EAAiB;EAA4C;EAAgD;EAA2D;AJ4pPlq1B;;AI5pPis1B;EAAoB;EAA+C;EAAmD;EAA8D;AJmqPr31B;;AInqPi51B;EAAiB;EAA4C;EAAgD;EAA2D;AJ0qPzj2B;;AI1qPql2B;EAAoB;EAA+C;EAAmD;EAA8D;AJirPzw2B;;AIjrPqy2B;EAAmB;EAA8C;EAAkD;EAA6D;AJwrPr92B;;AIxrPi/2B;EAAoB;EAA+C;EAAmD;EAA8D;AJ+rPrq3B;;AI/rPis3B;EAAiC;EAA6B;AJosP/v3B;;AIpsP6x3B;EAA+B;EAAgC;AJysP513B;;AIzsP633B;EAA0B;EAAkB;AJ8sPz63B;;AI9sPg+3B;EAA8B;EAA8B;AJmtP5h4B;;AIntPil4B;EAA2B;AJutP5m4B;;AIvtPso4B;EAAwB;EAA0E;EAAkG;AJ6tP104B;;AI7tP664B;EAAgC;EAAsB;AJkuPn+4B;;AIluP0h5B;EAAwB;EAA0E;EAAkG;AJwuP9t5B;;AIxuPi05B;EAA2B;EAA8B;AJ6uP135B;;AI7uP645B;EAAqB;EAA2G;AJkvP7g6B;;AIlvPgn6B;EAAwC;AJsvPxp6B;;AItvPiv6B;EAAmB;EAA2G;AJ2vP/26B;;AI3vPw96B;EAAqB;EAA2G;EAAyG;AJiwPjs7B;;AIjwP0x7B;EAA8B;EAAoB;AJswP507B;;AItwPo47B;EAA4B;EAAoB;AJ2wPp77B;;AI3wP4+7B;EAA8B;AJ+wP1g8B;;AI/wPgi8B;EAA0B;EAA0E;EAAkG;AJqxPtu8B;;AIrxPy08B;EAAuC;EAAkB;AJ0xPl48B;;AI1xPy78B;EAA2D;EAAsB;AJ+xP1g9B;;AI/xP8j9B;EAA6B;EAAsB;AJoyPjn9B;;AIpyPqq9B;EAAyB;EAAkB;AJyyPht9B;;AIzyPow9B;EAAyB;EAAkB;AJ8yP/y9B;;AI9yPm29B;EAAyB;EAAkB;AJmzP949B;;AInzPk89B;EAAyB;EAAkB;AJwzP7+9B;;AIxzPoi+B;EAAwB;EAAoB;AJ6zPhl+B;;AI7zP8n+B;EAA2B;EAAoB;AJk0P7q+B;;AIl0P2t+B;EAA2B;EAAoB;AJu0P1w+B;;AIv0Psz+B;EAAsC;EAAkB;AJ40P92+B;;AI50Pk6+B;EAAwC;EAAoB;AJi1P99+B;;AIj1Pmh/B;EAAmD;EAAkB;AJs1Pxl/B;;AIt1P+o/B;EAAyB;IAAY;EJ21Plr/B;EI31P+r/B;IAAY;EJ81P3s/B;EI91Pqt/B;IAAY;EJi2Pju/B;EIj2P2u/B;IAAiB;EJo2P5v/B;EIp2P0y/B;IAAiB;EJu2P3z/B;EIv2Py2/B;IAAc;EJ02Pv3/B;AACF;AI32P64/B;EAAyB;IAAW;IAAiB;EJg3Ph8/B;EIh3Pk9/B;IAAW;IAAmB;EJo3Ph//B;EIp3PgggC;IAAU;EJu3P1ggC;EIv3P0hgC;IAAW;EJ03PrigC;EI13PmjgC;IAAY;EJ63P/jgC;EI73P4kgC;IAAU;EJg4PtlgC;EIh4PmmgC;IAAiB;EJm4PpngC;EIn4PgogC;IAAiB;EJs4PjpgC;EIt4P6pgC;IAAiB;EJy4P9qgC;EIz4P4tgC;IAAiB;EJ44P7ugC;EI54P2xgC;IAAc;EJ+4PzygC;EI/4P4zgC;IAAc;EJk5P10gC;EIl5Pg2gC;IAAS;EJq5Pz2gC;EIr5Ps3gC;IAAW;IAAkB;EJy5Pn5gC;EIz5Ps6gC;IAAiB;EJ45Pv7gC;EI55Py8gC;IAAc;IAAkB;EJg6Pz+gC;EIh6Pu/gC;IAAc;IAAiB;EJo6PthhC;EIp6PuihC;IAAa;IAAmB;EJw6PvkhC;EIx6P2lhC;IAAe;IAAe;EJ46PznhC;AACF;AI76P+ohC;EAA0B;IAAU;EJi7PjrhC;EIj7P8rhC;IAAU;EJo7PxshC;EIp7PwthC;IAAiB;EJu7PzuhC;EIv7PuxhC;IAAiB;EJ07PxyhC;EI17Ps1hC;IAAc;EJ67Pp2hC;EI77Pu3hC;IAAe;EJg8Pt4hC;AACF;AIj8Py5hC;EAA0B;IAAU;EJq8P37hC;EIr8Pu8hC;IAAgB;EJw8Pv9hC;EIx8Pi+hC;IAAW;IAAkB;EJ48P9/hC;EI58PihiC;IAAc;IAAiB;EJg9PhjiC;EIh9P8jiC;IAAc;IAAmB;EJo9P/liC;AACF;AAj9PA;AKiEE;ECmQE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;APi6PJ;;AKt6PE;EEPI;ECZF;EDwBA;EAZE;ECZF;EDwBA;EE8QA,iBA3RU;EA4RV;EAQA,iCAnSW;EJ6BT;EACA;EACA;EACA;EACA;AL65PN;;ASzuPE;EFrNI;ECZF;EDwBA;APw7PJ;;AUt7PM;EACE;EHfF;ECZF;EDwBA;EEmNI;EC9MA;AV47PR;;ASzuPE;EFpOI;ECZF;EDwBA;APu8PJ;;AUr8PM;EACE;EHfF;ECZF;EDwBA;EEkOI;EC7NA;AV28PR;;ASzuPE;EFnPI;ECZF;EDwBA;APs9PJ;;AUp9PM;EACE;EHfF;ECZF;EDwBA;EEmPI;EC9OA;AV09PR;;ASvuPE;EFpQI;ECZF;EDwBA;APq+PJ;;AUn+PM;EACE;EHfF;ECZF;EDwBA;EEoQI;EC/PA;AVy+PR;;ASx7PE;EFtDE;APk/PJ;;ASt8PE;EFxDI;ECZF;EDwBA;APw/PJ;;ASx7PE;EFhEE;AP4/PJ;;AW18PE;;;EJlDE;APkgQJ;;ASn6PE;;EAGI,wCA9HU;ATmiQhB;;ASj6PE;EAEI,qCApIU;ATuiQhB;;AS35PE;;EAGI,wBA9IS;EA+IT;AT65PN;;ASz5PE;EAEI,qBArJS;EAsJT;AT25PN;;ASv5PE;EAEI;ATy5PN;;ASj5PE;EFzIE;AP8hQJ;;AS34PE;EFnJE;APkiQJ;;ASj4PE;;;EFjKE;APwiQJ;;AShwPE;EAEI,YAkHK;ATgpPX;;AS9vPE;EAEI,gBA4GK;ATopPX;;ASlxPE;EAEI,YAmIuB;ATipP7B;;AS1uPE;;EAGI;AT4uPN;;AS9sPE;;ED9XE;EDmBA;ECnBA;EDmBA;APikQJ;;AU/jQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVqkQR;;AKpgQE;EAGI;EACA;EACA;ALqgQN;;AKjgQE;EAEI;EACA;EACA;EACA;EACA;;;;;IAAA;EAMA;ALmgQN;;AYxoQE;ENoSE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EKtCE;EACA;EACA;EACA;AZ+pQN;;AU1nQM;EACE;EFtBJ;EIZI;EFoCA;AV8nQR;;AY7pQE;EAEI;AZ+pQN;;AUroQM;EACE;EFtBJ;EICI;EFuBA;AVyoQR;;AY3pQE;EAYE;AZmpQJ;;AavrQE;EP+RE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EMjCE;EACA;EACA;EACA;ELWF;EKRE;Ab6sQN;;AUhrQM;EACE;EFtBJ;EKJI;EH4BA;AVorQR;;Aa3sQE;EDiBE;AZ8rQJ;;Aa3sQE;EAEI;Ab6sQN;;AU/rQM;EACE;EFtBJ;EKaI;EHWA;AVmsQR;;AazsQE;ECsEE,WAnBK;EAoBL,YApBK;EAqBL;EDhEE;EL1BF;EDmBA;ECnBA;EDmBA;EMqBE;EAUA;AbsrQN;;Ac3oQE;EAEI;Ad6oQN;;AcxoQI;EAUI;EACA,gBA1CC;EA2CD,eA3CC;Ad6qQT;;Ae/sQI;EDiEA;IEzFA;IACA;IACA;IACA;IACA;IACA;IRhBA;IQkBA;IRlBA;IQoBA;IACA,YA3BwB;IA4BxB,WAtB0B;EhBkwQ5B;AACF;AehuQI;EDiEA;IE3EE;EhB8uQJ;AACF;AeruQI;ECPA;IACE;IACA;IACA,kBAhEgB;IAiEhB;IACA;IACA;IRlCF;IQoCE;IRpCF;IQsCE;IACA,wBA/BgB;IAgChB,uBAhCgB;EhB+wQpB;AACF;AervQI;ECPA;IAeI;EhBivQN;AACF;Ac/pQI;EAEI,WA3DC;EA4DD,YA5DC;EG3BL,eAHsB;EAItB,kBAJsB;EAcpB,iBANwB;EAOxB,gBAPwB;AjBsvQ9B;;AcvpQM;EAEI,gBA3ED;EA4EC,eA5ED;AdquQT;;AcnpQE;EGhJE;EACA;EACA,YH4DK;ENrEL;ESeE;EACA,WHqDG;EGpDH;AjBmyQN;;AU/xQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVqyQR;;Aa5xQI;ELjCA;EDmBA;ECnBA;EDmBA;APizQJ;;AU/yQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVqzQR;;AalyQI;EAEI;AboyQR;;Aa5xQI;EAII;Ab4xQR;;AavxQE;EAEI;EACA;EACA;AbyxQN;;AarxQE;EAEI;AbuxQN;;AanxQE;EEpEE;EACA;EACA;EACA;EACA;EACA;Af21QJ;;AanxQE;EAEI;EACA;EACA;AbqxQN;;AS10QE;EFjBE;AP+1QJ;;AkBnxQI;EXxFE;ECZF;EDwBA;APq2QJ;;AkBh5PE;EXjeI;ECZF;EDwBA;AP22QJ;;AkBt5PE;EA9QI;EXnNA;ECZF;EDwBA;APk3QJ;;AkBjpQM;EAEI;AlBmpQV;;AkB9oQQ;EAEI,yBAhRO;EX0Bb;ECZF;EDwBA;AP63QJ;;AkBxoQI;EXrPA;APi4QJ;;ASt2QE;EF3BE;APq4QJ;;AkBzzQI;EXxFE;ECZF;EDwBA;AP24QJ;;AkBt7PE;EXjeI;ECZF;EDwBA;APi5QJ;;AkB57PE;EA9QI;EXnNA;ECZF;EDwBA;APw5QJ;;AkBvrQM;EAEI;AlByrQV;;AkBprQQ;EAEI,yBAhRO;EX0Bb;ECZF;EDwBA;APm6QJ;;AkB9qQI;EXrPA;APu6QJ;;AmBp9QE;EAEI;EACA;EACA;AnBs9QN;;AmBn9QI;EAEI;AnBq9QR;;AmBh9QE;EZmBI;ECZF;EDwBA;EY3BE;EAGA;EACA;EACA;EACA;AnBi9QN;;AoBz/QE;EduTE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EazDE;EACA;EACA;ApBghRN;;AoB5gRE;EZgCE;EDmBA;ECnBA;EDmBA;Ea/CE;EACA;EACA;EACA;ApBghRN;;AUl+QM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVw+QR;;AoBrhRE;EAEI;EACA;ApBuhRN;;AoBnhRE;EZcE;EDmBA;ECnBA;EDmBA;APy/QJ;;AUv/QM;EACE;EFtBJ;EM8NI;EJtMA;AV2/QR;;AU9/QM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVogRR;;AoBniRE;EZOE;EDmBA;ECnBA;EDmBA;EalBE;ApBmiRN;;AU/gRM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVqhRR;;AoBxiRE;EZLE;EDmBA;ECnBA;EDmBA;EaVE;EACA;ApB4iRN;;AUjiRM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVuiRR;;AoBjjRE;EZdE;EDmBA;ECnBA;EDmBA;EaDE;ApBqjRN;;AUljRM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVwjRR;;AoB1jRE;EbfI;ECZF;EDwBA;EaQE;ApB4jRN;;AqBp9PE;EAEI;EACA,eD/mB+C;ApBqkRrD;;AqBt5OE;EAqBI,YZnsCmC;ATwkRzC;;AsBp+QE;EAcM;AtB09QR;;AW71QE;EAEI;AX+1QN;;AsB5+QE;;EAcM;AtBm+QR;;AWt1QI;;EAEI;AXy1QR;;AsB/9QE;EAEI;AtBi+QN;;AsBriRI;EACE;IdlFF;IcoFI;EtBwiRN;EsBpiRI;IACE;IdzFJ;Ic2FI;EtBsiRN;EsBliRI;IACE;IdhGJ;IcuGI;EtB+hRN;EsB3hRI;Id3GF;Ic6GI;EtB6hRN;AACF;AqB/zPE;EAEI,WE52BY;EF62BZ,YE72BY;AvB6qRlB;;AWx2QE;EAEI,4BUowCA;ArBsmON;;AwB5mQE;EAEI,YfjhBmC;AT+nRzC;;AyBxjRI;;;ECxFE;ECZF;EDwBA;A1B4oRJ;;AyBvrQE;;;ECjeI;ECZF;EDwBA;A1BopRJ;;AyB/rQE;;;EA9QI;ECnNA;ECZF;EDwBA;A1B6pRJ;;AyB57QM;;EAEI;AzB+7QV;;AyB17QQ;;EAEI,yBAhRO;EC0Bb;ECZF;EDwBA;A1B0qRJ;;AyBr7QI;;ECrPA;A1B+qRJ;;AyBnmRI;;;;ECxFE;ECZF;EDwBA;A1BwrRJ;;A4BngQE;;EFjsBI;ECZF;EDwBA;EAAA;A1BgsRJ;;A4B3gQE;;;;;;EFjsBI;ECZF;EDwBA;EAZE;ECZF;EDwBA;A1B8sRJ;;A4Bl/PE;EACE;IFzuBE;ICZF;IDwBA;IAAA;E1BstRF;E4Bp/PE;IF9uBE;ICZF;IDwBA;IAZE;ICZF;IDwBA;E1B8tRF;AACF;A4Bv/PE;EACE;IFrvBE;ICZF;IDwBA;IAZE;ICZF;IDwBA;E1BwuRF;E4Bz/PE;IF3vBE;ICZF;IDwBA;IAAA;E1B8uRF;AACF;A4B7zQQ;;;EAEI;A5Bg0QZ;;A4BzzQQ;;;EAEI;A5B6zQZ;;AAh0RA,sB","sources":["webpack://webpackNumbers/./src/assets/styles/views/wireframe/main.scss","webpack://webpackNumbers/./src/assets/styles/views/admin/register/main.scss","webpack://webpackNumbers/./src/assets/styles/variables/variables.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/wireframe.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/admin_user_form.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/admin_user_main.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/typography/_typography.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/theme/_css.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/theme/_gss.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/rtl/_rtl.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/notched-outline/_mixins.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-cell.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-header-cell.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/icon-button/_icon-button-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/dom/_dom.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/focus-ring/_focus-ring.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/touch-target/_touch-target.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/ripple/_ripple-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-progress-indicator.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-pagination.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/select/_select-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/floating-label/_mixins.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/select/_select-icon-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/list/_evolution-mixins.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/node_modules/@material/ripple/_ripple-theme.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/node_modules/@material/theme/_css.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/node_modules/@material/theme/_gss.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/_checkbox-theme.scss"],"sourcesContent":["body {\r\n    display: block;\r\n    margin: 0px !important;\r\n}\r\n\r\n\r\n/* START :: VARIABLES */\r\n\r\n@import '../../variables/variables.scss';\r\n\r\n/* END :: VARIABLES */\r\n\r\n\r\n/* START :: TAILWIND CSS */\r\n\r\n@import '../tailwind-output/wireframe.scss';\r\n\r\n/* END :: TAILWIND CSS */","@import '../../wireframe/main.scss';\r\n@import '../../tailwind-output/admin_user_form.scss';\r\n@import '../../tailwind-output/admin_user_main.scss';\r\n\r\n/* START :: TABLE CSS */\r\n\r\n@import \"@material/data-table/mdc-data-table\";\r\n\r\n/* END :: TABLE CSS */",":root {\r\n    --theme-default-color: rgba(249, 120, 23);\r\n    --theme-default-color-disabled: rgb(223, 145, 85);\r\n    --theme-gray-color: rgb(175, 175, 175);\r\n    --theme-gray-color-disabled: rgb(216, 215, 215);\r\n    --theme-success-color: rgb(19, 133, 57);\r\n    --theme-success-color-disabled: rgb(107, 190, 135);\r\n    --theme-danger-color: rgb(185, 26, 26);\r\n    --theme-danger-color-disabled: rgb(182, 118, 118);\r\n    --theme-warning-color: rgb(202, 128, 17);\r\n    --theme-warning-color-disabled: rgb(175, 150, 111);\r\n    --theme-info-color: rgb(2, 137, 170);\r\n    --theme-info-color-disabled: rgb(108, 163, 177);\r\n    --theme-primary-color: rgb(11, 59, 216);\r\n    --theme-primary-color-disabled: rgb(76, 93, 146);\r\n}","/*! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\"\"}html{-webkit-text-size-adjust:100%;font-feature-settings:normal;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}@media (min-width:2811px){.container{max-width:2811px}}.visible{visibility:visible}.invisible{visibility:hidden}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-10{top:2.5rem}.left-0{left:0}.right-0{right:0}.right-4{right:1rem}.bottom-16{bottom:4rem}.top-0{top:0}.top-4{top:1rem}.left-20{left:5rem}.top-28{top:7rem}.top-12{top:3rem}.-left-14{left:-3.5rem}.-left-7{left:-1.75rem}.bottom-9{bottom:2.25rem}.left-\\[-7rem\\]{left:-7rem}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-0{z-index:0}.m-1{margin:.25rem}.m-0{margin:0}.my-24{margin-bottom:6rem;margin-top:6rem}.mx-auto{margin-left:auto;margin-right:auto}.mx-12{margin-left:3rem;margin-right:3rem}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-0{margin-bottom:0;margin-top:0}.my-1{margin-bottom:.25rem;margin-top:.25rem}.mx-4{margin-left:1rem;margin-right:1rem}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-1{margin-left:.25rem;margin-right:.25rem}.\\!mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.\\!my-1{margin-bottom:.25rem!important;margin-top:.25rem!important}.mb-32{margin-bottom:8rem}.mt-12{margin-top:3rem}.mb-12{margin-bottom:3rem}.mr-2{margin-right:.5rem}.mt-1{margin-top:.25rem}.mb-2{margin-bottom:.5rem}.ml-2{margin-left:.5rem}.mb-0{margin-bottom:0}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mt-2{margin-top:.5rem}.mb-3{margin-bottom:.75rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-0{margin-top:0}.mt-3{margin-top:.75rem}.mr-4{margin-right:1rem}.ml-0{margin-left:0}.mr-0{margin-right:0}.ml-6{margin-left:1.5rem}.ml-64{margin-left:16rem}.mr-72{margin-right:18rem}.-mt-1{margin-top:-.25rem}.ml-4{margin-left:1rem}.-mt-2{margin-top:-.5rem}.mb-1{margin-bottom:.25rem}.block{display:block}.\\!block{display:block!important}.inline-block{display:inline-block}.flex{display:flex}.\\!flex{display:flex!important}.inline-flex{display:inline-flex}.table{display:table}.table-cell{display:table-cell}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.grid{display:grid}.contents{display:contents}.hidden{display:none}.h-52{height:13rem}.h-full{height:100%}.h-8{height:2rem}.h-32{height:8rem}.h-16{height:4rem}.h-96{height:24rem}.h-44{height:11rem}.h-1{height:.25rem}.h-48{height:12rem}.h-40{height:10rem}.h-36{height:9rem}.h-14{height:3.5rem}.h-11{height:2.75rem}.h-2{height:.5rem}.h-fit{height:-moz-fit-content;height:fit-content}.h-24{height:6rem}.h-4{height:1rem}.h-\\[400px\\]{height:400px}.max-h-48{max-height:12rem}.w-full{width:100%}.w-8{width:2rem}.w-32{width:8rem}.w-16{width:4rem}.w-max{width:-moz-max-content;width:max-content}.w-6{width:1.5rem}.w-1{width:.25rem}.w-2{width:.5rem}.w-auto{width:auto}.w-48{width:12rem}.w-40{width:10rem}.w-36{width:9rem}.w-64{width:16rem}.w-72{width:18rem}.w-80{width:20rem}.w-\\[fit-content\\]{width:-moz-fit-content;width:fit-content}.w-\\[19rem\\]{width:19rem}.\\!w-28{width:7rem!important}.w-1\\/6{width:16.666667%}.w-20{width:5rem}.w-4{width:1rem}.w-24{width:6rem}.w-\\[130px\\]{width:130px}.\\!max-w-full{max-width:100%!important}.flex-1{flex:1 1 0%}.flex-shrink{flex-shrink:1}.flex-grow{flex-grow:1}.rotate-45{--tw-rotate:45deg}.rotate-45,.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.resize{resize:both}.list-disc{list-style-type:disc}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-flow-row{grid-auto-flow:row}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.content-center{align-content:center}.content-between{align-content:space-between}.content-evenly{align-content:space-evenly}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.items-stretch{align-items:stretch}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.\\!justify-between{justify-content:space-between!important}.justify-evenly{justify-content:space-evenly}.gap-12{gap:3rem}.gap-4{gap:1rem}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.25rem*var(--tw-space-y-reverse));margin-top:calc(.25rem*(1 - var(--tw-space-y-reverse)))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)))}.divide-gray-200>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(229 231 235/var(--tw-divide-opacity))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-x-scroll{overflow-x:scroll}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-md{border-radius:.375rem}.rounded{border-radius:.25rem}.rounded-lg{border-radius:.5rem}.rounded-full{border-radius:9999px}.rounded-none{border-radius:0}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-3xl{border-radius:1.5rem}.rounded-sm{border-radius:.125rem}.rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.rounded-b-md{border-bottom-left-radius:.375rem;border-bottom-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-0{border-width:0}.border-y-2{border-top-width:2px}.border-b-2,.border-y-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-r-2{border-right-width:2px}.border-l-4{border-left-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity))}.border-yellow-500{--tw-border-opacity:1;border-color:rgb(234 179 8/var(--tw-border-opacity))}.border-akwaaba-orange-light{--tw-border-opacity:1;border-color:rgb(255 161 91/var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgb(156 163 175/var(--tw-border-opacity))}.border-red-600{--tw-border-opacity:1;border-color:rgb(220 38 38/var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-akwaaba-orange-dark{--tw-border-opacity:1;border-color:rgb(209 89 0/var(--tw-border-opacity))}.border-b-blue-400{--tw-border-opacity:1;border-bottom-color:rgb(96 165 250/var(--tw-border-opacity))}.border-b-red-400{--tw-border-opacity:1;border-bottom-color:rgb(248 113 113/var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.bg-green-600{--tw-bg-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-900{--tw-bg-opacity:1;background-color:rgb(20 83 45/var(--tw-bg-opacity))}.bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.bg-blue-100{--tw-bg-opacity:1;background-color:rgb(219 234 254/var(--tw-bg-opacity))}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-akwaaba-orange-default{--tw-gradient-from:#f97817;--tw-gradient-to:rgba(249,120,23,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-gray-50{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-akwaaba-orange-light{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.via-white{--tw-gradient-to:hsla(0,0%,100%,0);--tw-gradient-stops:var(--tw-gradient-from),#fff,var(--tw-gradient-to)}.via-gray-100{--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to)}.to-akwaaba-orange-dark{--tw-gradient-to:#d15900}.bg-contain{background-size:contain}.fill-current{fill:currentColor}.object-contain{-o-object-fit:contain;object-fit:contain}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-2{padding:.5rem}.p-0{padding:0}.p-3{padding:.75rem}.p-1{padding:.25rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-1\\.5{padding:.375rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-12{padding-bottom:3rem;padding-top:3rem}.px-7{padding-left:1.75rem;padding-right:1.75rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.\\!py-1{padding-bottom:.25rem!important;padding-top:.25rem!important}.\\!px-0{padding-left:0!important;padding-right:0!important}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-1{padding-left:.25rem;padding-right:.25rem}.\\!py-4{padding-bottom:1rem!important;padding-top:1rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-4{padding-bottom:1rem;padding-top:1rem}.px-0{padding-left:0;padding-right:0}.py-1{padding-bottom:.25rem;padding-top:.25rem}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-0{padding-bottom:0;padding-top:0}.pr-2{padding-right:.5rem}.pr-4{padding-right:1rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pb-2{padding-bottom:.5rem}.pb-5{padding-bottom:1.25rem}.pt-1{padding-top:.25rem}.pb-4{padding-bottom:1rem}.pl-0{padding-left:0}.pr-3{padding-right:.75rem}.pl-3{padding-left:.75rem}.text-left{text-align:left}.text-center{text-align:center}.\\!text-center{text-align:center!important}.text-right{text-align:right}.\\!text-right{text-align:right!important}.align-middle{vertical-align:middle}.font-serif{font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif}.text-sm{font-size:.875rem;line-height:1.25rem}.text-5xl{font-size:3rem;line-height:1}.text-xl{font-size:1.25rem}.text-lg,.text-xl{line-height:1.75rem}.text-lg{font-size:1.125rem}.text-base{font-size:1rem;line-height:1.5rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xs{font-size:.75rem;line-height:1rem}.font-medium{font-weight:500}.font-bold{font-weight:700}.font-semibold{font-weight:600}.font-normal{font-weight:400}.font-light{font-weight:300}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-snug{line-height:1.375}.leading-tight{line-height:1.25}.tracking-tight{letter-spacing:-.025em}.tracking-wide{letter-spacing:.025em}.\\!text-gray-800{--tw-text-opacity:1!important;color:rgb(31 41 55/var(--tw-text-opacity))!important}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.\\!text-red-400{--tw-text-opacity:1!important;color:rgb(248 113 113/var(--tw-text-opacity))!important}.text-yellow-600{--tw-text-opacity:1;color:rgb(202 138 4/var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgb(220 38 38/var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity:1;color:rgb(79 70 229/var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgb(21 128 61/var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgb(185 28 28/var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.text-green-500{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55/var(--tw-text-opacity))}.text-akwaaba-orange-dark{--tw-text-opacity:1;color:rgb(209 89 0/var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity:1;color:rgb(250 204 21/var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity:1;color:rgb(234 179 8/var(--tw-text-opacity))}.text-red-500{--tw-text-opacity:1;color:rgb(239 68 68/var(--tw-text-opacity))}.text-green-600{--tw-text-opacity:1;color:rgb(22 163 74/var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.text-akwaaba-orange-light{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity:1;color:rgb(59 130 246/var(--tw-text-opacity))}.text-purple-600{--tw-text-opacity:1;color:rgb(147 51 234/var(--tw-text-opacity))}.text-purple-500{--tw-text-opacity:1;color:rgb(168 85 247/var(--tw-text-opacity))}.underline{text-decoration-line:underline}.no-underline{text-decoration-line:none}.opacity-0{opacity:0}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color)}.shadow,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color)}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color)}.shadow-inner,.shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow:inset 0 2px 4px 0 rgba(0,0,0,.05);--tw-shadow-colored:inset 0 2px 4px 0 var(--tw-shadow-color)}.shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-0{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-akwaaba-orange-light{--tw-ring-opacity:1;--tw-ring-color:rgb(255 161 91/var(--tw-ring-opacity))}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-150,.transition-opacity{transition-duration:.15s}.duration-300{transition-duration:.3s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}body{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to);--tw-gradient-to:#f9fafb;background-image:linear-gradient(to right,var(--tw-gradient-stops));overflow-y:scroll}[scrollbar=app-scrollbar]::-webkit-scrollbar{cursor:pointer;width:4px}[scrollbar=app-scrollbar]::-webkit-scrollbar-track{background-color:rgba(229,231,235,var(--bg-opacity));cursor:pointer}[scrollbar=app-scrollbar]::-webkit-scrollbar-thumb{background-color:#a0aec0;cursor:pointer}mwc-dialog{z-index:50!important}.main-app-content,.main-content{margin-left:0!important;margin-right:0!important;padding:1rem!important}datatables-new>[mdc-data-table=data-table]{width:100%!important}dt-pagination .mdc-button,dt-pagination .mdc-icon-button{height:30px!important;padding:0!important;width:30px!important}.main-app-content{height:auto;overflow-y:auto}.main-app-content>.main-container,.main-app-content>[display-app-content=here]>.main-container,.special-card{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-radius:1rem;margin-bottom:.75rem;padding:1.5rem}.main-app-content>.main-container:last-child,.main-app-content>[display-app-content=here]>.main-container:last-child{margin-bottom:13rem}@media (min-width:768px){.main-app-content,.main-content{margin-left:16rem!important}.main-app-content>[mdc-data-table=data-table],.main-content>[mdc-data-table=data-table]{display:block!important;margin-left:16rem!important}.main-app-content{height:100vh;overflow-y:scroll}}@media (min-width:1280px){.main-app-content,.main-content{margin-left:16rem!important;margin-right:18rem!important}}.gradient.gray{--tw-gradient-from:#d1d5db;--tw-gradient-to:rgba(209,213,219,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#4b5563;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.gray,.gradient.red{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.red{--tw-gradient-from:#fca5a5;--tw-gradient-to:hsla(0,94%,82%,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#dc2626;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.blue{--tw-gradient-from:#93c5fd;--tw-gradient-to:rgba(147,197,253,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#2563eb;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.blue,.gradient.green{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.green{--tw-gradient-from:#86efac;--tw-gradient-to:rgba(134,239,172,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#16a34a;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.yellow{--tw-gradient-from:#fde047;--tw-gradient-to:rgba(253,224,71,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#ca8a04;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.akwaaba,.gradient.yellow{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.akwaaba{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.app-container-,.app-container--2xl,.app-container--fluid,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{margin-left:auto;margin-right:auto;padding-left:.75rem;padding-right:.75rem;width:100%}.app-container--row{display:flex;flex-wrap:wrap;margin-left:-.75rem;margin-right:-.75rem;margin-top:-1.5rem;padding:0 1.5rem}.app-container--row>*{box-sizing:border-box;flex-shrink:0;margin-top:1.5rem;max-width:100%;padding-left:.75rem;padding-right:.75rem;width:100%}@media (min-width:640px){.app-container-,.app-container--sm{max-width:640px}.app-container--col-sm{flex:1 0 0%}.app-container--col-sm-auto{flex:0 0 auto;width:auto}.app-container--col-sm-1{flex:0 0 auto;width:8.333333%}.app-container--col-sm-2{flex:0 0 auto;width:16.666667%}.app-container--col-sm-3{flex:0 0 auto;width:25%}.app-container--col-sm-4{flex:0 0 auto;width:33.333333%}.app-container--col-sm-5{flex:0 0 auto;width:41.666667%}.app-container--col-sm-6{flex:0 0 auto;width:50%}.app-container--col-sm-7{flex:0 0 auto;width:58.333333%}.app-container--col-sm-8{flex:0 0 auto;width:66.666667%}.app-container--col-sm-9{flex:0 0 auto;width:75%}.app-container--col-sm-10{flex:0 0 auto;width:83.333333%}.app-container--col-sm-11{flex:0 0 auto;width:91.666667%}.app-container--col-sm-12{flex:0 0 auto;width:100%}}@media (min-width:768px){.app-container-,.app-container--md,.app-container--sm{max-width:768px}.app-container--col-md{flex:1 0 0%}.app-container--col-md-auto{flex:0 0 auto;width:auto}.app-container--col-md-1{flex:0 0 auto;width:8.333333%}.app-container--col-md-2{flex:0 0 auto;width:16.666667%}.app-container--col-md-3{flex:0 0 auto;width:25%}.app-container--col-md-4{flex:0 0 auto;width:33.333333%}.app-container--col-md-5{flex:0 0 auto;width:41.666667%}.app-container--col-md-6{flex:0 0 auto;width:50%}.app-container--col-md-7{flex:0 0 auto;width:58.333333%}.app-container--col-md-8{flex:0 0 auto;width:66.666667%}.app-container--col-md-9{flex:0 0 auto;width:75%}.app-container--col-md-10{flex:0 0 auto;width:83.333333%}.app-container--col-md-11{flex:0 0 auto;width:91.666667%}.app-container--col-md-12{flex:0 0 auto;width:100%}}@media (min-width:1024px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm{max-width:1024px}.app-container--col-lg{flex:1 0 0%}.app-container--col-lg-auto{flex:0 0 auto;width:auto}.app-container--col-lg-1{flex:0 0 auto;width:8.333333%}.app-container--col-lg-2{flex:0 0 auto;width:16.666667%}.app-container--col-lg-3{flex:0 0 auto;width:25%}.app-container--col-lg-4{flex:0 0 auto;width:33.333333%}.app-container--col-lg-5{flex:0 0 auto;width:41.666667%}.app-container--col-lg-6{flex:0 0 auto;width:50%}.app-container--col-lg-7{flex:0 0 auto;width:58.333333%}.app-container--col-lg-8{flex:0 0 auto;width:66.666667%}.app-container--col-lg-9{flex:0 0 auto;width:75%}.app-container--col-lg-10{flex:0 0 auto;width:83.333333%}.app-container--col-lg-11{flex:0 0 auto;width:91.666667%}.app-container--col-lg-12{flex:0 0 auto;width:100%}}@media (min-width:1280px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1280px}.app-container--col-xl{flex:1 0 0%}.app-container--col-xl-auto{flex:0 0 auto;width:auto}.app-container--col-xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-xl-3{flex:0 0 auto;width:25%}.app-container--col-xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-xl-6{flex:0 0 auto;width:50%}.app-container--col-xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-xl-9{flex:0 0 auto;width:75%}.app-container--col-xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-xl-12{flex:0 0 auto;width:100%}}@media (min-width:1536px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1536px}.app-container--col-2xl{flex:1 0 0%}.app-container--col-2xl-auto{flex:0 0 auto;width:auto}.app-container--col-2xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-2xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-2xl-3{flex:0 0 auto;width:25%}.app-container--col-2xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-2xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-2xl-6{flex:0 0 auto;width:50%}.app-container--col-2xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-2xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-2xl-9{flex:0 0 auto;width:75%}.app-container--col-2xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-2xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-2xl-12{flex:0 0 auto;width:100%}}@media (min-width:2811px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{max-width:2811px}.app-container--col-mega{flex:1 0 0%}.app-container--col-mega-auto{flex:0 0 auto;width:auto}.app-container--col-mega-1{flex:0 0 auto;width:8.333333%}.app-container--col-mega-2{flex:0 0 auto;width:16.666667%}.app-container--col-mega-3{flex:0 0 auto;width:25%}.app-container--col-mega-4{flex:0 0 auto;width:33.333333%}.app-container--col-mega-5{flex:0 0 auto;width:41.666667%}.app-container--col-mega-6{flex:0 0 auto;width:50%}.app-container--col-mega-7{flex:0 0 auto;width:58.333333%}.app-container--col-mega-8{flex:0 0 auto;width:66.666667%}.app-container--col-mega-9{flex:0 0 auto;width:75%}.app-container--col-mega-10{flex:0 0 auto;width:83.333333%}.app-container--col-mega-11{flex:0 0 auto;width:91.666667%}.app-container--col-mega-12{flex:0 0 auto;width:100%}}mwc-circular-progress{--mdc-circular-progress-track-color:#fff;--mdc-theme-primary:var(--theme-default-color)}mwc-circular-progress.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-circular-progress-track-color:#111827}mwc-circular-progress.success{--mdc-theme-primary:var(--theme-success-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.info{--mdc-theme-primary:var(--theme-info-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-circular-progress-track-color:#fff}div[pageLoadingIndicator=on]>img{height:3rem!important;margin-top:50vh;width:3rem!important}div[pageLoadingIndicator=on],div[pageLoadingIndicator=on]>img{display:flex!important;justify-content:center!important}div[pageLoadingIndicator=off]{display:none!important}mwc-icon-button{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);align-content:center;align-items:center;border-radius:9999px;display:inline-block;justify-content:center}mwc-icon-button,mwc-icon-button:hover{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}mwc-icon-button:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}mwc-icon-button.inactive{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));color:rgb(107 114 128/var(--tw-text-opacity))}mwc-icon-button.active{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;fill:currentColor;--tw-text-opacity:1;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);color:rgb(255 255 255/var(--tw-text-opacity))}.first\\:rounded-t-lg:first-child{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.last\\:rounded-b-lg:last-child{border-bottom-left-radius:.5rem;border-bottom-right-radius:.5rem}.hover\\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.hover\\:\\!text-gray-900:hover{--tw-text-opacity:1!important;color:rgb(17 24 39/var(--tw-text-opacity))!important}.hover\\:no-underline:hover{text-decoration-line:none}.hover\\:shadow-lg:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:border-indigo-300:focus{--tw-border-opacity:1;border-color:rgb(165 180 252/var(--tw-border-opacity))}.focus\\:shadow-lg:focus{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-0:focus,.focus\\:ring:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-4:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring-indigo-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(199 210 254/var(--tw-ring-opacity))}.focus\\:ring-gray-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(229 231 235/var(--tw-ring-opacity))}.focus\\:ring-opacity-50:focus{--tw-ring-opacity:0.5}.active\\:shadow-lg:active{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.group:hover .group-hover\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:divide-gray-700>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(55 65 81/var(--tw-divide-opacity))}.dark .dark\\:border-gray-700{--tw-border-opacity:1;border-color:rgb(55 65 81/var(--tw-border-opacity))}.dark .dark\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity))}.dark .dark\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.dark .dark\\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.dark .dark\\:text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.dark .dark\\:hover\\:bg-gray-800:hover{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:focus\\:ring-gray-800:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(31 41 55/var(--tw-ring-opacity))}.dark .group:hover .dark\\:group-hover\\:bg-blue-300{--tw-bg-opacity:1;background-color:rgb(147 197 253/var(--tw-bg-opacity))}@media (min-width:640px){.sm\\:hidden{display:none}.sm\\:w-2\\/5{width:40%}.sm\\:w-1\\/4{width:25%}.sm\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.sm\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.sm\\:flex-row{flex-direction:row}}@media (min-width:768px){.md\\:mx-12{margin-left:3rem;margin-right:3rem}.md\\:my-24{margin-bottom:6rem;margin-top:6rem}.md\\:mt-4{margin-top:1rem}.md\\:block{display:block}.md\\:hidden{display:none}.md\\:h-96{height:24rem}.md\\:w-\\[40rem\\]{width:40rem}.md\\:w-\\[30rem\\]{width:30rem}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}.md\\:p-4{padding:1rem}.md\\:px-12{padding-left:3rem;padding-right:3rem}.md\\:text-center{text-align:center}.md\\:text-6xl{font-size:3.75rem;line-height:1}.md\\:text-2xl{font-size:1.5rem;line-height:2rem}.md\\:text-lg{font-size:1.125rem;line-height:1.75rem}.md\\:text-base{font-size:1rem;line-height:1.5rem}}@media (min-width:1024px){.lg\\:mt-0{margin-top:0}.lg\\:mb-0{margin-bottom:0}.lg\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\\:flex-row{flex-direction:row}.lg\\:text-left{text-align:left}}@media (min-width:1280px){.xl\\:m-24{margin:6rem}.xl\\:w-\\[45\\%\\]{width:45%}.xl\\:px-32{padding-left:8rem;padding-right:8rem}.xl\\:text-7xl{font-size:4.5rem;line-height:1}.xl\\:text-3xl{font-size:1.875rem;line-height:2.25rem}}","/*! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\"\"}html{-webkit-text-size-adjust:100%;font-feature-settings:normal;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}@media (min-width:2811px){.container{max-width:2811px}}.visible{visibility:visible}.invisible{visibility:hidden}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-10{top:2.5rem}.left-0{left:0}.right-0{right:0}.right-4{right:1rem}.bottom-16{bottom:4rem}.top-0{top:0}.top-4{top:1rem}.left-20{left:5rem}.top-28{top:7rem}.top-12{top:3rem}.-left-14{left:-3.5rem}.-left-7{left:-1.75rem}.bottom-9{bottom:2.25rem}.left-\\[-7rem\\]{left:-7rem}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-0{z-index:0}.m-1{margin:.25rem}.m-0{margin:0}.my-24{margin-bottom:6rem;margin-top:6rem}.mx-auto{margin-left:auto;margin-right:auto}.mx-12{margin-left:3rem;margin-right:3rem}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-0{margin-bottom:0;margin-top:0}.my-1{margin-bottom:.25rem;margin-top:.25rem}.mx-4{margin-left:1rem;margin-right:1rem}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-1{margin-left:.25rem;margin-right:.25rem}.\\!mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.\\!my-1{margin-bottom:.25rem!important;margin-top:.25rem!important}.mb-32{margin-bottom:8rem}.mt-12{margin-top:3rem}.mb-12{margin-bottom:3rem}.mr-2{margin-right:.5rem}.mt-1{margin-top:.25rem}.mb-2{margin-bottom:.5rem}.ml-2{margin-left:.5rem}.mb-0{margin-bottom:0}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mt-2{margin-top:.5rem}.mb-3{margin-bottom:.75rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-0{margin-top:0}.mt-3{margin-top:.75rem}.mr-4{margin-right:1rem}.ml-0{margin-left:0}.mr-0{margin-right:0}.ml-6{margin-left:1.5rem}.ml-64{margin-left:16rem}.mr-72{margin-right:18rem}.-mt-1{margin-top:-.25rem}.ml-4{margin-left:1rem}.-mt-2{margin-top:-.5rem}.mb-1{margin-bottom:.25rem}.block{display:block}.\\!block{display:block!important}.inline-block{display:inline-block}.flex{display:flex}.\\!flex{display:flex!important}.inline-flex{display:inline-flex}.table{display:table}.table-cell{display:table-cell}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.grid{display:grid}.contents{display:contents}.hidden{display:none}.h-52{height:13rem}.h-full{height:100%}.h-8{height:2rem}.h-32{height:8rem}.h-16{height:4rem}.h-96{height:24rem}.h-44{height:11rem}.h-1{height:.25rem}.h-48{height:12rem}.h-40{height:10rem}.h-36{height:9rem}.h-14{height:3.5rem}.h-11{height:2.75rem}.h-2{height:.5rem}.h-fit{height:-moz-fit-content;height:fit-content}.h-24{height:6rem}.h-4{height:1rem}.h-\\[400px\\]{height:400px}.max-h-48{max-height:12rem}.w-full{width:100%}.w-8{width:2rem}.w-32{width:8rem}.w-16{width:4rem}.w-max{width:-moz-max-content;width:max-content}.w-6{width:1.5rem}.w-1{width:.25rem}.w-2{width:.5rem}.w-auto{width:auto}.w-48{width:12rem}.w-40{width:10rem}.w-36{width:9rem}.w-64{width:16rem}.w-72{width:18rem}.w-80{width:20rem}.w-\\[fit-content\\]{width:-moz-fit-content;width:fit-content}.w-\\[19rem\\]{width:19rem}.\\!w-28{width:7rem!important}.w-1\\/6{width:16.666667%}.w-20{width:5rem}.w-4{width:1rem}.w-24{width:6rem}.w-\\[130px\\]{width:130px}.\\!max-w-full{max-width:100%!important}.flex-1{flex:1 1 0%}.flex-shrink{flex-shrink:1}.flex-grow{flex-grow:1}.rotate-45{--tw-rotate:45deg}.rotate-45,.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.resize{resize:both}.list-disc{list-style-type:disc}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-flow-row{grid-auto-flow:row}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.content-center{align-content:center}.content-between{align-content:space-between}.content-evenly{align-content:space-evenly}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.items-stretch{align-items:stretch}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.\\!justify-between{justify-content:space-between!important}.justify-evenly{justify-content:space-evenly}.gap-12{gap:3rem}.gap-4{gap:1rem}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.25rem*var(--tw-space-y-reverse));margin-top:calc(.25rem*(1 - var(--tw-space-y-reverse)))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)))}.divide-gray-200>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(229 231 235/var(--tw-divide-opacity))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-x-scroll{overflow-x:scroll}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-md{border-radius:.375rem}.rounded{border-radius:.25rem}.rounded-lg{border-radius:.5rem}.rounded-full{border-radius:9999px}.rounded-none{border-radius:0}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-3xl{border-radius:1.5rem}.rounded-sm{border-radius:.125rem}.rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.rounded-b-md{border-bottom-left-radius:.375rem;border-bottom-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-0{border-width:0}.border-y-2{border-top-width:2px}.border-b-2,.border-y-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-r-2{border-right-width:2px}.border-l-4{border-left-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity))}.border-yellow-500{--tw-border-opacity:1;border-color:rgb(234 179 8/var(--tw-border-opacity))}.border-akwaaba-orange-light{--tw-border-opacity:1;border-color:rgb(255 161 91/var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgb(156 163 175/var(--tw-border-opacity))}.border-red-600{--tw-border-opacity:1;border-color:rgb(220 38 38/var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-akwaaba-orange-dark{--tw-border-opacity:1;border-color:rgb(209 89 0/var(--tw-border-opacity))}.border-b-blue-400{--tw-border-opacity:1;border-bottom-color:rgb(96 165 250/var(--tw-border-opacity))}.border-b-red-400{--tw-border-opacity:1;border-bottom-color:rgb(248 113 113/var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.bg-green-600{--tw-bg-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-900{--tw-bg-opacity:1;background-color:rgb(20 83 45/var(--tw-bg-opacity))}.bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.bg-blue-100{--tw-bg-opacity:1;background-color:rgb(219 234 254/var(--tw-bg-opacity))}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-akwaaba-orange-default{--tw-gradient-from:#f97817;--tw-gradient-to:rgba(249,120,23,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-gray-50{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-akwaaba-orange-light{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.via-white{--tw-gradient-to:hsla(0,0%,100%,0);--tw-gradient-stops:var(--tw-gradient-from),#fff,var(--tw-gradient-to)}.via-gray-100{--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to)}.to-akwaaba-orange-dark{--tw-gradient-to:#d15900}.bg-contain{background-size:contain}.fill-current{fill:currentColor}.object-contain{-o-object-fit:contain;object-fit:contain}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-2{padding:.5rem}.p-0{padding:0}.p-3{padding:.75rem}.p-1{padding:.25rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-1\\.5{padding:.375rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-12{padding-bottom:3rem;padding-top:3rem}.px-7{padding-left:1.75rem;padding-right:1.75rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.\\!py-1{padding-bottom:.25rem!important;padding-top:.25rem!important}.\\!px-0{padding-left:0!important;padding-right:0!important}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-1{padding-left:.25rem;padding-right:.25rem}.\\!py-4{padding-bottom:1rem!important;padding-top:1rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-4{padding-bottom:1rem;padding-top:1rem}.px-0{padding-left:0;padding-right:0}.py-1{padding-bottom:.25rem;padding-top:.25rem}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-0{padding-bottom:0;padding-top:0}.pr-2{padding-right:.5rem}.pr-4{padding-right:1rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pb-2{padding-bottom:.5rem}.pb-5{padding-bottom:1.25rem}.pt-1{padding-top:.25rem}.pb-4{padding-bottom:1rem}.pl-0{padding-left:0}.pr-3{padding-right:.75rem}.pl-3{padding-left:.75rem}.text-left{text-align:left}.text-center{text-align:center}.\\!text-center{text-align:center!important}.text-right{text-align:right}.\\!text-right{text-align:right!important}.align-middle{vertical-align:middle}.font-serif{font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif}.text-sm{font-size:.875rem;line-height:1.25rem}.text-5xl{font-size:3rem;line-height:1}.text-xl{font-size:1.25rem}.text-lg,.text-xl{line-height:1.75rem}.text-lg{font-size:1.125rem}.text-base{font-size:1rem;line-height:1.5rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xs{font-size:.75rem;line-height:1rem}.font-medium{font-weight:500}.font-bold{font-weight:700}.font-semibold{font-weight:600}.font-normal{font-weight:400}.font-light{font-weight:300}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-snug{line-height:1.375}.leading-tight{line-height:1.25}.tracking-tight{letter-spacing:-.025em}.tracking-wide{letter-spacing:.025em}.\\!text-gray-800{--tw-text-opacity:1!important;color:rgb(31 41 55/var(--tw-text-opacity))!important}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.\\!text-red-400{--tw-text-opacity:1!important;color:rgb(248 113 113/var(--tw-text-opacity))!important}.text-yellow-600{--tw-text-opacity:1;color:rgb(202 138 4/var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgb(220 38 38/var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity:1;color:rgb(79 70 229/var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgb(21 128 61/var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgb(185 28 28/var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.text-green-500{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55/var(--tw-text-opacity))}.text-akwaaba-orange-dark{--tw-text-opacity:1;color:rgb(209 89 0/var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity:1;color:rgb(250 204 21/var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity:1;color:rgb(234 179 8/var(--tw-text-opacity))}.text-red-500{--tw-text-opacity:1;color:rgb(239 68 68/var(--tw-text-opacity))}.text-green-600{--tw-text-opacity:1;color:rgb(22 163 74/var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.text-akwaaba-orange-light{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity:1;color:rgb(59 130 246/var(--tw-text-opacity))}.text-purple-600{--tw-text-opacity:1;color:rgb(147 51 234/var(--tw-text-opacity))}.text-purple-500{--tw-text-opacity:1;color:rgb(168 85 247/var(--tw-text-opacity))}.underline{text-decoration-line:underline}.no-underline{text-decoration-line:none}.opacity-0{opacity:0}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color)}.shadow,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color)}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color)}.shadow-inner,.shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow:inset 0 2px 4px 0 rgba(0,0,0,.05);--tw-shadow-colored:inset 0 2px 4px 0 var(--tw-shadow-color)}.shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-0{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-akwaaba-orange-light{--tw-ring-opacity:1;--tw-ring-color:rgb(255 161 91/var(--tw-ring-opacity))}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-150,.transition-opacity{transition-duration:.15s}.duration-300{transition-duration:.3s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}body{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to);--tw-gradient-to:#f9fafb;background-image:linear-gradient(to right,var(--tw-gradient-stops));overflow-y:scroll}[scrollbar=app-scrollbar]::-webkit-scrollbar{cursor:pointer;width:4px}[scrollbar=app-scrollbar]::-webkit-scrollbar-track{background-color:rgba(229,231,235,var(--bg-opacity));cursor:pointer}[scrollbar=app-scrollbar]::-webkit-scrollbar-thumb{background-color:#a0aec0;cursor:pointer}mwc-dialog{z-index:50!important}.main-app-content,.main-content{margin-left:0!important;margin-right:0!important;padding:1rem!important}datatables-new>[mdc-data-table=data-table]{width:100%!important}dt-pagination .mdc-button,dt-pagination .mdc-icon-button{height:30px!important;padding:0!important;width:30px!important}.main-app-content{height:auto;overflow-y:auto}.main-app-content>.main-container,.main-app-content>[display-app-content=here]>.main-container,.special-card{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-radius:1rem;margin-bottom:.75rem;padding:1.5rem}.main-app-content>.main-container:last-child,.main-app-content>[display-app-content=here]>.main-container:last-child{margin-bottom:13rem}@media (min-width:768px){.main-app-content,.main-content{margin-left:16rem!important}.main-app-content>[mdc-data-table=data-table],.main-content>[mdc-data-table=data-table]{display:block!important;margin-left:16rem!important}.main-app-content{height:100vh;overflow-y:scroll}}@media (min-width:1280px){.main-app-content,.main-content{margin-left:16rem!important;margin-right:18rem!important}}.gradient.gray{--tw-gradient-from:#d1d5db;--tw-gradient-to:rgba(209,213,219,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#4b5563;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.gray,.gradient.red{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.red{--tw-gradient-from:#fca5a5;--tw-gradient-to:hsla(0,94%,82%,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#dc2626;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.blue{--tw-gradient-from:#93c5fd;--tw-gradient-to:rgba(147,197,253,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#2563eb;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.blue,.gradient.green{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.green{--tw-gradient-from:#86efac;--tw-gradient-to:rgba(134,239,172,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#16a34a;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.yellow{--tw-gradient-from:#fde047;--tw-gradient-to:rgba(253,224,71,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#ca8a04;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.akwaaba,.gradient.yellow{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.akwaaba{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.app-container-,.app-container--2xl,.app-container--fluid,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{margin-left:auto;margin-right:auto;padding-left:.75rem;padding-right:.75rem;width:100%}.app-container--row{display:flex;flex-wrap:wrap;margin-left:-.75rem;margin-right:-.75rem;margin-top:-1.5rem;padding:0 1.5rem}.app-container--row>*{box-sizing:border-box;flex-shrink:0;margin-top:1.5rem;max-width:100%;padding-left:.75rem;padding-right:.75rem;width:100%}@media (min-width:640px){.app-container-,.app-container--sm{max-width:640px}.app-container--col-sm{flex:1 0 0%}.app-container--col-sm-auto{flex:0 0 auto;width:auto}.app-container--col-sm-1{flex:0 0 auto;width:8.333333%}.app-container--col-sm-2{flex:0 0 auto;width:16.666667%}.app-container--col-sm-3{flex:0 0 auto;width:25%}.app-container--col-sm-4{flex:0 0 auto;width:33.333333%}.app-container--col-sm-5{flex:0 0 auto;width:41.666667%}.app-container--col-sm-6{flex:0 0 auto;width:50%}.app-container--col-sm-7{flex:0 0 auto;width:58.333333%}.app-container--col-sm-8{flex:0 0 auto;width:66.666667%}.app-container--col-sm-9{flex:0 0 auto;width:75%}.app-container--col-sm-10{flex:0 0 auto;width:83.333333%}.app-container--col-sm-11{flex:0 0 auto;width:91.666667%}.app-container--col-sm-12{flex:0 0 auto;width:100%}}@media (min-width:768px){.app-container-,.app-container--md,.app-container--sm{max-width:768px}.app-container--col-md{flex:1 0 0%}.app-container--col-md-auto{flex:0 0 auto;width:auto}.app-container--col-md-1{flex:0 0 auto;width:8.333333%}.app-container--col-md-2{flex:0 0 auto;width:16.666667%}.app-container--col-md-3{flex:0 0 auto;width:25%}.app-container--col-md-4{flex:0 0 auto;width:33.333333%}.app-container--col-md-5{flex:0 0 auto;width:41.666667%}.app-container--col-md-6{flex:0 0 auto;width:50%}.app-container--col-md-7{flex:0 0 auto;width:58.333333%}.app-container--col-md-8{flex:0 0 auto;width:66.666667%}.app-container--col-md-9{flex:0 0 auto;width:75%}.app-container--col-md-10{flex:0 0 auto;width:83.333333%}.app-container--col-md-11{flex:0 0 auto;width:91.666667%}.app-container--col-md-12{flex:0 0 auto;width:100%}}@media (min-width:1024px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm{max-width:1024px}.app-container--col-lg{flex:1 0 0%}.app-container--col-lg-auto{flex:0 0 auto;width:auto}.app-container--col-lg-1{flex:0 0 auto;width:8.333333%}.app-container--col-lg-2{flex:0 0 auto;width:16.666667%}.app-container--col-lg-3{flex:0 0 auto;width:25%}.app-container--col-lg-4{flex:0 0 auto;width:33.333333%}.app-container--col-lg-5{flex:0 0 auto;width:41.666667%}.app-container--col-lg-6{flex:0 0 auto;width:50%}.app-container--col-lg-7{flex:0 0 auto;width:58.333333%}.app-container--col-lg-8{flex:0 0 auto;width:66.666667%}.app-container--col-lg-9{flex:0 0 auto;width:75%}.app-container--col-lg-10{flex:0 0 auto;width:83.333333%}.app-container--col-lg-11{flex:0 0 auto;width:91.666667%}.app-container--col-lg-12{flex:0 0 auto;width:100%}}@media (min-width:1280px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1280px}.app-container--col-xl{flex:1 0 0%}.app-container--col-xl-auto{flex:0 0 auto;width:auto}.app-container--col-xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-xl-3{flex:0 0 auto;width:25%}.app-container--col-xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-xl-6{flex:0 0 auto;width:50%}.app-container--col-xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-xl-9{flex:0 0 auto;width:75%}.app-container--col-xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-xl-12{flex:0 0 auto;width:100%}}@media (min-width:1536px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1536px}.app-container--col-2xl{flex:1 0 0%}.app-container--col-2xl-auto{flex:0 0 auto;width:auto}.app-container--col-2xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-2xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-2xl-3{flex:0 0 auto;width:25%}.app-container--col-2xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-2xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-2xl-6{flex:0 0 auto;width:50%}.app-container--col-2xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-2xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-2xl-9{flex:0 0 auto;width:75%}.app-container--col-2xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-2xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-2xl-12{flex:0 0 auto;width:100%}}@media (min-width:2811px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{max-width:2811px}.app-container--col-mega{flex:1 0 0%}.app-container--col-mega-auto{flex:0 0 auto;width:auto}.app-container--col-mega-1{flex:0 0 auto;width:8.333333%}.app-container--col-mega-2{flex:0 0 auto;width:16.666667%}.app-container--col-mega-3{flex:0 0 auto;width:25%}.app-container--col-mega-4{flex:0 0 auto;width:33.333333%}.app-container--col-mega-5{flex:0 0 auto;width:41.666667%}.app-container--col-mega-6{flex:0 0 auto;width:50%}.app-container--col-mega-7{flex:0 0 auto;width:58.333333%}.app-container--col-mega-8{flex:0 0 auto;width:66.666667%}.app-container--col-mega-9{flex:0 0 auto;width:75%}.app-container--col-mega-10{flex:0 0 auto;width:83.333333%}.app-container--col-mega-11{flex:0 0 auto;width:91.666667%}.app-container--col-mega-12{flex:0 0 auto;width:100%}}mwc-circular-progress{--mdc-circular-progress-track-color:#fff;--mdc-theme-primary:var(--theme-default-color)}mwc-circular-progress.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-circular-progress-track-color:#111827}mwc-circular-progress.success{--mdc-theme-primary:var(--theme-success-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.info{--mdc-theme-primary:var(--theme-info-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-circular-progress-track-color:#fff}div[pageLoadingIndicator=on]>img{height:3rem!important;margin-top:50vh;width:3rem!important}div[pageLoadingIndicator=on],div[pageLoadingIndicator=on]>img{display:flex!important;justify-content:center!important}div[pageLoadingIndicator=off]{display:none!important}mwc-icon-button{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);align-content:center;align-items:center;border-radius:9999px;display:inline-block;justify-content:center}mwc-icon-button,mwc-icon-button:hover{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}mwc-icon-button:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}mwc-icon-button.inactive{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));color:rgb(107 114 128/var(--tw-text-opacity))}mwc-icon-button.active{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;fill:currentColor;--tw-text-opacity:1;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);color:rgb(255 255 255/var(--tw-text-opacity))}.form-container .header>.label,.form-container .header>label,.form-container header>.label,.form-container header>label{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity));display:block;font-size:1.5rem;font-weight:600;line-height:2rem;margin-top:.75rem;text-align:left}.form-container .header>.label>.icon,.form-container .header>label>.icon,.form-container header>.label>.icon,.form-container header>label>.icon{--tw-text-opacity:1;color:rgb(249 120 23/var(--tw-text-opacity));display:inline;height:1.5rem;width:1.5rem}.form-container .header>.label>.h1,.form-container .header>.label>h1,.form-container .header>label>.h1,.form-container .header>label>h1,.form-container header>.label>.h1,.form-container header>.label>h1,.form-container header>label>.h1,.form-container header>label>h1{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity));font-size:1.5rem;font-weight:700;line-height:2rem}.form-container .header>.label>.h3,.form-container .header>.label>h3,.form-container .header>label>.h3,.form-container .header>label>h3,.form-container header>.label>.h3,.form-container header>.label>h3,.form-container header>label>.h3,.form-container header>label>h3{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity));font-size:.875rem;font-weight:600;line-height:1.25rem;margin-bottom:1rem}.form-container .form{margin-top:2.5rem}.form-container .header.success .icon,.form-container header.success .icon{--tw-text-opacity:1!important;color:rgb(21 128 61/var(--tw-text-opacity))!important}.form-container .header.success .h1,.form-container .header.success h1,.form-container header.success .h1,.form-container header.success h1{--tw-text-opacity:1!important;color:rgb(22 163 74/var(--tw-text-opacity))!important}.form-container .header.danger .h3,.form-container .header.danger h3,.form-container .header.info .h3,.form-container .header.info h3,.form-container .header.primary .h3,.form-container .header.primary h3,.form-container .header.success .h3,.form-container .header.success h3,.form-container .header.warning .h3,.form-container .header.warning h3,.form-container header.danger .h3,.form-container header.danger h3,.form-container header.info .h3,.form-container header.info h3,.form-container header.primary .h3,.form-container header.primary h3,.form-container header.success .h3,.form-container header.success h3,.form-container header.warning .h3,.form-container header.warning h3{--tw-text-opacity:1!important;color:rgb(75 85 99/var(--tw-text-opacity))!important}.form-container .header.info .icon,.form-container header.info .icon{--tw-text-opacity:1!important;color:rgb(96 165 250/var(--tw-text-opacity))!important}.form-container .header.info .h1,.form-container .header.info h1,.form-container header.info .h1,.form-container header.info h1{--tw-text-opacity:1!important;color:rgb(147 197 253/var(--tw-text-opacity))!important}.form-container .header.warning .icon,.form-container header.warning .icon{--tw-text-opacity:1!important;color:rgb(161 98 7/var(--tw-text-opacity))!important}.form-container .header.warning .h1,.form-container .header.warning h1,.form-container header.warning .h1,.form-container header.warning h1{--tw-text-opacity:1!important;color:rgb(202 138 4/var(--tw-text-opacity))!important}.form-container .header.danger .icon,.form-container header.danger .icon{--tw-text-opacity:1!important;color:rgb(185 28 28/var(--tw-text-opacity))!important}.form-container .header.danger .h1,.form-container .header.danger h1,.form-container header.danger .h1,.form-container header.danger h1{--tw-text-opacity:1!important;color:rgb(220 38 38/var(--tw-text-opacity))!important}.form-container .header.primary .icon,.form-container header.primary .icon{--tw-text-opacity:1!important;color:rgb(29 78 216/var(--tw-text-opacity))!important}.form-container .header.primary .h1,.form-container .header.primary h1,.form-container header.primary .h1,.form-container header.primary h1{--tw-text-opacity:1!important;color:rgb(37 99 235/var(--tw-text-opacity))!important}.form-input-container{margin-top:1.75rem}.form-input-container:first-child{margin-top:0}mwc-select,mwc-textarea,mwc-textfield{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem;width:100%}mwc-textarea{height:10rem}mwc-switch{--tw-bg-opacity:1;--mdc-switch-selected-handle-color:var(--theme-default-color);--mdc-switch-selected-track-color:#c75e17;--mdc-switch-unselected-handle-color:gray;--mdc-switch-unselected-track-color:#d4d3d3;--mdc-switch-unselected-icon-color:#4e4c4c;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem}mwc-select,mwc-switch,mwc-textarea,mwc-textfield{--mdc-theme-primary:var(--theme-default-color)}mwc-select.success,mwc-switch.success,mwc-textarea.success,mwc-textfield.success{--mdc-theme-primary:var(--theme-success-color)}mwc-select.info,mwc-switch.info,mwc-textarea.info,mwc-textfield.info{--mdc-theme-primary:var(--theme-info-color)}mwc-select.warning,mwc-switch.warning,mwc-textarea.warning,mwc-textfield.warning{--mdc-theme-primary:var(--theme-warning-color)}mwc-select.danger,mwc-switch.danger,mwc-textarea.danger,mwc-textfield.danger{--mdc-theme-primary:var(--theme-danger-color)}mwc-select.primary,mwc-switch.primary,mwc-textarea.primary,mwc-textfield.primary{--mdc-theme-primary:var(--theme-primary-color)}.form-input-container{display:flex;justify-content:flex-end}mwc-icon-button.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}mwc-icon-button.success{background-color:rgb(22 163 74/var(--tw-bg-opacity))}mwc-icon-button.info,mwc-icon-button.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-icon-button.info{background-color:rgb(96 165 250/var(--tw-bg-opacity))}mwc-icon-button.warning{background-color:rgb(249 120 23/var(--tw-bg-opacity))}mwc-icon-button.danger,mwc-icon-button.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-icon-button.danger{background-color:rgb(220 38 38/var(--tw-bg-opacity))}mwc-icon-button.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}.button,mwc-button{--mdc-theme-primary:var(--theme-default-color);--mdc-theme-on-primary:#fff}.button.gray,.button.gray[data-btn-to=active],mwc-button.gray,mwc-button.gray[data-btn-to=active]{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#111827}.button.success,.button.success[data-btn-to=active],mwc-button.success,mwc-button.success[data-btn-to=active]{--mdc-theme-primary:var(--theme-success-color);--mdc-theme-on-primary:#fff}.button.info,.button.info[data-btn-to=active],mwc-button.info,mwc-button.info[data-btn-to=active]{--mdc-theme-primary:var(--theme-info-color);--mdc-theme-on-primary:#fff}.button.warning,.button.warning[data-btn-to=active],mwc-button.warning,mwc-button.warning[data-btn-to=active]{--mdc-theme-primary:var(--theme-warning-color);--mdc-theme-on-primary:#fff}.button.danger,.button.danger[data-btn-to=active],mwc-button.danger,mwc-button.danger[data-btn-to=active]{--mdc-theme-primary:var(--theme-danger-color);--mdc-theme-on-primary:#fff}.button.primary,.button.primary[data-btn-to=active],mwc-button.primary,mwc-button.primary[data-btn-to=active]{--mdc-theme-primary:var(--theme-primary-color);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].gray,mwc-button[data-btn-to=inactive].gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].success,mwc-button[data-btn-to=inactive].success{--mdc-theme-primary:var(--theme-success-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].info,mwc-button[data-btn-to=inactive].info{--mdc-theme-primary:var(--theme-info-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].warning,mwc-button[data-btn-to=inactive].warning{--mdc-theme-primary:var(--theme-warning-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].danger,mwc-button[data-btn-to=inactive].danger{--mdc-theme-primary:var(--theme-danger-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].primary,mwc-button[data-btn-to=inactive].primary{--mdc-theme-primary:var(--theme-primary-color-disabled);--mdc-theme-on-primary:#fff}mwc-tab-bar.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}mwc-tab-bar.success{background-color:rgb(22 163 74/var(--tw-bg-opacity))}mwc-tab-bar.info,mwc-tab-bar.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar.info{background-color:rgb(96 165 250/var(--tw-bg-opacity))}mwc-tab-bar.warning{background-color:rgb(249 120 23/var(--tw-bg-opacity))}mwc-tab-bar.danger,mwc-tab-bar.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar.danger{background-color:rgb(220 38 38/var(--tw-bg-opacity))}mwc-tab-bar.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar{--mdc-tab-horizontal-padding:0.75rem;--mdc-theme-primary:var(--theme-default-color);--mdc-tab-color-default:var(--theme-default-color);--mdc-tab-text-label-color-default:var(--theme-default-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-tab-color-default:var(--theme-gray-color);--mdc-tab-text-label-color-default:var(--theme-gray-color);--mdc-theme-on-primary:#111827}mwc-tab-bar.success{--mdc-theme-primary:var(--theme-success-color);--mdc-tab-color-default:var(--theme-success-color);--mdc-tab-text-label-color-default:var(--theme-success-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.info{--mdc-theme-primary:var(--theme-info-color);--mdc-tab-color-default:var(--theme-info-color);--mdc-tab-text-label-color-default:var(--theme-info-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-tab-color-default:var(--theme-warning-color);--mdc-tab-text-label-color-default:var(--theme-warning-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-tab-color-default:var(--theme-danger-color);--mdc-tab-text-label-color-default:var(--theme-danger-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-tab-color-default:var(--theme-primary-color);--mdc-tab-text-label-color-default:var(--theme-primary-color);--mdc-theme-on-primary:#fff}.first\\:rounded-t-lg:first-child{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.last\\:rounded-b-lg:last-child{border-bottom-left-radius:.5rem;border-bottom-right-radius:.5rem}.hover\\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.hover\\:\\!text-gray-900:hover{--tw-text-opacity:1!important;color:rgb(17 24 39/var(--tw-text-opacity))!important}.hover\\:no-underline:hover{text-decoration-line:none}.hover\\:shadow-lg:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:border-indigo-300:focus{--tw-border-opacity:1;border-color:rgb(165 180 252/var(--tw-border-opacity))}.focus\\:shadow-lg:focus{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-0:focus,.focus\\:ring:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-4:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring-indigo-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(199 210 254/var(--tw-ring-opacity))}.focus\\:ring-gray-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(229 231 235/var(--tw-ring-opacity))}.focus\\:ring-opacity-50:focus{--tw-ring-opacity:0.5}.active\\:shadow-lg:active{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.group:hover .group-hover\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:divide-gray-700>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(55 65 81/var(--tw-divide-opacity))}.dark .dark\\:border-gray-700{--tw-border-opacity:1;border-color:rgb(55 65 81/var(--tw-border-opacity))}.dark .dark\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity))}.dark .dark\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.dark .dark\\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.dark .dark\\:text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.dark .dark\\:hover\\:bg-gray-800:hover{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:focus\\:ring-gray-800:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(31 41 55/var(--tw-ring-opacity))}.dark .group:hover .dark\\:group-hover\\:bg-blue-300{--tw-bg-opacity:1;background-color:rgb(147 197 253/var(--tw-bg-opacity))}@media (min-width:640px){.sm\\:hidden{display:none}.sm\\:w-2\\/5{width:40%}.sm\\:w-1\\/4{width:25%}.sm\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.sm\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.sm\\:flex-row{flex-direction:row}}@media (min-width:768px){.md\\:mx-12{margin-left:3rem;margin-right:3rem}.md\\:my-24{margin-bottom:6rem;margin-top:6rem}.md\\:mt-4{margin-top:1rem}.md\\:block{display:block}.md\\:hidden{display:none}.md\\:h-96{height:24rem}.md\\:w-\\[40rem\\]{width:40rem}.md\\:w-\\[30rem\\]{width:30rem}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}.md\\:p-4{padding:1rem}.md\\:px-12{padding-left:3rem;padding-right:3rem}.md\\:text-center{text-align:center}.md\\:text-6xl{font-size:3.75rem;line-height:1}.md\\:text-2xl{font-size:1.5rem;line-height:2rem}.md\\:text-lg{font-size:1.125rem;line-height:1.75rem}.md\\:text-base{font-size:1rem;line-height:1.5rem}}@media (min-width:1024px){.lg\\:mt-0{margin-top:0}.lg\\:mb-0{margin-bottom:0}.lg\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\\:flex-row{flex-direction:row}.lg\\:text-left{text-align:left}}@media (min-width:1280px){.xl\\:m-24{margin:6rem}.xl\\:w-\\[45\\%\\]{width:45%}.xl\\:px-32{padding-left:8rem;padding-right:8rem}.xl\\:text-7xl{font-size:4.5rem;line-height:1}.xl\\:text-3xl{font-size:1.875rem;line-height:2.25rem}}","/*! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\"\"}html{-webkit-text-size-adjust:100%;font-feature-settings:normal;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}@media (min-width:2811px){.container{max-width:2811px}}.visible{visibility:visible}.invisible{visibility:hidden}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-10{top:2.5rem}.left-0{left:0}.right-0{right:0}.right-4{right:1rem}.bottom-16{bottom:4rem}.top-0{top:0}.top-4{top:1rem}.left-20{left:5rem}.top-28{top:7rem}.top-12{top:3rem}.-left-14{left:-3.5rem}.-left-7{left:-1.75rem}.bottom-9{bottom:2.25rem}.left-\\[-7rem\\]{left:-7rem}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-0{z-index:0}.m-1{margin:.25rem}.m-0{margin:0}.my-24{margin-bottom:6rem;margin-top:6rem}.mx-auto{margin-left:auto;margin-right:auto}.mx-12{margin-left:3rem;margin-right:3rem}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-0{margin-bottom:0;margin-top:0}.my-1{margin-bottom:.25rem;margin-top:.25rem}.mx-4{margin-left:1rem;margin-right:1rem}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-1{margin-left:.25rem;margin-right:.25rem}.\\!mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.\\!my-1{margin-bottom:.25rem!important;margin-top:.25rem!important}.mb-32{margin-bottom:8rem}.mt-12{margin-top:3rem}.mb-12{margin-bottom:3rem}.mr-2{margin-right:.5rem}.mt-1{margin-top:.25rem}.mb-2{margin-bottom:.5rem}.ml-2{margin-left:.5rem}.mb-0{margin-bottom:0}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mt-2{margin-top:.5rem}.mb-3{margin-bottom:.75rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-0{margin-top:0}.mt-3{margin-top:.75rem}.mr-4{margin-right:1rem}.ml-0{margin-left:0}.mr-0{margin-right:0}.ml-6{margin-left:1.5rem}.ml-64{margin-left:16rem}.mr-72{margin-right:18rem}.-mt-1{margin-top:-.25rem}.ml-4{margin-left:1rem}.-mt-2{margin-top:-.5rem}.mb-1{margin-bottom:.25rem}.block{display:block}.\\!block{display:block!important}.inline-block{display:inline-block}.flex{display:flex}.\\!flex{display:flex!important}.inline-flex{display:inline-flex}.table{display:table}.table-cell{display:table-cell}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.grid{display:grid}.contents{display:contents}.hidden{display:none}.h-52{height:13rem}.h-full{height:100%}.h-8{height:2rem}.h-32{height:8rem}.h-16{height:4rem}.h-96{height:24rem}.h-44{height:11rem}.h-1{height:.25rem}.h-48{height:12rem}.h-40{height:10rem}.h-36{height:9rem}.h-14{height:3.5rem}.h-11{height:2.75rem}.h-2{height:.5rem}.h-fit{height:-moz-fit-content;height:fit-content}.h-24{height:6rem}.h-4{height:1rem}.h-\\[400px\\]{height:400px}.max-h-48{max-height:12rem}.w-full{width:100%}.w-8{width:2rem}.w-32{width:8rem}.w-16{width:4rem}.w-max{width:-moz-max-content;width:max-content}.w-6{width:1.5rem}.w-1{width:.25rem}.w-2{width:.5rem}.w-auto{width:auto}.w-48{width:12rem}.w-40{width:10rem}.w-36{width:9rem}.w-64{width:16rem}.w-72{width:18rem}.w-80{width:20rem}.w-\\[fit-content\\]{width:-moz-fit-content;width:fit-content}.w-\\[19rem\\]{width:19rem}.\\!w-28{width:7rem!important}.w-1\\/6{width:16.666667%}.w-20{width:5rem}.w-4{width:1rem}.w-24{width:6rem}.w-\\[130px\\]{width:130px}.\\!max-w-full{max-width:100%!important}.flex-1{flex:1 1 0%}.flex-shrink{flex-shrink:1}.flex-grow{flex-grow:1}.rotate-45{--tw-rotate:45deg}.rotate-45,.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.resize{resize:both}.list-disc{list-style-type:disc}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-flow-row{grid-auto-flow:row}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.content-center{align-content:center}.content-between{align-content:space-between}.content-evenly{align-content:space-evenly}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.items-stretch{align-items:stretch}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.\\!justify-between{justify-content:space-between!important}.justify-evenly{justify-content:space-evenly}.gap-12{gap:3rem}.gap-4{gap:1rem}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.25rem*var(--tw-space-y-reverse));margin-top:calc(.25rem*(1 - var(--tw-space-y-reverse)))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)))}.divide-gray-200>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(229 231 235/var(--tw-divide-opacity))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-x-scroll{overflow-x:scroll}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-md{border-radius:.375rem}.rounded{border-radius:.25rem}.rounded-lg{border-radius:.5rem}.rounded-full{border-radius:9999px}.rounded-none{border-radius:0}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-3xl{border-radius:1.5rem}.rounded-sm{border-radius:.125rem}.rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.rounded-b-md{border-bottom-left-radius:.375rem;border-bottom-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-0{border-width:0}.border-y-2{border-top-width:2px}.border-b-2,.border-y-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-r-2{border-right-width:2px}.border-l-4{border-left-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity))}.border-yellow-500{--tw-border-opacity:1;border-color:rgb(234 179 8/var(--tw-border-opacity))}.border-akwaaba-orange-light{--tw-border-opacity:1;border-color:rgb(255 161 91/var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgb(156 163 175/var(--tw-border-opacity))}.border-red-600{--tw-border-opacity:1;border-color:rgb(220 38 38/var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-akwaaba-orange-dark{--tw-border-opacity:1;border-color:rgb(209 89 0/var(--tw-border-opacity))}.border-b-blue-400{--tw-border-opacity:1;border-bottom-color:rgb(96 165 250/var(--tw-border-opacity))}.border-b-red-400{--tw-border-opacity:1;border-bottom-color:rgb(248 113 113/var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.bg-green-600{--tw-bg-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-900{--tw-bg-opacity:1;background-color:rgb(20 83 45/var(--tw-bg-opacity))}.bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.bg-blue-100{--tw-bg-opacity:1;background-color:rgb(219 234 254/var(--tw-bg-opacity))}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-akwaaba-orange-default{--tw-gradient-from:#f97817;--tw-gradient-to:rgba(249,120,23,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-gray-50{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-akwaaba-orange-light{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.via-white{--tw-gradient-to:hsla(0,0%,100%,0);--tw-gradient-stops:var(--tw-gradient-from),#fff,var(--tw-gradient-to)}.via-gray-100{--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to)}.to-akwaaba-orange-dark{--tw-gradient-to:#d15900}.bg-contain{background-size:contain}.fill-current{fill:currentColor}.object-contain{-o-object-fit:contain;object-fit:contain}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-2{padding:.5rem}.p-0{padding:0}.p-3{padding:.75rem}.p-1{padding:.25rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-1\\.5{padding:.375rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-12{padding-bottom:3rem;padding-top:3rem}.px-7{padding-left:1.75rem;padding-right:1.75rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.\\!py-1{padding-bottom:.25rem!important;padding-top:.25rem!important}.\\!px-0{padding-left:0!important;padding-right:0!important}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-1{padding-left:.25rem;padding-right:.25rem}.\\!py-4{padding-bottom:1rem!important;padding-top:1rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-4{padding-bottom:1rem;padding-top:1rem}.px-0{padding-left:0;padding-right:0}.py-1{padding-bottom:.25rem;padding-top:.25rem}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-0{padding-bottom:0;padding-top:0}.pr-2{padding-right:.5rem}.pr-4{padding-right:1rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pb-2{padding-bottom:.5rem}.pb-5{padding-bottom:1.25rem}.pt-1{padding-top:.25rem}.pb-4{padding-bottom:1rem}.pl-0{padding-left:0}.pr-3{padding-right:.75rem}.pl-3{padding-left:.75rem}.text-left{text-align:left}.text-center{text-align:center}.\\!text-center{text-align:center!important}.text-right{text-align:right}.\\!text-right{text-align:right!important}.align-middle{vertical-align:middle}.font-serif{font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif}.text-sm{font-size:.875rem;line-height:1.25rem}.text-5xl{font-size:3rem;line-height:1}.text-xl{font-size:1.25rem}.text-lg,.text-xl{line-height:1.75rem}.text-lg{font-size:1.125rem}.text-base{font-size:1rem;line-height:1.5rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xs{font-size:.75rem;line-height:1rem}.font-medium{font-weight:500}.font-bold{font-weight:700}.font-semibold{font-weight:600}.font-normal{font-weight:400}.font-light{font-weight:300}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-snug{line-height:1.375}.leading-tight{line-height:1.25}.tracking-tight{letter-spacing:-.025em}.tracking-wide{letter-spacing:.025em}.\\!text-gray-800{--tw-text-opacity:1!important;color:rgb(31 41 55/var(--tw-text-opacity))!important}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.\\!text-red-400{--tw-text-opacity:1!important;color:rgb(248 113 113/var(--tw-text-opacity))!important}.text-yellow-600{--tw-text-opacity:1;color:rgb(202 138 4/var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgb(220 38 38/var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity:1;color:rgb(79 70 229/var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgb(21 128 61/var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgb(185 28 28/var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.text-green-500{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55/var(--tw-text-opacity))}.text-akwaaba-orange-dark{--tw-text-opacity:1;color:rgb(209 89 0/var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity:1;color:rgb(250 204 21/var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity:1;color:rgb(234 179 8/var(--tw-text-opacity))}.text-red-500{--tw-text-opacity:1;color:rgb(239 68 68/var(--tw-text-opacity))}.text-green-600{--tw-text-opacity:1;color:rgb(22 163 74/var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.text-akwaaba-orange-light{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity:1;color:rgb(59 130 246/var(--tw-text-opacity))}.text-purple-600{--tw-text-opacity:1;color:rgb(147 51 234/var(--tw-text-opacity))}.text-purple-500{--tw-text-opacity:1;color:rgb(168 85 247/var(--tw-text-opacity))}.underline{text-decoration-line:underline}.no-underline{text-decoration-line:none}.opacity-0{opacity:0}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color)}.shadow,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color)}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color)}.shadow-inner,.shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow:inset 0 2px 4px 0 rgba(0,0,0,.05);--tw-shadow-colored:inset 0 2px 4px 0 var(--tw-shadow-color)}.shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-0{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-akwaaba-orange-light{--tw-ring-opacity:1;--tw-ring-color:rgb(255 161 91/var(--tw-ring-opacity))}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-150,.transition-opacity{transition-duration:.15s}.duration-300{transition-duration:.3s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}mwc-dialog{z-index:50!important}.form-input-container{margin-top:1.75rem}.form-input-container:first-child{margin-top:0}mwc-select,mwc-textarea,mwc-textfield{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem;width:100%}mwc-textarea{height:10rem}mwc-switch{--tw-bg-opacity:1;--mdc-switch-selected-handle-color:var(--theme-default-color);--mdc-switch-selected-track-color:#c75e17;--mdc-switch-unselected-handle-color:gray;--mdc-switch-unselected-track-color:#d4d3d3;--mdc-switch-unselected-icon-color:#4e4c4c;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem}mwc-select,mwc-switch,mwc-textarea,mwc-textfield{--mdc-theme-primary:var(--theme-default-color)}mwc-select.success,mwc-switch.success,mwc-textarea.success,mwc-textfield.success{--mdc-theme-primary:var(--theme-success-color)}mwc-select.info,mwc-switch.info,mwc-textarea.info,mwc-textfield.info{--mdc-theme-primary:var(--theme-info-color)}mwc-select.warning,mwc-switch.warning,mwc-textarea.warning,mwc-textfield.warning{--mdc-theme-primary:var(--theme-warning-color)}mwc-select.danger,mwc-switch.danger,mwc-textarea.danger,mwc-textfield.danger{--mdc-theme-primary:var(--theme-danger-color)}mwc-select.primary,mwc-switch.primary,mwc-textarea.primary,mwc-textfield.primary{--mdc-theme-primary:var(--theme-primary-color)}.form-input-container{display:flex;justify-content:flex-end}mwc-icon-button.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}mwc-icon-button.success{background-color:rgb(22 163 74/var(--tw-bg-opacity))}mwc-icon-button.info,mwc-icon-button.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-icon-button.info{background-color:rgb(96 165 250/var(--tw-bg-opacity))}mwc-icon-button.warning{background-color:rgb(249 120 23/var(--tw-bg-opacity))}mwc-icon-button.danger,mwc-icon-button.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-icon-button.danger{background-color:rgb(220 38 38/var(--tw-bg-opacity))}mwc-icon-button.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}.button,mwc-button{--mdc-theme-primary:var(--theme-default-color);--mdc-theme-on-primary:#fff}.button.gray,.button.gray[data-btn-to=active],mwc-button.gray,mwc-button.gray[data-btn-to=active]{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#111827}.button.success,.button.success[data-btn-to=active],mwc-button.success,mwc-button.success[data-btn-to=active]{--mdc-theme-primary:var(--theme-success-color);--mdc-theme-on-primary:#fff}.button.info,.button.info[data-btn-to=active],mwc-button.info,mwc-button.info[data-btn-to=active]{--mdc-theme-primary:var(--theme-info-color);--mdc-theme-on-primary:#fff}.button.warning,.button.warning[data-btn-to=active],mwc-button.warning,mwc-button.warning[data-btn-to=active]{--mdc-theme-primary:var(--theme-warning-color);--mdc-theme-on-primary:#fff}.button.danger,.button.danger[data-btn-to=active],mwc-button.danger,mwc-button.danger[data-btn-to=active]{--mdc-theme-primary:var(--theme-danger-color);--mdc-theme-on-primary:#fff}.button.primary,.button.primary[data-btn-to=active],mwc-button.primary,mwc-button.primary[data-btn-to=active]{--mdc-theme-primary:var(--theme-primary-color);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].gray,mwc-button[data-btn-to=inactive].gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].success,mwc-button[data-btn-to=inactive].success{--mdc-theme-primary:var(--theme-success-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].info,mwc-button[data-btn-to=inactive].info{--mdc-theme-primary:var(--theme-info-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].warning,mwc-button[data-btn-to=inactive].warning{--mdc-theme-primary:var(--theme-warning-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].danger,mwc-button[data-btn-to=inactive].danger{--mdc-theme-primary:var(--theme-danger-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].primary,mwc-button[data-btn-to=inactive].primary{--mdc-theme-primary:var(--theme-primary-color-disabled);--mdc-theme-on-primary:#fff}mwc-tab-bar.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}mwc-tab-bar.success{background-color:rgb(22 163 74/var(--tw-bg-opacity))}mwc-tab-bar.info,mwc-tab-bar.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar.info{background-color:rgb(96 165 250/var(--tw-bg-opacity))}mwc-tab-bar.warning{background-color:rgb(249 120 23/var(--tw-bg-opacity))}mwc-tab-bar.danger,mwc-tab-bar.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar.danger{background-color:rgb(220 38 38/var(--tw-bg-opacity))}mwc-tab-bar.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar{--mdc-tab-horizontal-padding:0.75rem;--mdc-theme-primary:var(--theme-default-color);--mdc-tab-color-default:var(--theme-default-color);--mdc-tab-text-label-color-default:var(--theme-default-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-tab-color-default:var(--theme-gray-color);--mdc-tab-text-label-color-default:var(--theme-gray-color);--mdc-theme-on-primary:#111827}mwc-tab-bar.success{--mdc-theme-primary:var(--theme-success-color);--mdc-tab-color-default:var(--theme-success-color);--mdc-tab-text-label-color-default:var(--theme-success-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.info{--mdc-theme-primary:var(--theme-info-color);--mdc-tab-color-default:var(--theme-info-color);--mdc-tab-text-label-color-default:var(--theme-info-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-tab-color-default:var(--theme-warning-color);--mdc-tab-text-label-color-default:var(--theme-warning-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-tab-color-default:var(--theme-danger-color);--mdc-tab-text-label-color-default:var(--theme-danger-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-tab-color-default:var(--theme-primary-color);--mdc-tab-text-label-color-default:var(--theme-primary-color);--mdc-theme-on-primary:#fff}.first\\:rounded-t-lg:first-child{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.last\\:rounded-b-lg:last-child{border-bottom-left-radius:.5rem;border-bottom-right-radius:.5rem}.hover\\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.hover\\:\\!text-gray-900:hover{--tw-text-opacity:1!important;color:rgb(17 24 39/var(--tw-text-opacity))!important}.hover\\:no-underline:hover{text-decoration-line:none}.hover\\:shadow-lg:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:border-indigo-300:focus{--tw-border-opacity:1;border-color:rgb(165 180 252/var(--tw-border-opacity))}.focus\\:shadow-lg:focus{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-0:focus,.focus\\:ring:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-4:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring-indigo-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(199 210 254/var(--tw-ring-opacity))}.focus\\:ring-gray-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(229 231 235/var(--tw-ring-opacity))}.focus\\:ring-opacity-50:focus{--tw-ring-opacity:0.5}.active\\:shadow-lg:active{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.group:hover .group-hover\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:divide-gray-700>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(55 65 81/var(--tw-divide-opacity))}.dark .dark\\:border-gray-700{--tw-border-opacity:1;border-color:rgb(55 65 81/var(--tw-border-opacity))}.dark .dark\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity))}.dark .dark\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.dark .dark\\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.dark .dark\\:text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.dark .dark\\:hover\\:bg-gray-800:hover{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:focus\\:ring-gray-800:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(31 41 55/var(--tw-ring-opacity))}.dark .group:hover .dark\\:group-hover\\:bg-blue-300{--tw-bg-opacity:1;background-color:rgb(147 197 253/var(--tw-bg-opacity))}@media (min-width:640px){.sm\\:hidden{display:none}.sm\\:w-2\\/5{width:40%}.sm\\:w-1\\/4{width:25%}.sm\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.sm\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.sm\\:flex-row{flex-direction:row}}@media (min-width:768px){.md\\:mx-12{margin-left:3rem;margin-right:3rem}.md\\:my-24{margin-bottom:6rem;margin-top:6rem}.md\\:mt-4{margin-top:1rem}.md\\:block{display:block}.md\\:hidden{display:none}.md\\:h-96{height:24rem}.md\\:w-\\[40rem\\]{width:40rem}.md\\:w-\\[30rem\\]{width:30rem}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}.md\\:p-4{padding:1rem}.md\\:px-12{padding-left:3rem;padding-right:3rem}.md\\:text-center{text-align:center}.md\\:text-6xl{font-size:3.75rem;line-height:1}.md\\:text-2xl{font-size:1.5rem;line-height:2rem}.md\\:text-lg{font-size:1.125rem;line-height:1.75rem}.md\\:text-base{font-size:1rem;line-height:1.5rem}}@media (min-width:1024px){.lg\\:mt-0{margin-top:0}.lg\\:mb-0{margin-bottom:0}.lg\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\\:flex-row{flex-direction:row}.lg\\:text-left{text-align:left}}@media (min-width:1280px){.xl\\:m-24{margin:6rem}.xl\\:w-\\[45\\%\\]{width:45%}.xl\\:px-32{padding-left:8rem;padding-right:8rem}.xl\\:text-7xl{font-size:4.5rem;line-height:1}.xl\\:text-3xl{font-size:1.875rem;line-height:2.25rem}}","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/checkbox/mixins' as checkbox-mixins;\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/typography/typography';\n@use './data-table-cell';\n@use './data-table-header-cell';\n@use './data-table-pagination';\n@use './data-table-progress-indicator';\n@use './data-table-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include table-styles($query: $query);\n  @include data-table-theme.sort-icon-color(\n    data-table-theme.$sort-icon-color,\n    $query: $query\n  );\n  @include data-table-theme.sort-icon-active-color(\n    data-table-theme.$sort-icon-active-color,\n    $query: $query\n  );\n\n  @include data-table-progress-indicator.core-styles($query: $query);\n  @include data-table-pagination.core-styles($query: $query);\n}\n\n// This API includes only the table styles without the sorting, pagination and\n// loading styles. It is intended to be used by frameworks that only need the\n// table styles.\n@mixin table-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define data-table\n\n  .mdc-data-table__content {\n    @include typography.typography(body2, $query: $query);\n  }\n\n  .mdc-data-table {\n    @include data-table-theme.fill-color(\n      data-table-theme.$fill-color,\n      $query: $query\n    );\n    @include data-table-theme.shape-radius(\n      data-table-theme.$shape-radius,\n      $query: $query\n    );\n    @include data-table-theme.stroke-size(\n      data-table-theme.$stroke-size,\n      $query: $query\n    );\n    @include data-table-theme.stroke-color(\n      data-table-theme.$stroke-color,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      // NOTE: Root element should not be scrollable, added this for backward\n      // compatibility.\n      -webkit-overflow-scrolling: touch;\n      display: inline-flex;\n      flex-direction: column;\n      box-sizing: border-box;\n      position: relative;\n    }\n  }\n\n  // Note that we don't output the color styles inside the `@at-root`,\n  // because it makes it difficult to consume by projects that wrap their\n  // themes in a class (e.g. `.my-theme { @include mdc-data-table-core-style() }`).\n  @include data-table-theme.row-fill-color(\n    data-table-theme.$row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-fill-color(\n    data-table-theme.$header-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.selected-row-fill-color(\n    data-table-theme.$selected-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-color(\n    data-table-theme.$divider-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-size(\n    data-table-theme.$divider-size,\n    $query: $query\n  );\n  @include data-table-theme.row-hover-fill-color(\n    data-table-theme.$row-hover-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-text-color(\n    data-table-theme.$header-row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.row-text-color(\n    data-table-theme.$row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.density(\n    data-table-theme.$default-density-scale,\n    $query: $query\n  );\n  @include data-table-theme.cell-padding(\n    $leading-padding: data-table-theme.$cell-leading-padding,\n    $trailing-padding: data-table-theme.$cell-trailing-padding,\n    $query: $query\n  );\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      -webkit-overflow-scrolling: touch;\n      overflow-x: auto;\n      width: 100%;\n    }\n  }\n\n  .mdc-data-table__table {\n    @include feature-targeting.targets($feat-structure) {\n      min-width: 100%; // Makes table full-width of its container (Firefox / IE11)\n      border: 0;\n      white-space: nowrap;\n      border-spacing: 0;\n      /**\n       * With table-layout:fixed, table and column widths are defined by the width\n       * of the first row of cells. Cells in subsequent rows do not affect column\n       * widths. This results in a predictable table layout and may also speed up\n       * rendering.\n       */\n      table-layout: fixed;\n    }\n  }\n\n  @include data-table-cell.core-styles($query: $query);\n  @include data-table-header-cell.core-styles($query: $query);\n\n  .mdc-data-table--sticky-header {\n    @include data-table-header-cell.header-cell-sticky($query: $query);\n  }\n}\n\n@mixin theme-baseline($query: feature-targeting.all()) {\n  @include data-table-theme.checked-icon-color(\n    data-table-theme.$checked-icon-color,\n    $query: $query\n  );\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-keys($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(font-size, map.get($theme, size));\n  @include theme.property(font-weight, map.get($theme, weight));\n  @include theme.property(letter-spacing, map.get($theme, tracking));\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/animation/functions';\n@use '@material/checkbox/checkbox-theme';\n@use '@material/density/density';\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/rtl/rtl';\n@use '@material/select/select-theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/touch-target';\n@use '@material/typography/typography';\n\n$fill-color: surface !default;\n$header-row-fill-color: surface !default;\n$row-fill-color: inherit !default;\n$selected-row-fill-color: rgba(theme-color.prop-value(primary), 0.04) !default;\n$checked-icon-color: primary !default;\n$divider-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n$divider-size: 1px !default;\n$row-hover-fill-color: rgba(theme-color.prop-value(on-surface), 0.04) !default;\n\n$header-row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n\n$sort-icon-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n$sort-icon-active-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.87\n) !default;\n$sort-icon-density-scale: -5 !default;\n\n$shape-radius: medium !default;\n$stroke-size: 1px !default;\n$stroke-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n\n$row-height: 52px !default;\n$header-row-height: get-header-row-height($row-height) !default;\n$cell-leading-padding: 16px !default;\n$cell-trailing-padding: 16px !default;\n\n$minimum-row-height: 36px !default;\n$maximum-row-height: $row-height !default;\n$default-density-scale: density.$default-scale !default;\n$density-config: (\n  height: (\n    maximum: $row-height,\n    default: $row-height,\n    minimum: $minimum-row-height,\n  ),\n);\n$pagination-rows-per-page-select-height: 36px;\n\n@function get-header-row-height($height) {\n  @return $height + 4px;\n}\n\n/// Sets the color of sort icon button when it is in idle state.\n/// (icon showed on header cell focus)\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n/// Sets the color of sort icon button when it is activated (sorted).\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-active-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property('background-color', $color);\n  }\n}\n\n@mixin header-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Set background color to cell instead of row to support sticky header.\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin selected-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row--selected {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin checked-icon-color($color, $query: feature-targeting.all()) {\n  .mdc-data-table__header-row-checkbox,\n  .mdc-data-table__row-checkbox {\n    @include checkbox-theme.focus-indicator-color($color, $query: $query);\n    @include checkbox-theme.container-colors(\n      $marked-stroke-color: $color,\n      $marked-fill-color: $color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets divider color of data table (including outline color of rows per page\n/// select). Use `stroke-color()` to set table border color.\n/// @param {Color} $color Divider color.\n///\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-rows-per-page-select {\n    @include select-theme.outline-color($color, $query: $query);\n  }\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      border-bottom-color: $color;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-color) {\n      border-top-color: $color;\n    }\n  }\n}\n\n@mixin divider-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom-width: $size;\n      border-bottom-style: solid;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      border-top-width: $size;\n      border-top-style: solid;\n    }\n  }\n\n  .mdc-data-table__row:last-child .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom: none;\n    }\n  }\n}\n\n@mixin row-hover-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin header-row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets row text color (including pagination row text).\n/// @param {Color} $color Row text color\n///\n@mixin row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-total,\n  .mdc-data-table__pagination-rows-per-page-label,\n  .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets rounded shape radius to data table.\n/// @param {Number|List} $radius - Shape radius in `border-radius` CSS format.\n/// @param {Boolean} $rtl-reflexive - Set to `true` to flip radius corners in\n///     RTL context.\n///\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n\n  // Apply same border radius as parent to leading/trailing header cells,\n  // and leading/trailing cells of last row.\n  // Cells that have explicit background color applied require border\n  // radius to take the parents' rounded shape.\n  $border-radius: shape-functions.unpack-radius($radius);\n  $top-left-radius: shape-functions.resolve-radius(list.nth($border-radius, 1));\n  $top-right-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 2)\n  );\n  $bottom-right-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 3)\n  );\n  $bottom-left-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 4)\n  );\n\n  .mdc-data-table__header-cell:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-left-radius, $top-left-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-right-radius,\n          if($rtl-reflexive, $top-left-radius, $top-right-radius)\n        );\n\n        border-top-left-radius: 0;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-right-radius, $top-right-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-left-radius,\n          if($rtl-reflexive, $top-right-radius, $top-left-radius)\n        );\n\n        border-top-right-radius: 0;\n      }\n    }\n  }\n\n  &.mdc-data-table--without-footer\n    .mdc-data-table__row:last-child\n    .mdc-data-table__cell:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-bottom-left-radius, $bottom-left-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-bottom-right-radius,\n          if($rtl-reflexive, $bottom-left-radius, $bottom-right-radius)\n        );\n\n        border-bottom-left-radius: 0;\n      }\n    }\n  }\n\n  &.mdc-data-table--without-footer\n    .mdc-data-table__row:last-child\n    .mdc-data-table__cell:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-bottom-right-radius, $bottom-right-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-bottom-left-radius,\n          if($rtl-reflexive, $bottom-right-radius, $bottom-left-radius)\n        );\n\n        border-bottom-right-radius: 0;\n      }\n    }\n  }\n}\n\n@mixin stroke-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-width: $size;\n    border-style: solid;\n  }\n}\n\n@mixin stroke-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    border-color: $color;\n  }\n}\n\n@mixin header-row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-row {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      min-height: $height;\n    }\n  }\n}\n\n///\n/// Sets cell padding including cell, header cell, row checkbox cell and header\n/// row checkbox cell.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $trailing-padding [$cell-trailing-padding] Trailing padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $trailing-padding: $cell-trailing-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0 $trailing-padding 0 $leading-padding;\n    }\n  }\n\n  @include checkbox-cell-padding(\n    $leading-padding: $leading-padding,\n    $row-checkbox-density-scale: $row-checkbox-density-scale,\n    $query: $query\n  );\n}\n\n///\n/// Sets only row checkbox cell and header row checkbox cell leading padding.\n/// Use `cell-padding()` to set all cell's padding.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin checkbox-cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell--checkbox,\n  .mdc-data-table__cell--checkbox {\n    @include feature-targeting.targets($feat-structure) {\n      // Distance from leading cell bound to checkbox's icon bound should be\n      // 16dp (`$leading-padding`). Calculate required padding excluding\n      // checkbox bounds.\n      $checkbox-icon-size: 24px;\n      $checkbox-touch-size: touch-target.$height;\n      @if $row-checkbox-density-scale and $row-checkbox-density-scale < 0 {\n        $checkbox-touch-size: checkbox-theme.get-ripple-size(\n          $row-checkbox-density-scale\n        );\n      }\n      $leading-padding: $leading-padding -\n        math.div($checkbox-touch-size - $checkbox-icon-size, 2);\n      @include rtl.reflexive-property(padding, $leading-padding, 0);\n    }\n  }\n}\n\n@mixin column-widths($width-list, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @for $i from 1 through list.length($width-list) {\n    .mdc-data-table__row > :nth-child(#{$i}) {\n      @include feature-targeting.targets($feat-structure) {\n        width: list.nth($width-list, $i);\n      }\n    }\n  }\n}\n\n///\n/// Sets density scale for data table. Use corresponding density mixins of child components (such as Checkbox) to apply\n/// density scales which will be rendered inside data table.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to set density of row checkbox and also\n///     automatically adjust the alignment of row checkbox within a cell.\n///     See `checkbox.density()` mixin for supported density scales.\n///\n@mixin density(\n  $density-scale,\n  $row-checkbox-density-scale: null,\n  $pagination-select-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $height: density.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include row-height($height, $query: $query);\n  @include header-row-height(get-header-row-height($height), $query: $query);\n\n  @if $row-checkbox-density-scale {\n    @include checkbox-cell-padding(\n      $leading-padding: $cell-leading-padding,\n      $row-checkbox-density-scale: $row-checkbox-density-scale,\n      $query: $query\n    );\n\n    .mdc-data-table__header-row-checkbox,\n    .mdc-data-table__row-checkbox {\n      @include checkbox-theme.density($row-checkbox-density-scale);\n    }\n  }\n\n  @if $pagination-select-density-scale {\n    @include select-density($pagination-select-density-scale);\n  }\n}\n\n@mixin select-density($density-scale) {\n  @include select-theme.outlined-height(\n    select-theme.$height + density.$interval * $density-scale\n  );\n  .mdc-list-item {\n    @include list-theme.one-line-item-density(\n      $density-scale + 2,\n      $exclude-variants: true\n    );\n  }\n\n  margin: 0;\n}\n\n///\n/// Sets maximum height of data table. Use this to make table vertically\n/// scrollable.\n/// @param {Number} $height\n///\n@mixin max-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      max-height: $height;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:selector';\n@use '@material/theme/gss';\n@use '@material/theme/selector-ext';\n@use '@material/theme/theme';\n\n$include: true !default;\n\n/// Creates a rule that will be applied when a component is within the context\n/// of an RTL layout.\n///\n/// @example - scss\n/// .mdc-foo {\n///   padding-left: 4px;\n///\n///   @include rtl {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n/// }\n///\n/// @example - css\n///   .mdc-foo {\n///     padding-left: 4px;\n///   }\n///\n///   [dir=\"rtl\"] .mdc-foo,\n///   .mdc-foo[dir=\"rtl\"] {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n///\n/// Note that this mixin works by checking for an ancestor element with\n/// `[dir=\"rtl\"]`. As a result, nested `dir` values are not supported:\n///\n/// @example - html\n/// <html dir=\"rtl\">\n///   <!-- ... -->\n///   <div dir=\"ltr\">\n///     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n///   </div>\n/// </html>\n///\n/// In the future, selectors such as the `:dir` pseudo-class\n/// (http://mdn.io/css/:dir) will help us mitigate this.\n///\n/// @content Content to be styled in an RTL context.\n@mixin rtl() {\n  @if ($include) {\n    $dir-rtl: '[dir=rtl]';\n\n    $rtl-selectors: list.join(\n      selector.nest($dir-rtl, &),\n      selector-ext.append-strict(&, $dir-rtl)\n    );\n\n    @at-root {\n      #{$rtl-selectors} {\n        /*rtl:begin:ignore*/\n        @content;\n        /*rtl:end:ignore*/\n      }\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position($position-property, $value, $replace: null) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n\n    // If any replacements are null, treat the entire value as null (do not\n    // emit anything).\n    @each $name, $replacement in $replace {\n      @if $replacement == null {\n        $left-value: null;\n        $right-value: null;\n      }\n    }\n  }\n\n  // Do not emit if either value are null\n  @if $left-value and $right-value {\n    @include _property($left-property, $left-value, $replace: $left-replace);\n    @include _property($right-property, $right-value, $replace: $right-replace);\n\n    @include rtl {\n      @include _property(\n        $left-property,\n        $right-value,\n        $replace: $right-replace\n      );\n      @include _property($right-property, $left-value, $replace: $left-replace);\n    }\n  }\n}\n\n///\n/// Adds RTL ignore annotation when `$mdc-rtl-include` is true.\n///\n@mixin ignore-next-line() {\n  @include gss.annotate(\n    (\n      noflip: $include,\n    )\n  );\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:list';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline {\n    @include base_($query);\n\n    &__leading,\n    &__notch,\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        box-sizing: border-box;\n        height: 100%;\n        border-top: variables.$border-width solid;\n        border-bottom: variables.$border-width solid;\n        pointer-events: none;\n      }\n    }\n\n    &__leading {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          variables.$border-width solid,\n          none\n        );\n\n        width: variables.$leading-width;\n      }\n    }\n\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          none,\n          variables.$border-width solid\n        );\n\n        flex-grow: 1;\n      }\n    }\n\n    &__notch {\n      @include feature-targeting.targets($feat-structure) {\n        flex: 0 0 auto;\n        width: auto;\n        max-width: calc(100% - #{variables.$leading-width} * 2);\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        display: inline-block;\n        position: relative;\n        max-width: 100%;\n      }\n    }\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: clip;\n      }\n    }\n\n    &--upgraded .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        max-width: calc(100% / 0.75);\n      }\n    }\n  }\n\n  .mdc-notched-outline--notched {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(padding, right, 8px);\n\n        border-top: none;\n      }\n    }\n  }\n\n  .mdc-notched-outline--no-label {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin stroke-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-structure) {\n      border-width: $width;\n    }\n  }\n}\n\n///\n/// Adds top offset to compensate for border width box size when it is notched.\n/// Use this when floating label is aligned to center to prevent label jump on focus.\n/// @param {Number} $stroke-width Stroke width of notched outline that needs to be offset.\n///\n@mixin notch-offset($stroke-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline--notched .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: $stroke-width;\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $component-height: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Resolve the radius relative to the notched outline component's height. The\n  // component should provide its current height from its density. The resolved\n  // radius allows percentage radii to be converted to pixels.\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $component-height\n  );\n\n  // Grab the top-left radius. We'll need it to adjust the leading for the\n  // label notch if the resulting radius shape is larger than the default\n  // leading.\n  $top-left-radius: list.nth(\n    shape-functions.unpack-radius($resolved-radius),\n    1\n  );\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  .mdc-notched-outline__leading {\n    // mask the leading to apply the top-left and bottom-left corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 1 0 0 1),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        // If the radius is bigger than the default leading width, we need to\n        // increase the leading width\n        width: $top-left-radius-px;\n        @if ($top-left-is-custom-prop) {\n          // The radius may be a custom property, in which case the above width\n          // is the IE11 fallback value.\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        // If the top-left radius is dynamic, the width of the leading is\n        // the max of whichever is larger: the default leading width or the\n        // value of the custom property.\n        $var: custom-properties.create-var($top-left-radius);\n        // Interpolation is a workaround for sass/sass#3259.\n        @supports (top: max(#{0%})) {\n          width: max(#{variables.$leading-width}, #{$var});\n        }\n      }\n    }\n  }\n\n  // Similar to above, adjust the max-width of the notch if we adjusted the\n  // leading's width.\n  .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        max-width: calc(100% - #{$top-left-radius-px} * 2);\n        @if ($top-left-is-custom-prop) {\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        $var: custom-properties.create-var($top-left-radius);\n        // Interpolation is a workaround for sass/sass#3259.\n        @supports (top: max(#{0%})) {\n          max-width: calc(100% - max(#{variables.$leading-width}, #{$var}) * 2);\n        }\n      }\n    }\n  }\n\n  .mdc-notched-outline__trailing {\n    // mask the leading to apply the top-right and bottom-right corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 0 1 1 0),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n  }\n}\n\n@mixin floating-label-float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets floating label position in notched outline when label is afloat.\n///\n/// @param {Number} $positionY Absolute Y-axis position in `px`.\n/// @param {Number} $positionX Absolute X-axis position in `px`. Defaults to `0`.\n/// @param {Number} $scale Defaults to `.75`.\n///\n/// @todo Replace mixin `mdc-notched-outline-floating-label-float-position` with this mixin when floating label is\n///     center aligned in all the places.\n///\n@mixin floating-label-float-position-absolute(\n  $positionY,\n  $positionX: 0,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust-absolute,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets the max-width for the notch\n///\n/// @param {Number} $max-width Max-width for the notch\n///\n@mixin notch-max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      max-width: $max-width;\n    }\n  }\n}\n\n//\n// Private\n//\n@mixin base_($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    box-sizing: border-box;\n    width: 100%;\n    max-width: 100%;\n    height: 100%;\n    @include rtl.ignore-next-line();\n    text-align: left;\n    pointer-events: none;\n\n    @include rtl.rtl {\n      @include rtl.ignore-next-line();\n      text-align: right;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__cell {\n    @include typography.typography(body2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      overflow: hidden;\n      text-align: left;\n      text-overflow: ellipsis;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--checkbox {\n    @include adaptive-width($query: $query);\n  }\n}\n\n@mixin adaptive-width($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // Set to lowest width to adapt to cell content. Cell width should adapt\n    // to row checkbox size when it is dense.\n    // NOTE: `min-width` does not seem to work on table cells.\n    width: 1px;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n@use './data-table-theme';\n@use './data-table-cell';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__header-cell {\n    @include typography.typography(subtitle2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      outline: none;\n\n      @include rtl.ignore-next-line();\n      text-align: left;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell--checkbox {\n    @include data-table-cell.adaptive-width($query: $query);\n  }\n\n  .mdc-data-table__header-cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.density(\n      $density-scale: data-table-theme.$sort-icon-density-scale,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      // Apply dummy `transform` to avoid pixel shift on sort down animation.\n      transform: rotate(0.0001deg);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 4px);\n    }\n\n    .mdc-data-table__header-cell--numeric & {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(margin, right, 4px);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: functions.standard(transform, $duration: 150ms);\n    }\n\n    .mdc-data-table__header-cell--sorted-descending & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: rotate(-180deg);\n      }\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n\n    &:focus,\n    .mdc-data-table__header-cell:hover &,\n    .mdc-data-table__header-cell--sorted & {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: inline-flex;\n      vertical-align: middle;\n    }\n  }\n\n  .mdc-data-table__header-cell--with-sort {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  .mdc-data-table__sort-status-label {\n    @include dom.visually-hidden($query: $query);\n  }\n}\n\n/// Sets header cell in sticky position on table content vertical scroll.\n@mixin header-cell-sticky($query: $query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      position: sticky;\n      top: 0;\n      z-index: 1;\n    }\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/focus-ring/focus-ring';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n@use '@material/theme/keys';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n\n$ripple-target: '.mdc-icon-button__ripple';\n\n$icon-size: 24px !default;\n$size: 48px !default;\n$minimum-height: 28px !default;\n$maximum-height: $size !default;\n$container-shape: 50%;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    default: $size,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$_custom-property-prefix: 'icon-button';\n\n$light-theme: (\n  disabled-icon-color: theme-color.$on-surface,\n  disabled-icon-opacity: 0.38,\n  icon-color: theme-color.$primary,\n  icon-size: $icon-size,\n  focus-icon-color: theme-color.$primary,\n  focus-state-layer-color: theme-color.$primary,\n  focus-state-layer-opacity: 0.12,\n  hover-icon-color: theme-color.$primary,\n  hover-state-layer-color: theme-color.$primary,\n  hover-state-layer-opacity: 0.08,\n  pressed-icon-color: theme-color.$primary,\n  pressed-state-layer-color: theme-color.$primary,\n  pressed-state-layer-opacity: 0.12,\n  state-layer-size: $size,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n\n  @include _state-layer-size($size: map.get($theme, state-layer-size));\n  @include _icon-size(map.get($theme, icon-size));\n  @include _disabled-icon-opacity(map.get($theme, disabled-icon-opacity));\n  @include _icon-color-with-map(\n    (\n      default: map.get($theme, icon-color),\n      disabled: map.get($theme, disabled-icon-color),\n      focus: map.get($theme, focus-icon-color),\n      hover: map.get($theme, hover-icon-color),\n      pressed: map.get($theme, pressed-icon-color),\n    )\n  );\n\n  // States styles\n  @include ripple-theme.theme-styles(\n    (\n      focus-state-layer-color: map.get($theme, focus-state-layer-color),\n      focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity),\n      hover-state-layer-color: map.get($theme, hover-state-layer-color),\n      hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity),\n      pressed-state-layer-color: map.get($theme, pressed-state-layer-color),\n      pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity),\n    ),\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Sets the density scale for icon button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values range from `-5` to `0`, with `0` being the default.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  @include size($size, $query: $query);\n}\n\n///\n/// Sets the size of the icon-button.\n///\n/// @param {Number} $size - Size value for icon-button.\n///     Size will set the width, height, and padding for the overall component.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $size;\n    height: $size;\n    padding: math.div($size - $icon-size, 2);\n  }\n\n  .mdc-icon-button__focus-ring {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n    }\n  }\n\n  @include ripple-theme.focus {\n    .mdc-icon-button__focus-ring {\n      @include dom.forced-colors-mode($exclude-ie11: true) {\n        @include focus-ring.focus-ring(\n          $query: $query,\n          $container-outer-padding-vertical: 0,\n          $container-outer-padding-horizontal: 0\n        );\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n        max-height: $size;\n        max-width: $size;\n      }\n    }\n  }\n\n  &.mdc-icon-button--reduced-size {\n    $component-size: $size;\n    // Icon button ripple size is capped at 40px for icon buttons with\n    // densities -1 and 0 (icon buttons with sizes 44x44 and 48x48px).\n    // See http://b/192353968 for more info.\n    @if $size >= 40px and $size <= 48px {\n      $component-size: 40px;\n    }\n\n    .mdc-icon-button__ripple {\n      @include feature-targeting.targets($feat-structure) {\n        width: $component-size;\n        height: $component-size;\n      }\n\n      @include touch-target-mixins.margin(\n        $component-height: $component-size,\n        $component-width: $component-size,\n        $touch-target-height: $size,\n        $touch-target-width: $size,\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.focus {\n      .mdc-icon-button__focus-ring {\n        @include feature-targeting.targets($feat-structure) {\n          max-height: $component-size;\n          max-width: $component-size;\n        }\n      }\n    }\n  }\n\n  .mdc-icon-button__touch {\n    @include touch-target-mixins.touch-target(\n      $set-width: true,\n      $query: $query,\n      $height: $size,\n      $width: $size\n    );\n  }\n}\n\n///\n/// Sets the width, height and padding of icon button. Also changes the size of\n/// the icon itself based on button size.\n///\n/// @param {Number} $width - Width value for icon-button.\n/// @param {Number} $height - Height value for icon-button. (default: $width)\n/// @param {Number} $padding - Padding value for icon-button. (default: max($width, $height) / 2)\n/// @deprecated\n///     This mixin provides too much of low level customization.\n///     Please use mdc-icon-button-size instead.\n///\n@mixin icon-size(\n  $width,\n  $height: $width,\n  $padding: math.div(math.max($width, $height), 2),\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $component-width: $width + $padding * 2;\n  $component-height: $height + $padding * 2;\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $component-width;\n    height: $component-height;\n    padding: $padding;\n    font-size: math.max($width, $height);\n  }\n\n  svg,\n  img {\n    @include feature-targeting.targets($feat-structure) {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n///\n/// Sets the font color and the ripple color to the provided color value.\n/// @param {Color} $color - The desired font and ripple color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include ink-color_($color, $query: $query);\n  @include ripple-theme.states(\n    $color,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Flips icon only in RTL context.\n///\n@mixin flip-icon-in-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-button__icon {\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        transform: rotate(180deg);\n      }\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value for a disabled icon button.\n/// @param {Color} $color - The desired font color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Includes ad-hoc high contrast mode support.\n///\n@mixin high-contrast-mode-shim($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // TODO(b/175806874): Use the DOM border mixin after the ripple is moved\n    // away from :before to a dedicated element.\n    outline: solid 3px transparent;\n\n    &:focus {\n      outline: double 5px transparent;\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value. This can be wrapped in\n/// a state qualifier such as `mdc-icon-button-if-disabled_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _state-layer-size($size) {\n  @include theme.property(height, $size);\n  @include theme.property(width, $size);\n}\n\n@mixin _icon-size($size) {\n  @include theme.property(font-size, $size);\n\n  svg,\n  img {\n    @include theme.property(width, $size);\n    @include theme.property(height, $size);\n  }\n}\n\n///\n/// Sets the icon opacity to the given opacity.\n/// @access private\n///\n@mixin _disabled-icon-opacity($opacity) {\n  &:disabled {\n    @include theme.property(opacity, $opacity);\n  }\n}\n\n///\n/// Sets the icon color to the given color.\n/// @param {map} $color-map - The desired icon color, specified as a map of\n///     colors with states {default, disabled, focus, hover, pressed} as keys.\n/// @access private\n///\n@mixin _icon-color-with-map($color-map) {\n  @include ink-color_(state.get-default-state($color-map));\n\n  $disabled: state.get-disabled-state($color-map);\n  @if $disabled {\n    &:disabled {\n      @include ink-color_($disabled);\n    }\n  }\n\n  $focus: state.get-focus-state($color-map);\n  @if $focus {\n    @include ripple-theme.focus {\n      @include ink-color_($focus);\n    }\n  }\n\n  $hover: state.get-hover-state($color-map);\n  @if $hover {\n    &:hover {\n      @include ink-color_($hover);\n    }\n  }\n\n  $pressed: state.get-pressed-state($color-map);\n  @if $pressed {\n    @include ripple-theme.active {\n      @include ink-color_($pressed);\n    }\n  }\n}\n\n@mixin _states-colors($color-map) {\n  // TODO(b/191298796): support focused & pressed key colors.\n\n  $hover: map.get($color-map, hover);\n  @if $hover {\n    @include ripple-theme.states-base-color(\n      $color: $hover,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n///\n/// Helps style the icon button in its disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  &:disabled {\n    @content;\n  }\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n\n  // Used to satisfy Firefox v94 which does not render transparent borders in HCM (b/206440838).\n  @include forced-colors-mode($exclude-ie11: true) {\n    @include feature-targeting.targets($feat-structure) {\n      border-color: CanvasText;\n    }\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n\n$ring-radius-default: 8px !default;\n$inner-ring-width-default: 2px !default;\n$inner-ring-color-default: transparent !default;\n$outer-ring-width-default: 2px !default;\n$outer-ring-color-default: transparent !default;\n$container-outer-padding-default: 2px !default;\n\n/// Styles applied to the component's inner focus ring element.\n///\n/// @param $ring-radius [$ring-radius-default] - Focus ring radius.\n/// @param $inner-ring-width [$inner-ring-width-default] - Inner focus ring width.\n/// @param $inner-ring-color [$inner-ring-color-default] - Inner focus ring color.\n/// @param $outer-ring-width [$outer-ring-width-default] - Outer focus ring width.\n/// @param $outer-ring-color [$outer-ring-color-default] - Outer focus ring color.\n/// @param $container-outer-padding [$container-outer-padding-default] - The\n///     distance between the focus ring and the container.\n@mixin focus-ring(\n  $query: feature-targeting.all(),\n  $ring-radius: $ring-radius-default,\n  $inner-ring-width: $inner-ring-width-default,\n  $inner-ring-color: $inner-ring-color-default,\n  $outer-ring-width: $outer-ring-width-default,\n  $outer-ring-color: $outer-ring-color-default,\n  $container-outer-padding-vertical: $container-outer-padding-default,\n  $container-outer-padding-horizontal: $container-outer-padding-default\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $container-size-vertical: 100%;\n  @if $container-outer-padding-vertical != 0 {\n    $container-size-vertical: calc(\n      100% + #{$container-outer-padding-vertical * 2}\n    );\n  }\n  $container-size-horizontal: 100%;\n  @if $container-outer-padding-horizontal != 0 {\n    $container-size-horizontal: calc(\n      100% + #{$container-outer-padding-horizontal * 2}\n    );\n  }\n  $outer-ring-size: 100%;\n  @if $outer-ring-width > 0 {\n    $outer-ring-size: calc(100% + #{$outer-ring-width * 2});\n  }\n  @include feature-targeting.targets($feat-structure) {\n    pointer-events: none;\n    border: $inner-ring-width solid $inner-ring-color;\n    border-radius: $ring-radius - $outer-ring-width;\n    box-sizing: content-box;\n    position: absolute;\n    top: 50%;\n    @include rtl.ignore-next-line();\n    left: 50%;\n    @include rtl.ignore-next-line();\n    transform: translate(-50%, -50%);\n    height: $container-size-vertical;\n    width: $container-size-horizontal;\n\n    @include dom.forced-colors-mode($exclude-ie11: true) {\n      border-color: CanvasText;\n    }\n\n    &::after {\n      content: '';\n      border: $outer-ring-width solid $outer-ring-color;\n      border-radius: $ring-radius;\n      display: block;\n      position: absolute;\n      top: 50%;\n      @include rtl.ignore-next-line();\n      left: 50%;\n      @include rtl.ignore-next-line();\n      transform: translate(-50%, -50%);\n      height: $outer-ring-size;\n      width: $outer-ring-size;\n\n      @include dom.forced-colors-mode($exclude-ie11: true) {\n        border-color: CanvasText;\n      }\n    }\n  }\n}\n/// Customizes the color of the button focus ring.\n///\n/// @param $inner-ring-color [$inner-ring-color-default] - Inner focus ring color.\n/// @param $outer-ring-width [$outer-ring-width-default] - Outer focus ring width.\n@mixin focus-ring-color(\n  $inner-ring-color: $inner-ring-color-default,\n  $outer-ring-color: $outer-ring-color-default\n) {\n  border-color: $inner-ring-color;\n\n  &::after {\n    border-color: $outer-ring-color;\n  }\n}\n\n/// Customizes the border radius of the button focus ring.\n///\n/// @param {Number} $ring-radius - The border radius of the focus ring.\n/// @param {Number} $outer-ring-width [$outer-ring-width] - Width of the outer\n///     ring, required to compute the radius for the inner ring.\n@mixin focus-ring-radius(\n  $ring-radius,\n  $outer-ring-width: $outer-ring-width-default,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-radius: $ring-radius - $outer-ring-width;\n\n    &::after {\n      border-radius: $ring-radius;\n    }\n  }\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n\n$height: 48px !default;\n$width: $height !default;\n\n/// Styles applied to the component's touch target wrapper element.\n@mixin wrapper($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-touch-target-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that styles are only emitted once across all components that\n      // have increased touch targets.\n      @include base-mixins.emit-once('mdc-touch-target/wrapper') {\n        // NOTE: Will change to `inline-block` in the future, but keeping as is\n        // temporarily for backwards-compatibility.\n        display: inline;\n      }\n    }\n  }\n}\n\n/// Styles applied to the component's inner touch target element.\n/// By default, only sets the inner element height to the minimum touch target\n/// height ($mdc-touch-target-height).\n/// @param {Boolean} $set-width [false] - Sets the inner element width to the\n///     minimum touch target width ($mdc-touch-target-width).\n/// @param $height [$mdc-touch-target-height] - Touch target height.\n/// @param $width [$mdc-touch-target-width] - Touch target width.\n@mixin touch-target(\n  $set-width: false,\n  $query: feature-targeting.all(),\n  $height: $height,\n  $width: $width\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 50%;\n    height: $height;\n  }\n\n  @if $set-width {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.ignore-next-line();\n      left: 50%;\n      width: $width;\n      transform: translate(-50%, -50%);\n    }\n  } @else {\n    @include feature-targeting.targets($feat-structure) {\n      left: 0;\n      right: 0;\n      transform: translateY(-50%);\n    }\n  }\n}\n\n/// Applies margin to the component with the increased touch target,\n/// to compensate for the touch target.\n@mixin margin(\n  $component-height,\n  $component-width: null,\n  $touch-target-height: $height,\n  $touch-target-width: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $vertical-margin-value: math.div($touch-target-height - $component-height, 2);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: $vertical-margin-value;\n    margin-bottom: $vertical-margin-value;\n  }\n\n  @if $component-width {\n    $horizontal-margin-value: math.div(\n      $touch-target-width - $component-width,\n      2\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      margin-right: $horizontal-margin-value;\n      margin-left: $horizontal-margin-value;\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n\n@mixin states-background-selector($ripple-target) {\n  #{$ripple-target}::before {\n    @content;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__progress-indicator {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n      position: absolute;\n      width: 100%;\n    }\n\n    .mdc-data-table--in-progress & {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n      }\n    }\n  }\n\n  .mdc-data-table__scrim {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('background-color', surface);\n\n      height: 100%;\n      // TODO(b/151453287): Set appropriate opacity value once we've a UX\n      // guidance.\n      opacity: 0.32;\n      position: absolute;\n      top: 0;\n      width: 100%;\n    }\n  }\n}\n","@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n@use '@material/rtl/mixins' as rtl;\n@use '@material/icon-button/icon-button-theme';\n@use '@material/select/select-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/menu/mixins' as menu-theme;\n@use './data-table-theme';\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n/// Sets core styles for data table pagination.\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__pagination {\n    @include typography.typography(body2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      display: flex;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-data-table__pagination-trailing {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 4px);\n\n      align-items: center;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-data-table__pagination-navigation {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: flex;\n    }\n  }\n\n  .mdc-data-table__pagination-button {\n    @include icon-button-theme.flip-icon-in-rtl($query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 4px);\n    }\n  }\n\n  .mdc-data-table__pagination-total {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(\n        margin,\n        $left-value: 14px,\n        $right-value: 36px\n      );\n\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 22px);\n\n      align-items: center;\n      display: inline-flex;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 12px);\n\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page-select {\n    @include select-theme.variable-width($min-width: 80px, $query: $query);\n    @include menu-theme.min-width(80px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 8px 0;\n    }\n\n    // TODO(b/158196144): Set it to `-5` density scale using density mixin when\n    // select component supports it.\n    @include select-theme.outlined-height(\n      data-table-theme.$pagination-rows-per-page-select-height,\n      $query: $query\n    );\n    .mdc-list-item {\n      @include list-theme.one-line-item-height(\n        data-table-theme.$pagination-rows-per-page-select-height,\n        $query: $query\n      );\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/tokens/resolvers';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/line-ripple/mixins' as line-ripple-mixins;\n@use '@material/list/mixins' as list-mixins;\n@use '@material/list/evolution-mixins' as list-evolution-mixins;\n@use '@material/menu-surface/mixins' as menu-surface-mixins;\n@use '@material/notched-outline/mixins' as notched-outline-mixins;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/rtl/rtl';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/theme/gss';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/variables' as theme-variables;\n@use '@material/typography/mixins' as typography-mixins;\n@use '@material/typography/typography';\n@use './select-icon-theme';\n@use './select-helper-text-theme';\n\n$ripple-target: '.mdc-select__ripple';\n\n@function get-outlined-label-position-y($select-anchor-height) {\n  @return math.div($select-anchor-height, 2) +\n    math.div(notched-outline-variables.$label-box-height, 2);\n}\n\n$arrow-padding: 52px !default;\n$label-padding: 16px !default;\n$height: 56px !default;\n$minimum-height-for-filled-label: 52px !default;\n$filled-baseline-top: 40px !default;\n$selected-text-height: 28px !default;\n$anchor-padding-left: 16px !default;\n$anchor-padding-left-with-leading-icon: 0 !default;\n$anchor-padding-right: 0 !default;\n$outlined-stroke-width: 2px !default;\n$default-width: 200px !default;\n$shape-radius: small !default;\n\n$minimum-height: 40px !default;\n$minimum-height-for-filled-label: 52px !default;\n$maximum-height: $height !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$ink-color: rgba(theme-variables.prop-value(on-surface), 0.87) !default;\n$dropdown-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.54\n) !default;\n$label-color: rgba(theme-variables.prop-value(on-surface), 0.6) !default;\n$focused-label-color: rgba(theme-variables.prop-value(primary), 0.87) !default;\n$bottom-line-idle-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.42\n) !default;\n$bottom-line-hover-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.87\n) !default;\n\n$fill-color: color.mix(\n  theme-variables.prop-value(on-surface),\n  theme-variables.prop-value(surface),\n  4%\n) !default;\n\n// Disabled Styles\n$disabled-label-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-ink-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-fill-color: color.mix(\n  theme-variables.prop-value(on-surface),\n  theme-variables.prop-value(surface),\n  2%\n) !default;\n$disabled-fill-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n$disabled-bottom-line-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n$disabled-dropdown-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-outline-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n\n$outlined-idle-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$outlined-hover-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.87\n) !default;\n\n$label-position-y: 106% !default;\n$outline-label-offset: 16px !default;\n$outlined-label-position-y: get-outlined-label-position-y($height) !default;\n$outlined-with-leading-icon-label-position-x: 32px !default;\n\n$dropdown-transition-duration: 150ms !default;\n// Transition durartions to active state\n$icon-active-fade-out-duration: 0.33 * $dropdown-transition-duration !default;\n$icon-active-fade-in-duration: 0.67 * $dropdown-transition-duration !default;\n// Transition durartions to inactive state\n$icon-inactive-fade-out-duration: 0.5 * $dropdown-transition-duration !default;\n$icon-inactive-fade-in-duration: 0.5 * $dropdown-transition-duration !default;\n\n// Error colors\n$error-color: error !default;\n\n$_light-theme: (\n  // Implement `menu-cascading-menu-indicator-icon-color` when select supports.\n  // Implement `menu-cascading-menu-indicator-icon-size` when select supports.\n  // Implement `menu-container-surface-tint-layer-color` when select supports.\n  // Implement `text-field-disabled-trailing-icon-color` when select supports.\n  // Implement `text-field-hover-trailing-icon-color` when select supports.\n  // Implement `text-field-focus-trailing-icon-color` when select supports.\n  // Implement `text-field-error-trailing-icon-color` when select supports.\n  // Implement `text-field-error-hover-trailing-icon-color` when select supports.\n  // Implement `text-field-error-focus-trailing-icon-color` when select supports.\n  // Implement `text-field-trailing-icon-color` when select supports.\n  // Implement `text-field-trailing-icon-size` when select supports.\n  // Implement `text-field-error-hover-state-layer-color` when select supports.\n  // Implement `text-field-error-hover-state-layer-opacity` when select supports.\n  // Implement `text-field-hover-state-layer-color` when select supports.\n  // Implement `text-field-hover-state-layer-opacity` when select supports.\n  menu-container-color: null,\n  menu-container-elevation: null,\n  menu-container-shadow-color: null,\n  menu-container-shape: null,\n  menu-divider-color: null,\n  menu-divider-height: null,\n  menu-list-item-container-height: null,\n  menu-list-item-label-text-color: null,\n  menu-list-item-label-text-font: null,\n  menu-list-item-label-text-line-height: null,\n  menu-list-item-label-text-size: null,\n  menu-list-item-label-text-tracking: null,\n  menu-list-item-label-text-weight: null,\n  menu-list-item-selected-container-color: null,\n  menu-list-item-with-leading-icon-leading-icon-color: null,\n  menu-list-item-with-leading-icon-leading-icon-size: null,\n  menu-list-item-with-trailing-icon-trailing-icon-color: null,\n  menu-list-item-with-trailing-icon-trailing-icon-size: null,\n  text-field-active-indicator-color: null,\n  text-field-active-indicator-height: null,\n  text-field-caret-color: null,\n  // Token key `text-field-hover-caret-color` not available on DSDB.\n  text-field-hover-caret-color: null,\n  // Token key `text-field-focus-caret-color` not available on DSDB.\n  text-field-focus-caret-color: null,\n  text-field-container-color: null,\n  text-field-container-height: null,\n  text-field-container-shape: null,\n  text-field-disabled-active-indicator-color: null,\n  text-field-disabled-active-indicator-height: null,\n  text-field-disabled-active-indicator-opacity: null,\n  text-field-disabled-container-color: null,\n  text-field-disabled-container-opacity: null,\n  text-field-disabled-input-text-color: null,\n  text-field-disabled-input-text-opacity: null,\n  text-field-disabled-label-text-color: null,\n  text-field-disabled-label-text-opacity: null,\n  text-field-disabled-leading-icon-color: null,\n  text-field-disabled-leading-icon-opacity: null,\n  text-field-disabled-outline-color: null,\n  text-field-disabled-outline-opacity: null,\n  text-field-disabled-outline-width: null,\n  text-field-disabled-supporting-text-color: null,\n  text-field-disabled-supporting-text-opacity: null,\n  text-field-disabled-trailing-icon-opacity: null,\n  text-field-error-active-indicator-color: null,\n  text-field-error-focus-active-indicator-color: null,\n  // Token key `text-field-error-caret-color` not available on DSDB.\n  text-field-error-caret-color: null,\n  // Token key `text-field-error-hover-caret-color` not available on DSDB.\n  text-field-error-hover-caret-color: null,\n  text-field-error-focus-caret-color: null,\n  text-field-error-focus-input-text-color: null,\n  text-field-error-focus-label-text-color: null,\n  text-field-error-focus-leading-icon-color: null,\n  text-field-error-focus-outline-color: null,\n  text-field-error-focus-supporting-text-color: null,\n  text-field-error-hover-active-indicator-color: null,\n  text-field-error-hover-input-text-color: null,\n  text-field-error-hover-label-text-color: null,\n  text-field-error-hover-leading-icon-color: null,\n  text-field-error-hover-outline-color: null,\n  text-field-error-hover-supporting-text-color: null,\n  text-field-error-input-text-color: null,\n  text-field-error-label-text-color: null,\n  text-field-error-leading-icon-color: null,\n  text-field-error-outline-color: null,\n  text-field-error-supporting-text-color: null,\n  text-field-focus-active-indicator-color: null,\n  text-field-focus-active-indicator-height: null,\n  text-field-focus-input-text-color: null,\n  text-field-focus-label-text-color: null,\n  text-field-focus-leading-icon-color: null,\n  text-field-focus-outline-color: null,\n  text-field-focus-outline-width: null,\n  text-field-focus-supporting-text-color: null,\n  text-field-hover-active-indicator-color: null,\n  text-field-hover-active-indicator-height: null,\n  text-field-hover-input-text-color: null,\n  text-field-hover-label-text-color: null,\n  text-field-hover-leading-icon-color: null,\n  text-field-hover-outline-color: null,\n  text-field-hover-outline-width: null,\n  text-field-hover-supporting-text-color: null,\n  text-field-input-text-color: null,\n  text-field-input-text-font: null,\n  text-field-input-text-line-height: null,\n  text-field-input-text-size: null,\n  text-field-input-text-tracking: null,\n  text-field-input-text-weight: null,\n  text-field-label-text-color: null,\n  text-field-label-text-font: null,\n  text-field-label-text-line-height: null,\n  text-field-label-text-populated-line-height: null,\n  text-field-label-text-populated-size: null,\n  text-field-label-text-size: null,\n  text-field-label-text-tracking: null,\n  text-field-label-text-weight: null,\n  text-field-leading-icon-color: null,\n  text-field-leading-icon-size: null,\n  text-field-outline-color: null,\n  text-field-outline-width: null,\n  text-field-supporting-text-color: null,\n  text-field-supporting-text-font: null,\n  text-field-supporting-text-line-height: null,\n  text-field-supporting-text-size: null,\n  text-field-supporting-text-tracking: null,\n  text-field-supporting-text-weight: null\n);\n\n@mixin theme-styles($theme, $resolvers: resolvers.$material) {\n  @include theme.validate-theme-keys($_light-theme, $theme);\n\n  @include container-fill-color(\n    (\n      default: map.get($theme, text-field-container-color),\n      disabled: map.get($theme, text-field-disabled-container-color),\n    )\n  );\n  @include outline-color(\n    (\n      default: map.get($theme, text-field-outline-color),\n      hover: map.get($theme, text-field-hover-outline-color),\n      focus: map.get($theme, text-field-focus-outline-color),\n      disabled: map.get($theme, text-field-disabled-outline-color),\n    )\n  );\n  @include _error-outline-color(\n    (\n      default: map.get($theme, text-field-error-outline-color),\n      hover: map.get($theme, text-field-error-hover-outline-color),\n      focus: map.get($theme, text-field-error-focus-outline-color),\n    )\n  );\n  @include outline-width(\n    (\n      default: map.get($theme, text-field-outline-width),\n      hover: map.get($theme, text-field-hover-outline-width),\n      focus: map.get($theme, text-field-focus-outline-width),\n    )\n  );\n  @include _menu-container-color(map.get($theme, menu-container-color));\n  @include _menu-container-elevation(\n    map.get($resolvers, elevation),\n    $shadow-color: map.get($theme, menu-container-shadow-color),\n    $elevation: map.get($theme, menu-container-elevation)\n  );\n  @include _menu-container-shape(map.get($theme, menu-container-shape));\n  @include _menu-divider-color(map.get($theme, menu-divider-color));\n  @include _menu-divider-height(map.get($theme, menu-divider-height));\n  @include _menu-list-item-container-height(\n    map.get($theme, menu-list-item-container-height)\n  );\n  @include _menu-list-item-label-text-color(\n    map.get($theme, menu-list-item-label-text-color)\n  );\n  @include _menu-list-item-label-text-typography(\n    (\n      font: map.get($theme, menu-list-item-label-text-font),\n      line-height: map.get($theme, menu-list-item-label-text-line-height),\n      size: map.get($theme, menu-list-item-label-text-size),\n      tracking: map.get($theme, menu-list-item-label-text-tracking),\n      weight: map.get($theme, menu-list-item-label-text-weight),\n    )\n  );\n  @include _menu-list-item-selected-container-color(\n    map.get($theme, menu-list-item-selected-container-color)\n  );\n  @include _menu-list-item-with-leading-icon-leading-icon-color(\n    map.get($theme, menu-list-item-with-leading-icon-leading-icon-color)\n  );\n  @include _menu-list-item-with-leading-icon-leading-icon-size(\n    map.get($theme, menu-list-item-with-leading-icon-leading-icon-size)\n  );\n  // TODO: Create new mixin for trailing icon theming when select supports it.\n  @include _menu-list-item-with-leading-icon-leading-icon-color(\n    map.get($theme, menu-list-item-with-trailing-icon-trailing-icon-color)\n  );\n  @include _menu-list-item-with-leading-icon-leading-icon-size(\n    map.get($theme, menu-list-item-with-trailing-icon-trailing-icon-size)\n  );\n  @include bottom-line-color(\n    (\n      default: map.get($theme, text-field-active-indicator-color),\n      hover: map.get($theme, text-field-hover-active-indicator-color),\n      focus: map.get($theme, text-field-focus-active-indicator-color),\n      disabled: map.get($theme, text-field-disabled-indicator-color),\n    )\n  );\n  @include _text-field-error-active-indicator-color(\n    (\n      default: map.get($theme, text-field-error-active-indicator-color),\n      hover: map.get($theme, text-field-error-hover-active-indicator-color),\n      focus: map.get($theme, text-field-error-focus-active-indicator-color),\n    )\n  );\n  @include _text-field-active-indicator-height(\n    map.get($theme, text-field-active-indicator-height)\n  );\n  @include _text-field-caret-color(\n    (\n      default: map.get($theme, text-field-caret-color),\n      hover: map.get($theme, text-field-hover-caret-color),\n      focus: map.get($theme, text-field-focus-caret-color),\n    )\n  );\n  @include _text-field-error-caret-color(\n    (\n      default: map.get($theme, text-field-error-caret-color),\n      hover: map.get($theme, text-field-error-hover-caret-color),\n      focus: map.get($theme, text-field-error-focus-caret-color),\n    )\n  );\n  @include ink-color(\n    (\n      default: map.get($theme, text-field-input-text-color),\n      hover: map.get($theme, text-field-hover-input-text-color),\n      focus: map.get($theme, text-field-focus-input-text-color),\n      disabled: map.get($theme, text-field-disabled-input-text-color),\n    )\n  );\n  @include _error-input-text-color(\n    (\n      default: map.get($theme, text-field-error-input-text-color),\n      hover: map.get($theme, text-field-error-hover-input-text-color),\n      focus: map.get($theme, text-field-error-focus-input-text-color),\n    )\n  );\n  @include label-color(\n    (\n      default: map.get($theme, text-field-label-text-color),\n      hover: map.get($theme, text-field-hover-label-text-color),\n      focus: map.get($theme, text-field-focus-label-text-color),\n      disabled: map.get($theme, text-field-disabled-label-text-color),\n    )\n  );\n  @include label-floating-color(\n    (\n      default: map.get($theme, text-field-label-text-color),\n      hover: map.get($theme, text-field-hover-label-text-color),\n      focus: map.get($theme, text-field-focus-label-text-color),\n      disabled: map.get($theme, text-field-disabled-label-text-color),\n    )\n  );\n  @include _error-label-text-color(\n    (\n      default: map.get($theme, text-field-error-label-text-color),\n      hover: map.get($theme, text-field-error-hover-label-text-color),\n      focus: map.get($theme, text-field-error-focus-label-text-color),\n    )\n  );\n  @include _text-field-leading-icon-color(\n    (\n      default: map.get($theme, text-field-leading-icon-color),\n      hover: map.get($theme, text-field-hover-leading-icon-color),\n      focus: map.get($theme, text-field-focus-leading-icon-color),\n      disabled: map.get($theme, text-field-disabled-leading-icon-color),\n    )\n  );\n  @include _error-text-field-leading-icon-color(\n    (\n      default: map.get($theme, text-field-error-leading-icon-color),\n      hover: map.get($theme, text-field-error-hover-leading-icon-color),\n      focus: map.get($theme, text-field-error-focus-leading-icon-color),\n    )\n  );\n  @include select-helper-text-theme.helper-text-color(\n    (\n      default: map.get($theme, text-field-supporting-text-color),\n      disabled: map.get($theme, text-field-disabled-supporting-text-color),\n    )\n  );\n  @include select-helper-text-theme.helper-text-validation-color(\n    map.get($theme, text-field-error-supporting-text-color)\n  );\n  @include _text-field-input-text-typography(\n    (\n      font: map.get($theme, text-field-input-text-font),\n      line-height: map.get($theme, text-field-input-text-line-height),\n      size: map.get($theme, text-field-input-text-size),\n      tracking: map.get($theme, text-field-input-text-tracking),\n      weight: map.get($theme, text-field-input-text-weight),\n    )\n  );\n  @include _text-field-label-text-typography(\n    (\n      font: map.get($theme, text-field-label-text-font),\n      line-height: map.get($theme, text-field-label-text-line-height),\n      size: map.get($theme, text-field-label-text-size),\n      tracking: map.get($theme, text-field-label-text-tracking),\n      weight: map.get($theme, text-field-label-text-weight),\n    )\n  );\n  @include _text-field-label-text-populated-typography(\n    (\n      line-height: map.get($theme, text-field-label-text-populated-line-height),\n      size: map.get($theme, text-field-label-text-populated-size),\n    )\n  );\n  @include _text-field-supporting-text-typography(\n    (\n      font: map.get($theme, text-field-supporting-text-font),\n      line-height: map.get($theme, text-field-supporting-text-line-height),\n      size: map.get($theme, text-field-supporting-text-size),\n      tracking: map.get($theme, text-field-supporting-text-tracking),\n      weight: map.get($theme, text-field-supporting-text-weight),\n    )\n  );\n}\n\n@mixin _text-field-supporting-text-typography($typography-theme) {\n  & + .mdc-select-helper-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _text-field-input-text-typography($typography-theme) {\n  .mdc-select__selected-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _text-field-label-text-populated-typography($typography-theme) {\n  .mdc-floating-label--float-above,\n  // Used for CSS specificity to match with selector used in `outlined-height()`.\n  &.mdc-select--with-leading-icon .mdc-select__anchor .mdc-notched-outline .mdc-floating-label.mdc-floating-label--float-above {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _text-field-label-text-typography($typography-theme) {\n  .mdc-floating-label {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _error-outline-color($color) {\n  &.mdc-select--invalid {\n    @include outline-color($color);\n  }\n}\n\n@mixin _error-text-field-leading-icon-color($color) {\n  &.mdc-select--invalid {\n    @include _text-field-leading-icon-color($color);\n  }\n}\n\n@mixin _text-field-leading-icon-color($color) {\n  @include _if-enabled {\n    @include _set-text-field-leading-icon-color(\n      state.get-default-state($color)\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _set-text-field-leading-icon-color(\n        state.get-hover-state($color)\n      );\n    }\n\n    @include _if-focused {\n      @include _set-text-field-leading-icon-color(\n        state.get-focus-state($color)\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _set-text-field-leading-icon-color(\n      state.get-disabled-state($color)\n    );\n  }\n}\n\n@mixin _set-text-field-leading-icon-color($color) {\n  .mdc-select__anchor .mdc-select__icon {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _error-label-text-color($color) {\n  &.mdc-select--invalid {\n    @include label-floating-color($color);\n  }\n}\n\n@mixin _error-input-text-color($color) {\n  &.mdc-select--invalid {\n    @include ink-color($color);\n  }\n}\n\n@mixin _text-field-caret-color($color) {\n  @include dropdown-icon-color($color);\n}\n\n@mixin _text-field-error-caret-color($color) {\n  &.mdc-select--invalid {\n    @include dropdown-icon-color($color);\n  }\n}\n\n@mixin _text-field-error-active-indicator-color($color) {\n  &.mdc-select--invalid {\n    @include bottom-line-color($color);\n  }\n}\n\n@mixin _text-field-active-indicator-height($height) {\n  .mdc-line-ripple {\n    @include line-ripple-mixins.height($height);\n  }\n}\n\n@mixin _menu-list-item-with-leading-icon-leading-icon-color($color) {\n  &:not(.mdc-select--disabled) .mdc-select__option .mdc-select__icon {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _menu-list-item-with-leading-icon-leading-icon-size($size) {\n  &:not(.mdc-select--disabled) .mdc-select__option .mdc-select__icon {\n    @include theme.property(font-size, $size);\n  }\n}\n\n@mixin _menu-list-item-selected-container-color($color) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-item-selected-container-color($color);\n  }\n}\n\n@mixin _menu-list-item-label-text-typography($typography-theme) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-primary-text-typography(\n      $typography-theme\n    );\n  }\n}\n\n@mixin _menu-list-item-label-text-color($color) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-primary-text-ink-color($color);\n  }\n}\n\n@mixin _menu-list-item-container-height($height) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-item-height($height);\n  }\n}\n\n@mixin _menu-divider-color($color) {\n  .mdc-select__list {\n    @include list-evolution-mixins.divider-color($color);\n  }\n}\n\n@mixin _menu-divider-height($height) {\n  .mdc-select__list {\n    @include list-evolution-mixins.divider-height($height);\n  }\n}\n\n@mixin _menu-container-color($color) {\n  .mdc-select__menu {\n    @include menu-surface-mixins.fill-color($color);\n  }\n}\n\n@mixin _menu-container-elevation($resolver, $shadow-color, $elevation) {\n  .mdc-select__menu {\n    @include elevation-theme.with-resolver(\n      $resolver,\n      $elevation: $elevation,\n      $shadow-color: $shadow-color\n    );\n  }\n}\n\n@mixin _menu-container-shape($shape) {\n  .mdc-select__menu {\n    @include menu-surface-mixins.shape-radius($shape);\n  }\n}\n\n@mixin menu-list-item-secondary-label-text-color($color) {\n  .mdc-select__list {\n    @include list-evolution-mixins.list-secondary-text-ink-color($color);\n  }\n}\n\n@mixin menu-list-item-secondary-label-text-typography($typography-theme) {\n  .mdc-select__list {\n    @include list-evolution-mixins.list-secondary-text-typography(\n      $typography-theme\n    );\n  }\n}\n\n/// Sets the min-width of the select.\n/// @param {Number} $min-width - The desired min-width.\n/// @deprecated using this mixin is no longer required, and clients may set\n///             the attribute directly\n@mixin min-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    min-width: $min-width;\n  }\n}\n\n/// Sets the select behavior to change width dynamically based on content.\n/// @param {Number} $min-width - The min-width of the select, which should be\n///     large enough to allow the label (if exists) to display in full.\n@mixin variable-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n      min-width: $min-width;\n    }\n  }\n}\n\n@mixin ink-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _ink-color(state.get-default-state($color-or-map), $query: $query);\n  }\n\n  @include _if-disabled {\n    @include _ink-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin container-fill-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _container-fill-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  @include _if-disabled {\n    @include _container-fill-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin dropdown-icon-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _dropdown-icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _dropdown-icon-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _if-focused {\n      @include _dropdown-icon-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _dropdown-icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin label-floating-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _label-floating-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _label-floating-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin bottom-line-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _bottom-line-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    // bottom line inactive/active are on different elements, does not need\n    // to check for :not() focused\n    &:hover {\n      @include _bottom-line-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _focused-line-ripple-color(\n      state.get-focus-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  @include _if-disabled {\n    @include _bottom-line-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin label-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _label-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    @include _if-focused {\n      @include _label-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    &:not(.mdc-select--focused):hover {\n      @include _label-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _label-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _outline-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused) .mdc-select__anchor:hover {\n      @include _hover-outline-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _if-focused {\n      @include _focused-outline-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _outline-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-width($width) {\n  @include _if-enabled {\n    @include _outline-width(state.get-default-state($width));\n\n    &:not(.mdc-select--focused) .mdc-select__anchor:hover {\n      @include _outline-width(state.get-hover-state($width));\n    }\n\n    @include _if-focused {\n      .mdc-notched-outline {\n        @include _outline-width(state.get-focus-state($width));\n      }\n    }\n  }\n}\n\n@mixin _outline-width($width) {\n  @if $width {\n    @include notched-outline-mixins.stroke-width($width);\n  }\n}\n\n///\n/// Sets the dropdown icon to the specified size.\n///\n@mixin dropdown-icon-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__dropdown-icon {\n    @include feature-targeting.targets($feat-structure) {\n      width: $size;\n      height: $size;\n    }\n  }\n}\n\n@mixin filled-shape-radius(\n  $radius,\n  $density-scale: $density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @if meta.type-of($radius) == 'list' and list.length($radius) > 2 {\n    @error \"mdc-select: Invalid radius #{$radius}. Only top-left and top-right corners may be customized.\";\n  }\n\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  $masked-radius: shape-functions.mask-radius($radius, 1 1 0 0);\n\n  .mdc-select__anchor {\n    @include shape-mixins.radius(\n      $masked-radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-shape-radius(\n  $radius,\n  $density-scale: $density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all(),\n  $height: null\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if not $height {\n    $height: density-functions.prop-value(\n      $density-config: $density-config,\n      $density-scale: $density-scale,\n      $property-name: height,\n    );\n  }\n\n  .mdc-notched-outline {\n    @include notched-outline-mixins.shape-radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $height\n  );\n  $unpacked-radius: shape-functions.unpack-radius($resolved-radius);\n  $top-left-radius: list.nth($unpacked-radius, 1);\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  @if (\n    $top-left-is-custom-prop or\n      $top-left-radius-px >\n      notched-outline-variables.$leading-width\n  ) {\n    .mdc-select__anchor {\n      @include _apply-outline-shape-padding(\n        padding-left,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n\n      @include rtl.rtl {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          padding-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          padding-right,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n      }\n    }\n\n    + .mdc-select-helper-text {\n      @include _apply-outline-shape-padding(\n        margin-left,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n\n      @include rtl.rtl {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          margin-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          margin-right,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n      }\n    }\n\n    // Unlike textfield, select does not need to re-apply leading icon padding.\n    // This is because select only has one potential leading class, not two\n    // extra classes like textfield (leading + trailing). Textfield's two extra\n    // classes can cause specificity conflicts, requiring everything to be\n    // re-applied.\n  }\n}\n\n///\n/// Sets density scale for filled select variant.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n///\n@mixin filled-density(\n  $density-scale,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include filled-height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for filled select variant with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n///\n@mixin filled-with-leading-icon-density(\n  $density-scale,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include filled-with-leading-icon-height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for outlined select (Excluding outlined select with leading icon).\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-height($height, $query: $query);\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for outlined select with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-with-leading-icon-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-with-leading-icon-height($height, $query: $query);\n  @include _list-density($density-scale, $query: $query);\n}\n\n@mixin _list-density($density-scale, $query) {\n  @include list-mixins.deprecated-single-line-density(\n    $density-scale,\n    $query: $query\n  );\n  .mdc-select__one-line-option {\n    @include list-evolution-mixins.one-line-item-density(\n      $density-scale,\n      $exclude-variants: true,\n      $query: $query\n    );\n  }\n  .mdc-select__two-line-option {\n    @include list-evolution-mixins.two-line-item-density(\n      $density-scale,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets height of default select variant.\n///\n/// @param {Number} $new-height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n/// @param {Number} $filled-baseline-top The baseline from the top of the anchor\n///     that the input should be aligned to for a filled variant with a label\n/// @access public\n///\n@mixin filled-height(\n  $new-height,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $filled-baseline-top: $filled-baseline-top,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n\n    // Filled variant is aligned to baseline...\n    @include typography-mixins.baseline(\n      $top: $filled-baseline-top,\n      $display: flex,\n      $query: $query\n    );\n    // ...unless it is too small to display a label\n    @if $new-height < $minimum-height-for-filled-label {\n      @include center-aligned($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        .mdc-floating-label {\n          display: none;\n        }\n      }\n    }\n  }\n\n  // No-label variants are always centered\n  &.mdc-select--no-label .mdc-select__anchor {\n    @include center-aligned($query: $query);\n  }\n\n  @if $new-height < $height {\n    @include dropdown-icon-size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--filled {\n      @include truncate-floating-label-max-width(\n        $leading-icon-size: 0,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of filled select variant with leading icon.\n///\n/// @param {Number} $height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n/// @param {Number} $filled-baseline-top The baseline from the top of the anchor\n///     that the input should be aligned to for a filled variant with a label\n/// @access public\n///\n@mixin filled-with-leading-icon-height(\n  $new-height,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $filled-baseline-top: $filled-baseline-top,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include filled-height(\n    $new-height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $filled-baseline-top: $filled-baseline-top,\n    $query: $query\n  );\n\n  @if $new-height < $height {\n    @include select-icon-theme.size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--filled {\n      @include truncate-floating-label-max-width(\n        $leading-icon-size: select-icon-theme.$dense-icon-size,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n\n    .mdc-deprecated-list-item__graphic {\n      width: select-icon-theme.$dense-icon-size;\n      height: select-icon-theme.$dense-icon-size;\n    }\n\n    @include list-evolution-mixins.item-start-size(\n      $width: select-icon-theme.$dense-icon-size + 12px,\n      $height: select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    .mdc-select__anchor {\n      @include leading-icon-floating-label-position(\n        select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of outlined select variant (Excluding outlined select with leading icon).\n///\n/// @param {Number} $new-height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n///\n@mixin outlined-height(\n  $new-height,\n  $keyframe-suffix: select-outlined-#{$new-height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $positionY: get-outlined-label-position-y($new-height);\n\n  .mdc-select__anchor {\n    // Floating label position\n    @include notched-outline-mixins.floating-label-float-position-absolute(\n      $positionY,\n      $query: $query\n    );\n\n    // Floating label animation\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n    @at-root {\n      @include floating-label-mixins.shake-keyframes(\n        $keyframe-suffix,\n        $positionY,\n        $query: $query\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n  }\n\n  @if $new-height < $height {\n    @include dropdown-icon-size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--outlined {\n      @include truncate-notched-outline-max-width(\n        $leading-icon-size: 0,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of outlined select with leading icon variant.\n///\n/// @param {Number} $new-height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n///\n@mixin outlined-with-leading-icon-height(\n  $new-height,\n  $keyframe-suffix: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @if $new-height < $height {\n      @include dropdown-icon-size(\n        select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n      @include outlined-with-leading-icon-floating-label-position-animation(\n        $new-height,\n        select-icon-theme.$dense-icon-size,\n        $keyframe-suffix,\n        $query: $query\n      );\n    } @else {\n      @include outlined-with-leading-icon-floating-label-position-animation(\n        $new-height,\n        select-icon-theme.$icon-size,\n        $keyframe-suffix,\n        $query: $query\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n  }\n\n  @if $new-height < $height {\n    .mdc-deprecated-list-item__graphic {\n      width: select-icon-theme.$dense-icon-size;\n      height: select-icon-theme.$dense-icon-size;\n    }\n\n    @include list-evolution-mixins.item-start-size(\n      $width: select-icon-theme.$dense-icon-size + 12px,\n      $height: select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    @include select-icon-theme.size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--outlined {\n      @include truncate-notched-outline-max-width(\n        $leading-icon-size: select-icon-theme.$dense-icon-size,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n// $add-label-padding is copied from textfield's mixin, even though select\n// always sets it to true. This is to try and keep things aligned between select\n// and textfield for when these styles are refactored into shared styles.\n@mixin _apply-outline-shape-padding(\n  $property,\n  $padding,\n  $add-label-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $padding-is-custom-prop: custom-properties.is-custom-prop($padding);\n  $padding-px: $padding;\n  @if ($padding-is-custom-prop) {\n    $padding-px: custom-properties.get-fallback($padding);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // The shape should only change the padding if the radius becomes greater\n    // than the default padding. That means we need to add more padding.\n    @if ($padding-px > notched-outline-variables.$leading-width) {\n      // Set a px value if it's greater. This is either the only value (if\n      // we're given an exact value), or an IE11 fallback if we're given a\n      // custom property and the fallback value is greater than the padding.\n      $value: $padding-px;\n      @if ($add-label-padding) {\n        // If this is for the top-left leading, add the notched outline padding\n        // to keep it aligned with the label\n        $value: $padding-px + notched-outline-variables.$padding;\n      }\n\n      @include rtl.ignore-next-line();\n      #{$property}: $value;\n      @include gss.annotate(\n        (\n          alternate: $padding-is-custom-prop,\n        )\n      );\n    }\n    @if ($padding-is-custom-prop) {\n      // If it's a custom property, always add it since the value may change\n      // to be greater than the padding at runtime, even if the fallback is\n      // not currently greater than the default padding.\n      $value: custom-properties.create-var($padding);\n      @if ($add-label-padding) {\n        $value: calc(#{$value} + #{notched-outline-variables.$padding});\n      }\n\n      // Interpolation is a workaround for sass/sass#3259.\n      @supports (top: max(#{0%})) {\n        // A max() function makes this runtime dynamic. The padding will be\n        // whichever is greater: the default horizontal padding, or the\n        // calculated custom property plus extra padding.\n        @include rtl.ignore-next-line();\n        #{$property}: max(#{$anchor-padding-left}, #{$value});\n      }\n    }\n  }\n}\n\n// Removes filled baseline alignment\n@mixin center-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__selected-text {\n    @include typography-mixins.zero-width-prefix($query: $query);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // In order for a flexbox container to participate in baseline alignment,\n    // it follows these rules to determine where its baseline is:\n    // https://www.w3.org/TR/css-flexbox-1/#flex-baselines\n    //\n    // In order to avoid leading icons \"controlling\" the baseline (since they\n    // are the first child), flexbox will generate a baseline from any child\n    // flex items that participate in baseline alignment.\n    //\n    // Icons are set to \"align-self: center\", while all other children are\n    // aligned to baseline. The next problem is deciding which child is\n    // used to determine the baseline.\n    //\n    // According to spec, the item with the largest distance between its\n    // baseline and the edge of the cross axis is placed flush with that edge,\n    // making it the baseline of the container.\n    // https://www.w3.org/TR/css-flexbox-1/#baseline-participation\n    //\n    // For the filled variant, the pseudo ::before strut is the \"largest\"\n    // child since the input has a height of 28px and the strut is 40px. We\n    // can emulate center alignment and force the baseline to use the input\n    // text by making the input the full height of the container and removing\n    // the baseline strut.\n    //\n    // IE11 does not respect this, and makes the leading icon (if present)\n    // the baseline.\n    .mdc-select__selected-text-container {\n      height: 100%;\n      display: inline-flex;\n      align-items: center;\n    }\n\n    &::before {\n      display: none;\n    }\n  }\n}\n\n///\n/// Sets the position of the floating label for a select with leading icon.\n/// @param {number} $icon-size - The size of the leading icon.\n///\n@mixin leading-icon-floating-label-position(\n  $icon-size: select-icon-theme.$icon-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $icon-total-width: $icon-size + 2 * select-icon-theme.$icon-horizontal-margin;\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $icon-total-width);\n    }\n  }\n}\n\n///\n/// Sets the floating label position and animations for a given height for an\n/// outlined select with leaing icon.\n/// @param {number} $icon-size - The size of the leading icon.\n/// @param {string} $keyframe-suffix - The suffix for the newly generated keyframes.\n///\n@mixin outlined-with-leading-icon-floating-label-position-animation(\n  $height,\n  $icon-size,\n  $keyframe-suffix: select-outlined-leading-icon-#{$height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $icon-total-width: $icon-size + 2 * select-icon-theme.$icon-horizontal-margin;\n  $resting-position-x: $icon-total-width -\n    select-icon-theme.$icon-horizontal-margin;\n  $float-position-y: get-outlined-label-position-y($height);\n  $float-position-x: $icon-size + select-icon-theme.$icon-horizontal-margin -\n    notched-outline-variables.$notch-gutter-size;\n\n  // Resting label position\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $resting-position-x);\n    }\n  }\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $float-position-y,\n    $float-position-x,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $float-position-y,\n      $float-position-x,\n      $query: $query\n    );\n  }\n\n  $keyframe-suffix-rtl: #{$keyframe-suffix}-rtl;\n  @include rtl.rtl {\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n  }\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix-rtl,\n      $float-position-y,\n      -($float-position-x),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Truncates the max-width of the floating label according to sizes of the\n/// leading icon and dropdown icon.\n///\n/// @param {Number} $leading-icon-size - Size of leading icon.\n/// @param {Number} $dropdown-icon-size - Size of dropdown icon.\n///\n@mixin truncate-floating-label-max-width(\n  $leading-icon-size,\n  $dropdown-icon-size,\n  $query: feature-targeting.all()\n) {\n  $truncation: select-icon-theme.$icon-horizontal-margin * 2 +\n    $dropdown-icon-size;\n\n  @if $leading-icon-size > 0 {\n    $truncation: $truncation +\n      select-icon-theme.$icon-horizontal-margin *\n      2 +\n      $leading-icon-size;\n  } @else {\n    $truncation: $truncation + $outline-label-offset;\n  }\n\n  .mdc-floating-label {\n    @include floating-label-mixins.max-width(\n      calc(100% - #{$truncation}),\n      $query: $query\n    );\n  }\n\n  .mdc-floating-label--float-above {\n    $scale: floating-label-variables.$float-scale;\n    @include floating-label-mixins.max-width(\n      calc(100% / #{$scale} - #{$truncation} / #{$scale}),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Truncates the max-width of the notched outline according to the sizes of\n/// the leading icon and dropdown icon.\n///\n/// @param {Number} $leading-icon-size - Size of leading icon.\n/// @param {Number} $dropdown-icon-size - Size of dropdown icon.\n///\n@mixin truncate-notched-outline-max-width(\n  $leading-icon-size,\n  $dropdown-icon-size,\n  $query: feature-targeting.all()\n) {\n  $truncation: select-icon-theme.$icon-horizontal-margin * 2 +\n    $dropdown-icon-size + notched-outline-variables.$leading-width;\n\n  @if $leading-icon-size > 0 {\n    $truncation: $truncation +\n      select-icon-theme.$icon-horizontal-margin +\n      $leading-icon-size;\n  }\n  .mdc-select__anchor {\n    @include notched-outline-mixins.notch-max-width(\n      calc(100% - #{$truncation}),\n      $query: $query\n    );\n  }\n}\n\n/// Selector for focused state\n/// @access private\n@mixin _if-focused {\n  &.mdc-select--focused {\n    @content;\n  }\n}\n\n/// Selector for enabled state\n/// @access private\n@mixin _if-enabled {\n  &:not(.mdc-select--disabled) {\n    @content;\n  }\n}\n\n/// Selector for disabled state\n/// @access private\n@mixin _if-disabled {\n  &.mdc-select--disabled {\n    @content;\n  }\n}\n\n@mixin _ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__selected-text {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _container-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__anchor {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(background-color, $color);\n      }\n    }\n  }\n}\n\n@mixin _bottom-line-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-line-ripple {\n      @include line-ripple-mixins.inactive-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _focused-line-ripple-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-line-ripple {\n      @include line-ripple-mixins.active-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n@mixin _hover-outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _focused-outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.stroke-width(\n        $outlined-stroke-width,\n        $query: $query\n      );\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _label-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-floating-label {\n      @include floating-label-mixins.ink-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _label-floating-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-floating-label--float-above {\n      @include floating-label-mixins.ink-color($color, $query: $query);\n    }\n  }\n}\n\n///\n/// Sets the dropdown icon to the specified color.\n/// @access private\n///\n@mixin _dropdown-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      .mdc-select__dropdown-icon {\n        @include theme-mixins.property(fill, $color);\n      }\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/rtl/rtl';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/typography/typography';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define floating-label\n  .mdc-floating-label {\n    @include typography.typography(\n      subtitle1,\n      $exclude-props: (line-height),\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      @include rtl.ignore-next-line();\n      left: 0;\n      @include rtl.ignore-next-line();\n      -webkit-transform-origin: left top;\n      @include rtl.ignore-next-line();\n      transform-origin: left top;\n      line-height: 1.15rem;\n      text-align: left;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      cursor: text;\n      overflow: hidden;\n\n      /* @alternate */\n      // Force the label into its own layer to prevent visible layer promotion adjustments\n      // when the ripple is activated behind it.\n      will-change: transform;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        right: 0;\n        @include rtl.ignore-next-line();\n        left: auto;\n        @include rtl.ignore-next-line();\n        -webkit-transform-origin: right top;\n        @include rtl.ignore-next-line();\n        transform-origin: right top;\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: transform variables.$transition-duration\n          animation-variables.$standard-curve-timing-function,\n        color variables.$transition-duration\n          animation-variables.$standard-curve-timing-function;\n    }\n  }\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: auto;\n    }\n  }\n\n  .mdc-floating-label--required {\n    &::after {\n      @include _required-content($query);\n    }\n\n    @include rtl.rtl {\n      &::after {\n        @include _required-content-rtl($query);\n      }\n    }\n  }\n\n  @at-root {\n    @include float-position(variables.$position-y, $query: $query);\n    @include shake-animation(standard, $query: $query);\n  }\n\n  @include shake-keyframes(standard, variables.$position-y, $query: $query);\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n// Used for textarea in case of scrolling\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin shake-keyframes(\n  $modifier,\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-floating-label-shake-float-above-#{$modifier} {\n      0% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      33% {\n        animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      66% {\n        animation-timing-function: cubic-bezier(\n          0.302435,\n          0.381352,\n          0.55,\n          0.956352\n        );\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(-4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      100% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n    }\n  }\n}\n\n@mixin float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      @if $positionX > 0 or $positionX < 0 {\n        @include rtl.ignore-next-line();\n        transform: translateY(-1 * $positionY)\n          translateX(-1 * $positionX)\n          scale($scale);\n\n        @include rtl.rtl {\n          @include rtl.ignore-next-line();\n          transform: translateY(-1 * $positionY) translateX($positionX)\n            scale($scale);\n        }\n      } @else {\n        transform: translateY(-1 * $positionY) scale($scale);\n      }\n    }\n  }\n}\n\n@mixin shake-animation($modifier, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-floating-label--shake {\n    @include feature-targeting.targets($feat-animation) {\n      animation: mdc-floating-label-shake-float-above-#{$modifier} 250ms 1;\n    }\n  }\n}\n\n@mixin max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    max-width: $max-width;\n  }\n}\n\n///\n/// Sets the CSS transition for the floating animation.\n///\n/// @param {Number} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin float-transition(\n  $duration-ms,\n  $timing-function: animation-variables.$standard-curve-timing-function,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: color $duration-ms $timing-function,\n      transform $duration-ms $timing-function;\n  }\n}\n\n@mixin _required-content($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 1px;\n    @include rtl.ignore-next-line();\n    margin-right: 0px;\n    content: '*';\n  }\n}\n\n// Need to specify LTR/RTL manually since rtl mixins will add ::after[dir=rtl]\n// selector and that breaks some browsers\n@mixin _required-content-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 0;\n    @include rtl.ignore-next-line();\n    margin-right: 1px;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/theme/state';\n@use '@material/theme/variables' as theme-variables;\n\n$icon-size: 24px !default;\n$dense-icon-size: 20px !default;\n$icon-horizontal-margin: 12px !default;\n\n$icon-color: rgba(theme-variables.prop-value(on-surface), 0.54) !default;\n$disabled-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n\n///\n/// Customizes the size (both width and height) of the icon.\n/// @param {Number} $size - the intended icon size.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-select__icon {\n      width: $size;\n      height: $size;\n      font-size: $size;\n    }\n  }\n}\n\n@mixin icon-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(.mdc-select--disabled) {\n    @include _icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  &.mdc-select--disabled {\n    @include _icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin icon-horizontal-margins($left, $right, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-select__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, $left, $right);\n    }\n  }\n}\n\n@mixin _icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__icon {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n","// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use '@material/theme/theme';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme-color';\n@use './evolution-variables' as variables;\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode($query);\n\n  .mdc-list {\n    @include list-base($query: $query);\n  }\n\n  .mdc-list-item__wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      display: block;\n    }\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n\n    @include _one-line-item-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n    @include _three-line-item-density(\n      variables.$three-line-item-density-scale,\n      $query: $query\n    );\n\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before, // lint-disable-focus-psuedo-selector\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    // lint-disable-focus-psuedo-selector\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  // stylelint-disable selector-max-type,selector-no-qualifying-type\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type,selector-no-qualifying-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(56px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _two-line-item-end-baseline($top: 28px, $query: $query);\n    @include _three-line-item-end-baseline($top: 28px, $query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include item-end-size(40px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include item-end-size(40px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n\n  .mdc-list-group__subheader {\n    $mdc-list-subheader-virtual-height: 3rem;\n    $mdc-list-subheader-leading: map.get(\n      map.get(typography.$styles, body1),\n      line-height\n    );\n    $mdc-list-subheader-margin: calc(\n      (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) /\n        2\n    );\n\n    @include typography.typography(subtitle1, $query);\n    @include feature-targeting.targets($feat-structure) {\n      margin: $mdc-list-subheader-margin variables.$side-padding;\n    }\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n  @include divider-height(1px, $query: $query);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n\n  .mdc-list-item--disabled {\n    @include ripple.surface(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple.radius-bounded(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-base-color(\n      theme-color.prop-value(on-surface),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-focus-opacity(\n      ripple-theme.states-opacity(primary, focus),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n\n    #{variables.$ripple-target} {\n      @include ripple.target-common($query: $query);\n    }\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-height($height) {\n  &.mdc-list-item--with-one-line,\n  &.mdc-list-item--with-two-lines,\n  &.mdc-list-item--with-three-lines {\n    height: $height;\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-selected-container-color($color) {\n  &.mdc-list-item--selected {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin list-primary-text-typography($typography-theme) {\n  .mdc-list-item__primary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-typography($typography-theme) {\n  .mdc-list-item__secondary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include _item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        opacity: $opacity;\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-end-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: $top,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-end-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: $top,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin _item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n\n      @include feature-targeting.targets($feat-color) {\n        // Color ensures border is shown, but will be overridden by the browser.\n        @include theme.property(border-bottom-color, white);\n      }\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n\n@mixin states-background-selector($ripple-target) {\n  #{$ripple-target}::before {\n    @content;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@material/animation/functions' as functions2;\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/color-custom-properties';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/shadow-dom';\n@use '@material/touch-target/touch-target';\n@use './checkbox-custom-properties';\n\n$baseline-theme-color: secondary !default;\n$mark-color: theme-color.prop-value(on-secondary) !default;\n$border-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$disabled-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n\n$ripple-size: 40px !default;\n$icon-size: 18px !default;\n$mark-stroke-size: math.div(2, 15) * $icon-size !default;\n$border-width: 2px !default;\n$transition-duration: 90ms !default;\n$item-spacing: 4px !default;\n$focus-indicator-opacity: map.get(\n  ripple-theme.$dark-ink-opacities,\n  focus\n) !default;\n\n$minimum-size: 28px !default;\n$maximum-size: $ripple-size !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    minimum: $minimum-size,\n    default: $ripple-size,\n    maximum: $maximum-size,\n  ),\n) !default;\n\n$ripple-target: '.mdc-checkbox__ripple';\n$custom-property-prefix: 'checkbox';\n\n// TODO(b/188417756): State layer (ripple) size token is missing including\n//     `state-layer-size`.\n// TODO(b/188529841): `selected-checkmark-color` and `disabled-selected-checkmark-color` does not exist in tokens.\n$light-theme: (\n  disabled-selected-checkmark-color: $mark-color,\n  disabled-selected-icon-color: $disabled-color,\n  disabled-selected-icon-opacity: null,\n  disabled-unselected-icon-color: $disabled-color,\n  disabled-unselected-icon-opacity: null,\n  selected-checkmark-color: $mark-color,\n  selected-focus-icon-color: $baseline-theme-color,\n  selected-focus-state-layer-color: theme-color.$on-surface,\n  selected-focus-state-layer-opacity: 0.12,\n  selected-hover-icon-color: $baseline-theme-color,\n  selected-hover-state-layer-color: $baseline-theme-color,\n  selected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  selected-icon-color: $baseline-theme-color,\n  selected-pressed-icon-color: $baseline-theme-color,\n  selected-pressed-state-layer-color: theme-color.$on-surface,\n  selected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n  state-layer-size: $ripple-size,\n  unselected-focus-icon-color: $baseline-theme-color,\n  unselected-focus-state-layer-color: theme-color.$on-surface,\n  unselected-focus-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, focus),\n  unselected-hover-icon-color: $baseline-theme-color,\n  unselected-hover-state-layer-color: theme-color.$on-surface,\n  unselected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  unselected-icon-color: $border-color,\n  unselected-pressed-icon-color: $border-color,\n  unselected-pressed-state-layer-color: theme-color.$on-surface,\n  unselected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n);\n\n$forced-colors-theme: (\n  disabled-selected-checkmark-color: ButtonFace,\n  disabled-selected-icon-color: GrayText,\n  disabled-selected-icon-opacity: 1,\n  disabled-unselected-icon-color: GrayText,\n  disabled-unselected-icon-opacity: 1,\n  selected-checkmark-color: ButtonText,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme-keys($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-keys($light-theme, $theme);\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include disabled-container-colors(\n    $unmarked-stroke-color: map.get($theme, disabled-unselected-icon-color),\n    $marked-fill-color: map.get($theme, disabled-selected-icon-color)\n  );\n\n  @include ink-color(map.get($theme, selected-checkmark-color));\n  @include disabled-ink-color(\n    map.get($theme, disabled-selected-checkmark-color)\n  );\n\n  @include _icon-color(\n    map.get($theme, unselected-icon-color),\n    map.get($theme, selected-icon-color)\n  );\n\n  &:hover {\n    @include _icon-color(\n      map.get($theme, unselected-hover-icon-color),\n      map.get($theme, selected-hover-icon-color)\n    );\n  }\n\n  @include ripple-theme.focus() {\n    @include _icon-color(\n      map.get($theme, unselected-focus-icon-color),\n      map.get($theme, selected-focus-icon-color)\n    );\n  }\n\n  @include ripple-theme.active() {\n    @include _icon-color(\n      map.get($theme, unselected-pressed-icon-color),\n      map.get($theme, selected-pressed-icon-color)\n    );\n  }\n\n  @include ripple-color(\n    $color: map.get($theme, unselected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, unselected-hover-state-layer-opacity),\n      focus: map.get($theme, unselected-focus-state-layer-opacity),\n      press: map.get($theme, unselected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include focus-indicator-color(\n    $color: map.get($theme, selected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, selected-hover-state-layer-opacity),\n      focus: map.get($theme, selected-focus-state-layer-opacity),\n      press: map.get($theme, selected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include ripple-size(map.get($theme, state-layer-size));\n  // Set touch target to ripple size.\n  @include touch-target(\n    map.get($theme, state-layer-size),\n    map.get($theme, state-layer-size)\n  );\n}\n\n$light-theme-deprecated: (\n  density-scale: 0,\n  checkmark-color: $mark-color,\n  container-checked-color: $baseline-theme-color,\n  container-checked-hover-color: null,\n  container-disabled-color: $disabled-color,\n  outline-color: $border-color,\n  outline-hover-color: null,\n  ripple-color: theme-color.$on-surface,\n  ripple-opacity: ripple-theme.$dark-ink-opacities,\n  ripple-checked-color: $baseline-theme-color,\n  ripple-checked-opacity: ripple-theme.$dark-ink-opacities,\n);\n\n/// Sets theme to checkbox based on provided theme configuration.\n/// Only emits theme related styles.\n/// @param {Map} $theme - Theme configuration to use for theming checkbox.\n@mixin theme-deprecated($theme, $query: feature-targeting.all()) {\n  @include theme.validate-theme($light-theme-deprecated, $theme);\n\n  $ripple-color: map.get($theme, ripple-color);\n  $ripple-opacity: map.get($theme, ripple-opacity);\n  @if $ripple-opacity == null {\n    $ripple-opacity: ();\n  }\n  @if $ripple-color {\n    @include ripple-color(\n      $color: $ripple-color,\n      $opacity-map: $ripple-opacity,\n      $query: $query\n    );\n  }\n\n  $ripple-checked-color: map.get($theme, ripple-checked-color);\n  $ripple-checked-opacity: map.get($theme, ripple-checked-opacity);\n  @if $ripple-checked-opacity == null {\n    $ripple-checked-opacity: ();\n  }\n  @if $ripple-checked-color {\n    @include focus-indicator-color(\n      $color: $ripple-checked-color,\n      $opacity-map: $ripple-checked-opacity,\n      $query: $query\n    );\n  }\n\n  $density-scale: map.get($theme, density-scale);\n  @if $density-scale != null {\n    @include density($density-scale: $density-scale, $query: $query);\n  }\n\n  $outline-color: map.get($theme, outline-color);\n  $container-checked-color: map.get($theme, container-checked-color);\n  @if (\n    ($outline-color and not $container-checked-color) or\n      (not $outline-color and $container-checked-color)\n  ) {\n    @error 'Both `outline-color` and `container-checked-color` keys should be provided.';\n  }\n  @if ($outline-color and $container-checked-color) {\n    @include container-colors(\n      $unmarked-stroke-color: $outline-color,\n      $marked-stroke-color: $container-checked-color,\n      $marked-fill-color: $container-checked-color,\n      $query: $query\n    );\n  }\n\n  $outline-hover-color: map.get($theme, outline-hover-color);\n  $container-checked-hover-color: map.get(\n    $theme,\n    container-checked-hover-color\n  );\n  @if (\n    ($outline-hover-color and not $container-checked-hover-color) or\n      (not $outline-hover-color and $container-checked-hover-color)\n  ) {\n    @error 'Both `outline-hover-color` and `container-checked-hover-color` keys should be provided.';\n  }\n  @if ($outline-hover-color and $container-checked-hover-color) {\n    @include ripple-theme.states-selector() {\n      @include container-colors(\n        $unmarked-stroke-color: $outline-hover-color,\n        $marked-stroke-color: $container-checked-hover-color,\n        $marked-fill-color: $container-checked-hover-color,\n        $query: $query\n      );\n    }\n  }\n\n  $container-disabled-color: map.get($theme, container-disabled-color);\n  @if $container-disabled-color {\n    @include disabled-container-colors(\n      $unmarked-stroke-color: $container-disabled-color,\n      $marked-fill-color: $container-disabled-color,\n      $query: $query\n    );\n  }\n\n  $checkmark-color: map.get($theme, checkmark-color);\n  @if $checkmark-color {\n    @include ink-color($checkmark-color, $query: $query);\n    @include disabled-ink-color($checkmark-color, $query: $query);\n  }\n}\n\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values `-3`, `-2`, `-1`, `0`.\n/// @return Returns ripple size of checkbox for given density scale.\n///\n@function get-ripple-size($density-scale) {\n  @return density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size\n  );\n}\n\n///\n/// Sets density scale for checkbox.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values\n///     `-3`, `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: get-ripple-size($density-scale);\n\n  @include ripple-size($size, $query: $query);\n  @include touch-target($size, $ripple-size: $size, $query: $query);\n}\n\n/// Sets ripple size of checkbox and optionally set touch target size which can\n/// be more than the size of ripple.\n/// @param {Number} $ripple-size - Visual ripple size of checkbox.\n@mixin ripple-size($ripple-size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $ripple-size and not custom-properties.is-custom-prop($ripple-size) {\n    $ripple-size: custom-properties.create(\n      checkbox-custom-properties.$ripple-size,\n      $ripple-size\n    );\n  }\n  $checkbox-padding: 'calc((_ripple-size - _icon-size) / 2)';\n  $replace: (\n    _ripple-size: $ripple-size,\n    _icon-size: $icon-size,\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(padding, $checkbox-padding, $replace: $replace);\n  }\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(top, $checkbox-padding, $replace: $replace);\n      @include theme.property(left, $checkbox-padding, $replace: $replace);\n    }\n  }\n}\n\n/// Sets the touch target size and appropriate margin to accommodate the\n/// touch target.\n/// @param {Number} $touch-target-size Size of touch target (Native input) in `px`.\n/// @param {Number} $ripple-size Size of ripple in `px`.\n@mixin touch-target(\n  $touch-target-size,\n  $ripple-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $touch-target-size {\n    @if not custom-properties.is-custom-prop($touch-target-size) {\n      $touch-target-size: custom-properties.create(\n        checkbox-custom-properties.$touch-target-size,\n        $touch-target-size\n      );\n    }\n\n    $margin: 'calc((_touch-target-size - _ripple-size) / 2)';\n    $replace: (\n      _touch-target-size: $touch-target-size,\n      _ripple-size: $ripple-size,\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(margin, $margin, $replace: $replace);\n    }\n\n    $offset: 'calc((_ripple-size - _touch-target-size) / 2)';\n\n    @include feature-targeting.targets($feat-structure) {\n      .mdc-checkbox__native-control {\n        @include theme.property(top, $offset, $replace: $replace);\n        @include theme.property(right, $offset, $replace: $replace);\n        @include theme.property(left, $offset, $replace: $replace);\n        @include theme.property(width, $touch-target-size);\n        @include theme.property(height, $touch-target-size);\n      }\n    }\n  }\n}\n\n@mixin _icon-color($unselected-color, $selected-color) {\n  @if $unselected-color and $selected-color {\n    @include container-colors(\n      $unmarked-stroke-color: $unselected-color,\n      $marked-stroke-color: $selected-color,\n      $marked-fill-color: $selected-color\n    );\n  } @else if $unselected-color or $selected-color {\n    @error 'Both unselected and selected icon colors should be provided.';\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of enabled checkbox.\n/// Set $generate-keyframes to false to prevent the mixin from generating @keyframes\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n/// @param {Boolean} $generate-keyframes [true] - Whether animation keyframes should be generated\n///\n@mixin container-colors(\n  $unmarked-stroke-color: $border-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: $baseline-theme-color,\n  $marked-fill-color: $baseline-theme-color,\n  $generate-keyframes: true,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Unchecked colors\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$unchecked-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @include if-unmarked-enabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  // Checked colors\n  @if (\n    $marked-stroke-color and not\n      custom-properties.is-custom-prop($marked-stroke-color)\n  ) {\n    $marked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-stroke-color)\n      )\n    );\n  }\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-fill-color)\n      )\n    );\n  }\n\n  @include if-marked-enabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if $generate-keyframes and\n    $unmarked-stroke-color and\n    $marked-stroke-color and\n    $unmarked-fill-color and\n    $marked-fill-color\n  {\n    $uid: theme-color.color-hash($unmarked-stroke-color) +\n      theme-color.color-hash($marked-stroke-color) +\n      theme-color.color-hash($unmarked-fill-color) +\n      theme-color.color-hash($marked-fill-color);\n\n    $anim-selector: if(&, '&.mdc-checkbox--anim', '.mdc-checkbox--anim');\n\n    @include feature-targeting.targets($feat-animation, $feat-color) {\n      @include container-keyframes_(\n        $from-stroke-color: $unmarked-stroke-color,\n        $to-stroke-color: $marked-stroke-color,\n        $from-fill-color: $unmarked-fill-color,\n        $to-fill-color: $marked-fill-color,\n        $uid: #{$uid}\n      );\n    }\n\n    #{$anim-selector} {\n      &-unchecked-checked,\n      &-unchecked-indeterminate {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-in-background-#{$uid};\n          }\n        }\n      }\n\n      &-checked-unchecked,\n      &-indeterminate-unchecked {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-out-background-#{$uid};\n          }\n        }\n      }\n    }\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of disabled checkbox.\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n///\n@mixin disabled-container-colors(\n  $unmarked-stroke-color: $disabled-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: transparent,\n  $marked-fill-color: $disabled-color,\n  $query: feature-targeting.all()\n) {\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @if $unmarked-stroke-color == null {\n    $unmarked-fill-color: null;\n  }\n\n  @include if-unmarked-disabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($marked-fill-color)\n    );\n  }\n\n  @if $marked-fill-color and\n    custom-properties.get-fallback($marked-fill-color) ==\n    GrayText\n  {\n    // Transparent appears white in HCM\n    $marked-stroke-color: GrayText;\n  }\n\n  @if $marked-fill-color == null {\n    $marked-stroke-color: null;\n  }\n\n  @include if-marked-disabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for an enabled checkbox\n/// @param {Color} $color - The desired ink color in enabled state\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-enabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a disabled checkbox\n/// @param {Color} $color - The desired ink color in disabled state\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n/// Sets ripple color when checkbox is not in checked state.\n@mixin ripple-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  @include ripple-theme.states(\n    $color: $color,\n    $opacity-map: $opacity-map,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n/// Sets focus indicator color when checkbox is in checked state.\n@mixin focus-indicator-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-checkbox--selected {\n    @include ripple-theme.states(\n      $color: $color,\n      $opacity-map: $opacity-map,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n\n  &.mdc-ripple-upgraded--background-focused.mdc-checkbox--selected {\n    @include ripple-theme.states-base-color(\n      $color: $color,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n//\n// Private\n//\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// enabled state.\n/// @access private\n///\n@mixin if-enabled_ {\n  .mdc-checkbox__native-control:enabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  .mdc-checkbox__native-control:disabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & enabled state.\n/// @access private\n///\n@mixin if-unmarked-enabled_ {\n  .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & disabled state.\n/// @access private\n///\n@mixin if-unmarked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & enabled state.\n/// @access private\n///\n@mixin if-marked-enabled_ {\n  .mdc-checkbox__native-control:enabled:checked,\n  .mdc-checkbox__native-control:enabled:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true']:enabled {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & disabled state.\n/// @access private\n///\n@mixin if-marked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:checked,\n  .mdc-checkbox__native-control[disabled]:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true'][disabled] {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Sets the stroke & fill colors for the checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked-enabled_`.\n/// @access private\n///\n@mixin container-colors_(\n  $stroke-color,\n  $fill-color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $stroke-color);\n      @include theme.property(background-color, $fill-color);\n    }\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    .mdc-checkbox__checkmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(border-color, $color);\n      }\n    }\n  }\n}\n\n@mixin container-keyframes_(\n  $from-stroke-color,\n  $to-stroke-color,\n  $from-fill-color,\n  $to-fill-color,\n  $uid\n) {\n  @keyframes mdc-checkbox-fade-in-background-#{$uid} {\n    0% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n\n    50% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n  }\n\n  @keyframes mdc-checkbox-fade-out-background-#{$uid} {\n    0%,\n    80% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n\n    100% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}