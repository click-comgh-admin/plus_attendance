{"version":3,"file":"../../production_public/assets/v2/dev-files/css/src_assets_styles_views_admin_register_main_scss.css","mappings":"AAAA;EACI;EACA;ACCJ;;ADGA;AENA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ADOJ;;ADXA;AAGA;AGbA;AAAgE;EAAiB;EAAuB;AF6BxG;;AE7B8H;EAAe;AFiC7I;;AEjC6J;EAAK;EAA8B;EAA6B;EAAiM;EAAgB;EAAgB;EAAc;AF2C5c;;AE3Cud;EAAK;EAAoB;AFgDhf;;AEhDyf;EAAG;EAAqB;EAAc;AFsD/hB;;AEtDwiB;EAAoB;EAAyC;AF2DrmB;;AE3DsoB;EAAkB;EAAkB;AFgE1qB;;AEhE8rB;EAAE;EAAc;AFqE9sB;;AErEsuB;EAAS;AFyE/uB;;AEzEkwB;EAAkB;EAAoG;AF8Ex3B;;AE9Es4B;EAAM;AFkF54B;;AElF05B;EAAQ;EAAc;EAAc;EAAkB;AFyFh9B;;AEzFw+B;EAAI;AF6F5+B;;AE7F0/B;EAAI;AFiG9/B;;AEjGwgC;EAAM;EAAyB;EAAqB;AFuG5jC;;AEvG0kC;EAAsC;EAAc;EAAoB;EAAe;EAAoB;EAAoB;EAAS;AFiHltC;;AEjH4tC;EAAc;AFqH1uC;;AErH8vC;EAAgD;EAA0B;EAA6B;AF2Hr2C;;AE3H23C;EAAgB;AF+H34C;;AE/Hw5C;EAAiB;AFmIz6C;;AEnIy7C;EAAS;AFuIl8C;;AEvI09C;EAAwD;AF2IlhD;;AE3I8hD;EAAc;EAA6B;AFgJzkD;;AEhJ6lD;EAA4B;AFoJznD;;AEpJipD;EAA6B;EAA0B;AFyJxsD;;AEzJqtD;EAAQ;AF6J7tD;;AE7J+uD;EAAmD;AFiKlyD;;AEjK2yD;EAAS;AFqKpzD;;AErK6zD;EAAgB;AFyK70D;;AEzKu1D;EAAW;EAAgB;EAAS;AF+K33D;;AE/Kq4D;EAAS;AFmL94D;;AEnL85D;EAAmD;EAAc;AFwL/9D;;AExLy+D;EAAyC;EAAc;AF6LhiE;;AE7L0iE;EAAqB;AFiM/jE;;AEjM8kE;EAAU;AFqMxlE;;AErMumE;EAA+C;EAAc;AF0MpqE;;AE1M0rE;EAAU;EAAY;AF+MhtE;;AE/M+tE;EAAS;AFmNxuE;;AEnNqvE;EAAiB;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AFkQjpG;;AElQuqG;EAAW;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AFiT7jI;;AEjTmlI;EAAW;AFqT9lI;;AErTymI;EAAyB;IAAW;EF0T3oI;AACF;AE3T8pI;EAAyB;IAAW;EF+ThsI;AACF;AEhUmtI;EAA0B;IAAW;EFoUtvI;AACF;AErU0wI;EAA0B;IAAW;EFyU7yI;AACF;AE1Ui0I;EAA0B;IAAW;EF8Up2I;AACF;AE/Uw3I;EAA0B;IAAW;EFmV35I;AACF;AEpV+6I;EAAS;AFuVx7I;;AEvV28I;EAAW;AF2Vt9I;;AE3Vw+I;EAAQ;AF+Vh/I;;AE/VggJ;EAAO;AFmWvgJ;;AEnWshJ;EAAU;AFuWhiJ;;AEvWkjJ;EAAU;AF2W5jJ;;AE3W8kJ;EAAS;EAAS;EAAO;EAAQ;AFkX/mJ;;AElXqnJ;EAAQ;AFsX7nJ;;AEtXwoJ;EAAQ;AF0XhpJ;;AE1XupJ;EAAS;AF8XhqJ;;AE9XwqJ;EAAS;AFkYjrJ;;AElY4rJ;EAAW;AFsYvsJ;;AEtYmtJ;EAAO;AF0Y1tJ;;AE1YguJ;EAAO;AF8YvuJ;;AE9YgvJ;EAAS;AFkZzvJ;;AElZmwJ;EAAQ;AFsZ3wJ;;AEtZoxJ;EAAQ;AF0Z5xJ;;AE1ZqyJ;EAAU;AF8Z/yJ;;AE9Z4zJ;EAAS;AFkar0J;;AElam1J;EAAU;AFsa71J;;AEta42J;EAAgB;AF0a53J;;AE1au4J;EAAM;AF8a74J;;AE9aw5J;EAAM;AFkb95J;;AElby6J;EAAM;AFsb/6J;;AEtb07J;EAAK;AF0b/7J;;AE1by8J;EAAK;AF8b98J;;AE9b49J;EAAK;AFkcj+J;;AElc0+J;EAAO;EAAmB;AFucpgK;;AEvcohK;EAAS;EAAiB;AF4c9iK;;AE5cgkK;EAAO;EAAiB;AFidxlK;;AEjd0mK;EAAM;EAAoB;AFsdpoK;;AEtdqpK;EAAM;EAAgB;AF2d3qK;;AE3dwrK;EAAM;EAAqB;AFgentK;;AEhequK;EAAM;EAAiB;AFqe5vK;;AEre8wK;EAAM;EAAmB;AF0evyK;;AE1euzK;EAAM;EAAkB;AF+e/0K;;AE/ek2K;EAAM;EAAmB;AFof33K;;AEpf+4K;EAAQ;EAA6B;AFyfp7K;;AEzfk9K;EAAQ;EAA+B;AF8fz/K;;AE9fqhL;EAAO;AFkgB5hL;;AElgB+iL;EAAO;AFsgBtjL;;AEtgBskL;EAAO;AF0gB7kL;;AE1gBgmL;EAAM;AF8gBtmL;;AE9gBynL;EAAM;AFkhB/nL;;AElhBipL;EAAM;AFshBvpL;;AEthB2qL;EAAM;AF0hBjrL;;AE1hBmsL;EAAM;AF8hBzsL;;AE9hBytL;EAAM;AFkiB/tL;;AEliBkvL;EAAM;AFsiBxvL;;AEtiB0wL;EAAM;AF0iBhxL;;AE1iBiyL;EAAM;AF8iBvyL;;AE9iB4zL;EAAM;AFkjBl0L;;AEljBs1L;EAAM;AFsjB51L;;AEtjB+2L;EAAM;AF0jBr3L;;AE1jBk4L;EAAM;AF8jBx4L;;AE9jB05L;EAAM;AFkkBh6L;;AElkBk7L;EAAM;AFskBx7L;;AEtkBs8L;EAAM;AF0kB58L;;AE1kB29L;EAAM;AF8kBj+L;;AE9kBo/L;EAAO;AFklB3/L;;AEllB6gM;EAAO;AFslBphM;;AEtlBuiM;EAAO;AF0lB9iM;;AE1lBikM;EAAM;AF8lBvkM;;AE9lBwlM;EAAO;AFkmB/lM;;AElmBinM;EAAO;AFsmBxnM;;AEtmBsoM;EAAS;AF0mB/oM;;AE1mBuqM;EAAc;AF8mBrrM;;AE9mB0sM;EAAM;AFknBhtM;;AElnB6tM;EAAQ;AFsnBruM;;AEtnB4vM;EAAa;AF0nBzwM;;AE1nB6xM;EAAO;AF8nBpyM;;AE9nBkzM;EAAY;AFkoB9zM;;AEloBi1M;EAAoB;AFsoBr2M;;AEtoBg4M;EAAiB;AF0oBj5M;;AE1oBy6M;EAAW;AF8oBp7M;;AE9oBs8M;EAAM;AFkpB58M;;AElpBy9M;EAAU;AFspBn+M;;AEtpBo/M;EAAQ;AF0pB5/M;;AE1pBygN;EAAM;AF8pB/gN;;AE9pB4hN;EAAQ;AFkqBpiN;;AElqBgjN;EAAK;AFsqBrjN;;AEtqBikN;EAAM;AF0qBvkN;;AE1qBmlN;EAAM;AF8qBzlN;;AE9qBqmN;EAAM;AFkrB3mN;;AElrBwnN;EAAM;AFsrB9nN;;AEtrB2oN;EAAK;AF0rBhpN;;AE1rB8pN;EAAM;AF8rBpqN;;AE9rBirN;EAAM;AFksBvrN;;AElsBosN;EAAM;AFssB1sN;;AEtsBstN;EAAM;AF0sB5tN;;AE1sB0uN;EAAM;AF8sBhvN;;AE9sB+vN;EAAK;AFktBpwN;;AEltBixN;EAAM;AFstBvxN;;AEttBmyN;EAAO;EAAwB;AF2tBl0N;;AE3tBq1N;EAAa;AF+tBl2N;;AE/tB+2N;EAAU;AFmuBz3N;;AEnuB04N;EAAQ;AFuuBl5N;;AEvuB65N;EAAK;AF2uBl6N;;AE3uB66N;EAAM;AF+uBn7N;;AE/uB87N;EAAM;AFmvBp8N;;AEnvB+8N;EAAO;EAAuB;AFwvB7+N;;AExvB+/N;EAAK;AF4vBpgO;;AE5vBihO;EAAK;AFgwBthO;;AEhwBmiO;EAAK;AFowBxiO;;AEpwBojO;EAAQ;AFwwB5jO;;AExwBukO;EAAM;AF4wB7kO;;AE5wBylO;EAAM;AFgxB/lO;;AEhxB2mO;EAAM;AFoxBjnO;;AEpxB4nO;EAAM;AFwxBloO;;AExxB8oO;EAAM;AF4xBppO;;AE5xBgqO;EAAM;AFgyBtqO;;AEhyBkrO;EAAmB;EAAuB;AFqyB5tO;;AEryB8uO;EAAa;AFyyB3vO;;AEzyBuwO;EAAQ;AF6yB/wO;;AE7yBoyO;EAAc;AFizBlzO;;AEjzB20O;EAAQ;AFqzBn1O;;AErzB+1O;EAAa;AFyzB52O;;AEzzB03O;EAAW;AF6zBr4O;;AE7zBi5O;EAAW;AFi0B55O;;AEj0B86O;EAAsB;AFq0Bp8O;;AEr0BkoP;EAAQ;AFy0B1oP;;AEz0BspP;EAAW;AF60BjqP;;AE70BsrP;EAAiB;EAAwB;EAAqB;AFm1BpvP;;AEn1BowP;EAAe;AFu1BnxP;;AEv1BsyP;EAAa;AF21BnzP;;AE31Bi2P;EAAU;AF+1B32P;;AE/1B83P;EAAkB;AFm2Bh5P;;AEn2B26P;EAAU;AFu2Br7P;;AEv2B28P;EAAW;AF22Bt9P;;AE32Bq+P;EAAa;AF+2Bl/P;;AE/2BmgQ;EAAgB;AFm3BnhQ;;AEn3BwiQ;EAAiB;AFu3BzjQ;;AEv3BqlQ;EAAgB;AF23BrmQ;;AE33BgoQ;EAAa;AF+3B7oQ;;AE/3BoqQ;EAAW;AFm4B/qQ;;AEn4BosQ;EAAc;AFu4BltQ;;AEv4BquQ;EAAe;AF24BpvQ;;AE34B+wQ;EAAa;AF+4B5xQ;;AE/4BqzQ;EAAgB;AFm5Br0Q;;AEn5B41Q;EAAiB;AFu5B72Q;;AEv5B24Q;EAAmB;AF25B95Q;;AE35Bs8Q;EAAgB;AF+5Bt9Q;;AE/5Bm/Q;EAAQ;AFm6B3/Q;;AEn6BogR;EAAO;AFu6B3gR;;AEv6BohR;EAAO;AF26B3hR;;AE36BsiR;EAAO;AF+6B7iR;;AE/6BujR;EAAyC;EAAuB;EAAqD;AFq7B5qR;;AEr7BouR;EAAwC;EAAwB;EAAyD;AF27B71R;;AE37By5R;EAA+C;EAAsB;AFg8B99R;;AEh8BqhS;EAAiB;AFo8BtiS;;AEp8BsjS;EAAiB;AFw8BvkS;;AEx8BulS;EAAmB;AF48B1mS;;AE58B4nS;EAAmB;AFg9B/oS;;AEh9BiqS;EAAmB;AFo9BprS;;AEp9BssS;EAAU;EAAgB;EAAuB;AF09BvvS;;AE19B0wS;EAAmB;AF89B7xS;;AE99BgzS;EAAmB;AFk+Bn0S;;AEl+Bs1S;EAAqB;AFs+B32S;;AEt+Bg4S;EAAqB;AF0+Br5S;;AE1+B06S;EAAY;AF8+Bt7S;;AE9+B48S;EAAS;AFk/Br9S;;AEl/B0+S;EAAY;AFs/Bt/S;;AEt/B0gT;EAAc;AF0/BxhT;;AE1/B6iT;EAAc;AF8/B3jT;;AE9/B2kT;EAAa;AFkgCxlT;;AElgC2mT;EAAY;AFsgCvnT;;AEtgC4oT;EAAa;AF0gCzpT;;AE1gC8qT;EAAY;AF8gC1rT;;AE9gCgtT;EAAgB;EAA6B;AFmhC7vT;;AEnhCuxT;EAAc;EAAkC;AFwhCv0T;;AExhC02T;EAAU;AF4hCp3T;;AE5hCq4T;EAAQ;AFgiC74T;;AEhiC85T;EAAU;AFoiCx6T;;AEpiCu7T;EAAY;AFwiCn8T;;AExiC29T;EAAY;AF4iCv+T;;AE5iC4/T;EAAU;AFgjCtgU;;AEhjC8hU;EAAU;AFojCxiU;;AEpjC6jU;EAAY;AFwjCzkU;;AExjCgmU;EAAY;AF4jC5mU;;AE5jCkoU;EAAc;AFgkChpU;;AEhkCmqU;EAAa;AFokChrU;;AEpkCksU;EAAiB;EAAsB;AFykCzuU;;AEzkCgyU;EAAmB;EAAsB;AF8kCz0U;;AE9kC83U;EAA6B;EAAsB;AFmlCj7U;;AEnlCu+U;EAAiB;EAAsB;AFwlC9gV;;AExlCqkV;EAAiB;EAAsB;AF6lC5mV;;AE7lCmqV;EAAgB;EAAsB;AFkmCzsV;;AElmC8vV;EAAoB;AFsmClxV;;AEtmC2yV;EAA4B;EAAsB;AF2mC71V;;AE3mCi5V;EAAU;EAAkB;AFgnC76V;;AEhnCo+V;EAAc;EAAkB;AFqnCpgW;;AErnCyjW;EAAc;EAAkB;AF0nCzlW;;AE1nC8oW;EAAY;EAAkB;AF+nC5qW;;AE/nCmuW;EAAa;EAAkB;AFooClwW;;AEpoCyzW;EAAa;EAAkB;AFyoCx1W;;AEzoC+4W;EAAgB;AF6oC/5W;;AE7oC47W;EAAc;EAAkB;AFkpC59W;;AElpCghX;EAAa;EAAkB;AFupC/iX;;AEvpCmmX;EAAa;EAAkB;AF4pCloX;;AE5pCyrX;EAAmB;AFgqC5sX;;AEhqCoxX;EAAkB;AFoqCtyX;;AEpqC02X;EAAmB;AFwqC73X;;AExqCw8X;EAA6B;EAA2B;EAAoC;AF8qCpiY;;AE9qCsmY;EAAc;EAA2B;EAAqC;AForCprY;;AEprCsvY;EAA2B;EAA2B;EAAoC;AF0rCh1Y;;AE1rCk5Y;EAAW;EAAmC;AF+rCh8Y;;AE/rCugZ;EAAc;EAAqC;AFosC1jZ;;AEpsCooZ;EAAwB;AFwsC5pZ;;AExsCqrZ;EAAY;AF4sCjsZ;;AE5sCytZ;EAAc;AFgtCvuZ;;AEhtCyvZ;EAAgB;EAAsB;AFqtC/xZ;;AErtCkzZ;EAAc;EAAoB;AF0tCp1Z;;AE1tCq2Z;EAAe;EAA0B;AF+tC94Z;;AE/tCq6Z;EAAK;AFmuC16Z;;AEnuCw7Z;EAAK;AFuuC77Z;;AEvuCu8Z;EAAK;AF2uC58Z;;AE3uC29Z;EAAK;AF+uCh+Z;;AE/uC++Z;EAAK;AFmvCp/Z;;AEnvCiga;EAAK;AFuvCtga;;AEvvCqha;EAAQ;AF2vC7ha;;AE3vC6ia;EAAM;EAAoB;AFgwCvka;;AEhwC4la;EAAO;EAAoB;AFqwCvna;;AErwCwoa;EAAM;EAAqB;AF0wCnqa;;AE1wCyra;EAAM;EAAsB;AF+wCrta;;AE/wCwua;EAAQ;EAAgC;AFoxChxa;;AEpxC6ya;EAAQ;EAAyB;AFyxC90a;;AEzxCw2a;EAAM;EAAqB;AF8xCn4a;;AE9xCq5a;EAAM;EAAoB;AFmyC/6a;;AEnyCo8a;EAAM;EAAoB;AFwyC99a;;AExyCm/a;EAAQ;EAA8B;AF6yCzhb;;AE7yCojb;EAAM;EAAmB;AFkzC7kb;;AElzCimb;EAAM;EAAkB;AFuzCznb;;AEvzC4ob;EAAM;EAAqB;AF4zCvqb;;AE5zC6rb;EAAM;EAAoB;AFi0Cvtb;;AEj0Cwub;EAAM;EAAe;AFs0C7vb;;AEt0C6wb;EAAM;EAAsB;AF20Czyb;;AE30C4zb;EAAQ;EAA8B;AFg1Cl2b;;AEh1Ci4b;EAAM;EAAiB;AFq1Cx5b;;AEr1Cs6b;EAAM;AFy1C56b;;AEz1Cg8b;EAAM;AF61Ct8b;;AE71Cy9b;EAAM;AFi2C/9b;;AEj2Ck/b;EAAM;AFq2Cx/b;;AEr2C0gc;EAAM;AFy2Chhc;;AEz2Cqic;EAAM;AF62C3ic;;AE72Ckkc;EAAM;AFi3Cxkc;;AEj3C2lc;EAAM;AFq3Cjmc;;AEr3Cqnc;EAAM;AFy3C3nc;;AEz3C0oc;EAAM;AF63Chpc;;AE73Coqc;EAAW;AFi4C/qc;;AEj4C+rc;EAAa;AFq4C5sc;;AEr4C8tc;EAAe;AFy4C7uc;;AEz4Cywc;EAAY;AF64Crxc;;AE74Csyc;EAAc;AFi5Cpzc;;AEj5C+0c;EAAc;AFq5C71c;;AEr5Cm3c;EAAY;AFy5C/3c;;AEz5Cg8c;EAAS;EAAkB;AF85C39c;;AE95C++c;EAAU;EAAe;AFm6Cxgd;;AEn6Cshd;EAAS;AFu6C/hd;;AEv6Cijd;EAAkB;AF26Cnkd;;AE36Culd;EAAS;AF+6Chmd;;AE/6Cmnd;EAAW;EAAe;AFo7C7od;;AEp7Cgqd;EAAU;EAAmB;AFy7C7rd;;AEz7Citd;EAAS;EAAiB;AF87C3ud;;AE97C4vd;EAAa;AFk8Czwd;;AEl8Cyxd;EAAW;AFs8Cpyd;;AEt8Cozd;EAAe;AF08Cn0d;;AE18Cm1d;EAAa;AF88Ch2d;;AE98Cg3d;EAAY;AFk9C53d;;AEl9C44d;EAAW;AFs9Cv5d;;AEt9Cg7d;EAAY;AF09C57d;;AE19Cs9d;EAAQ;AF89C99d;;AE99Cg/d;EAAc;AFk+C9/d;;AEl+Cghe;EAAe;AFs+C/he;;AEt+Cgje;EAAgB;AF0+Chke;;AE1+Cule;EAAe;AF8+Ctme;;AE9+C4ne;EAAiB;EAA8B;AFm/C3qe;;AEn/Cgue;EAAe;EAAoB;AFw/Cnwe;;AEx/C8ye;EAAY;EAAoB;AF6/C90e;;AE7/C43e;EAAgB;EAA8B;AFkgD16e;;AElgDk+e;EAAiB;EAAoB;AFugDvgf;;AEvgDmjf;EAAY;EAAoB;AF4gDnlf;;AE5gD2nf;EAAc;EAAoB;AFihD7pf;;AEjhDysf;EAAiB;EAAoB;AFshD9uf;;AEthD0xf;EAAe;EAAoB;AF2hD7zf;;AE3hD22f;EAAe;EAAoB;AFgiD94f;;AEhiD07f;EAAgB;EAAoB;AFqiD99f;;AEriD0ggB;EAAc;EAAoB;AF0iD5igB;;AE1iDwlgB;EAAe;EAAoB;AF+iD3ngB;;AE/iDyqgB;EAAgB;EAAoB;AFojD7sgB;;AEpjDyvgB;EAAc;EAAoB;AFyjD3xgB;;AEzjDy0gB;EAAe;EAAoB;AF8jD52gB;;AE9jDu5gB;EAAe;EAAoB;AFmkD17gB;;AEnkDq+gB;EAA0B;EAAoB;AFwkDnhhB;;AExkD8jhB;EAAiB;EAAoB;AF6kDnmhB;;AE7kDgphB;EAAiB;EAAoB;AFklDrrhB;;AEllDiuhB;EAAc;EAAoB;AFulDnwhB;;AEvlD+yhB;EAAgB;EAAoB;AF4lDn1hB;;AE5lD+3hB;EAA2B;EAAoB;AFimD96hB;;AEjmD29hB;EAAe;EAAoB;AFsmD9/hB;;AEtmD0iiB;EAAe;EAAoB;AF2mD7kiB;;AE3mD0niB;EAAiB;EAAoB;AFgnD/piB;;AEhnD4siB;EAAW;AFonDvtiB;;AEpnDsviB;EAAc;AFwnDpwiB;;AExnD8xiB;EAAW;AF4nDzyiB;;AE5nDmziB;EAAW;EAAwE;AFioDt4iB;;AEjoDs+iB;EAAsB;AFqoD5/iB;;AEroD+ljB;EAAW;EAA0E;AF0oDprjB;;AE1oDsxjB;EAAQ;EAAqE;AF+oDn2jB;;AE/oDg8jB;EAAmB;AFmpDn9jB;;AEnpDsjkB;EAAW;EAAwC;AFwpDzmkB;;AExpDgqkB;EAAW;EAA2E;AF6pDtvkB;;AE7pDy1kB;EAAyB;AFiqDl3kB;;AEjqDq9kB;EAAc;EAA8C;AFsqDjhlB;;AEtqD8klB;EAAa;EAAsB;EAA8B;AF4qD/olB;;AE5qDkvlB;EAAc;EAA8B;AFirD9xlB;;AEjrDizlB;EAAQ;EAA2G;AFsrDp6lB;;AEtrDugmB;EAAc;AF0rDrhmB;;AE1rD8mmB;EAAM;EAA2G;AF+rD/tmB;;AE/rDw0mB;EAA2B;EAAoB;AFosDv3mB;;AEpsD86mB;EAAM;AFwsDp7mB;;AExsDw8mB;EAAc;AF4sDt9mB;;AE5sDuonB;EAAY;EAAyB;EAAsJ;EAA8I;EAAsK;AFotDtnoB;;AEptDyqoB;EAAoB;EAA4B;AFytDztoB;;AEztD4woB;EAAkC;AF6tD9yoB;;AE7tDu0oB;EAAc;AFiuDr1oB;;AEjuD62oB;EAAa;AFquD13oB;;AEruD66oB;EAAK;EAA2B;EAAqC;EAAkE;EAAqC;EAA0E;EAAyB;EAAoE;AFgvDhwpB;;AEhvDkxpB;EAA6C;EAAe;AFqvD90pB;;AErvDw1pB;EAAmD;EAAqD;AF0vDh8pB;;AE1vD+8pB;EAAmD;EAAyB;AF+vD3hqB;;AE/vD0iqB;EAAW;AFmwDrjqB;;AEnwD0kqB;EAAgC;EAAwB;EAAyB;AFywD3pqB;;AEzwDkrqB;EAA2C;AF6wD7tqB;;AE7wDkvqB;EAAyD;EAAsB;EAAoB;AFmxDr1qB;;AEnxD02qB;EAAkB;EAAY;AFwxDx4qB;;AExxDw5qB;EAA6G;EAAkB;EAAuD;EAAmB;EAAqB;AFgyDtnrB;;AEhyDqorB;EAAqH;AFoyD1vrB;;AEpyD8wrB;EAAyB;IAAgC;EFyyDr0rB;EEzyDi2rB;IAAwF;IAAwB;EF6yDj9rB;EE7yD6+rB;IAAkB;IAAa;EFizD5gsB;AACF;AElzDiisB;EAA0B;IAAgC;IAA4B;EFuzDrnsB;AACF;AExzDqpsB;EAAe;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AFg0Dv4sB;;AEh0Du+sB;EAA6B;EAAkB;EAA2E;AFs0DjmtB;;AEt0DostB;EAAc;EAA2B;EAAmC;EAAkE;EAAyB;EAAwE;AF+0Dn7tB;;AE/0DmhuB;EAAe;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AFw1DrwuB;;AEx1Dq2uB;EAA+B;EAAkB;EAA2E;AF81Dj+uB;;AE91DokvB;EAAgB;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AFu2DvzvB;;AEv2Du5vB;EAAiB;EAA2B;EAAoC;EAAkE;EAAyB;EAAwE;AFg3D1owB;;AEh3D0uwB;EAAmC;EAAkB;EAA2E;AFs3D12wB;;AEt3D68wB;EAAkB;EAA2B;EAAoC;EAAkE;EAAyB;EAAwE;AF+3DjsxB;;AE/3DiyxB;EAA2J;EAAiB;EAAkB;EAAoB;EAAqB;AFu4DxgyB;;AEv4DmhyB;EAAoB;EAAa;EAAe;EAAoB;EAAqB;EAAmB;AFg5D/nyB;;AEh5DgpyB;EAAsB;EAAsB;EAAc;EAAkB;EAAe;EAAoB;EAAqB;AF05DpxyB;;AE15D+xyB;EAAyB;IAAmC;EF+5Dz1yB;EE/5Dy2yB;IAAuB;EFk6Dh4yB;EEl6D44yB;IAA4B;IAAc;EFs6Dt7yB;EEt6Di8yB;IAAyB;IAAc;EF06Dx+yB;EE16Dw/yB;IAAyB;IAAc;EF86D/hzB;EE96DgjzB;IAAyB;IAAc;EFk7DvlzB;EEl7DimzB;IAAyB;IAAc;EFs7DxozB;EEt7DypzB;IAAyB;IAAc;EF07DhszB;EE17DitzB;IAAyB;IAAc;EF87DxvzB;EE97DkwzB;IAAyB;IAAc;EFk8DzyzB;EEl8D0zzB;IAAyB;IAAc;EFs8Dj2zB;EEt8Dk3zB;IAAyB;IAAc;EF08Dz5zB;EE18Dm6zB;IAA0B;IAAc;EF88D38zB;EE98D49zB;IAA0B;IAAc;EFk9Dpg0B;EEl9Dqh0B;IAA0B;IAAc;EFs9D7j0B;AACF;AEv9D2k0B;EAAyB;IAAsD;EF29Dxp0B;EE39Dwq0B;IAAuB;EF89D/r0B;EE99D2s0B;IAA4B;IAAc;EFk+Drv0B;EEl+Dgw0B;IAAyB;IAAc;EFs+Dvy0B;EEt+Duz0B;IAAyB;IAAc;EF0+D910B;EE1+D+20B;IAAyB;IAAc;EF8+Dt50B;EE9+Dg60B;IAAyB;IAAc;EFk/Dv80B;EEl/Dw90B;IAAyB;IAAc;EFs/D//0B;EEt/Dgh1B;IAAyB;IAAc;EF0/Dvj1B;EE1/Dik1B;IAAyB;IAAc;EF8/Dxm1B;EE9/Dyn1B;IAAyB;IAAc;EFkgEhq1B;EElgEir1B;IAAyB;IAAc;EFsgExt1B;EEtgEku1B;IAA0B;IAAc;EF0gE1w1B;EE1gE2x1B;IAA0B;IAAc;EF8gEn01B;EE9gEo11B;IAA0B;IAAc;EFkhE531B;AACF;AEnhE041B;EAA0B;IAAyE;EFuhE3+1B;EEvhE4/1B;IAAuB;EF0hEnh2B;EE1hE+h2B;IAA4B;IAAc;EF8hEzk2B;EE9hEol2B;IAAyB;IAAc;EFkiE3n2B;EEliE2o2B;IAAyB;IAAc;EFsiElr2B;EEtiEms2B;IAAyB;IAAc;EF0iE1u2B;EE1iEov2B;IAAyB;IAAc;EF8iE3x2B;EE9iE4y2B;IAAyB;IAAc;EFkjEn12B;EEljEo22B;IAAyB;IAAc;EFsjE342B;EEtjEq52B;IAAyB;IAAc;EF0jE572B;EE1jE682B;IAAyB;IAAc;EF8jEp/2B;EE9jEqg3B;IAAyB;IAAc;EFkkE5i3B;EElkEsj3B;IAA0B;IAAc;EFskE9l3B;EEtkE+m3B;IAA0B;IAAc;EF0kEvp3B;EE1kEwq3B;IAA0B;IAAc;EF8kEht3B;AACF;AE/kE8t3B;EAA0B;IAA4F;EFmlEl13B;EEnlEm23B;IAAuB;EFslE133B;EEtlEs43B;IAA4B;IAAc;EF0lEh73B;EE1lE273B;IAAyB;IAAc;EF8lEl+3B;EE9lEk/3B;IAAyB;IAAc;EFkmEzh4B;EElmE0i4B;IAAyB;IAAc;EFsmEjl4B;EEtmE2l4B;IAAyB;IAAc;EF0mElo4B;EE1mEmp4B;IAAyB;IAAc;EF8mE1r4B;EE9mE2s4B;IAAyB;IAAc;EFknElv4B;EElnE4v4B;IAAyB;IAAc;EFsnEny4B;EEtnEoz4B;IAAyB;IAAc;EF0nE314B;EE1nE424B;IAAyB;IAAc;EF8nEn54B;EE9nE654B;IAA0B;IAAc;EFkoEr84B;EEloEs94B;IAA0B;IAAc;EFsoE9/4B;EEtoE+g5B;IAA0B;IAAc;EF0oEvj5B;AACF;AE3oEqk5B;EAA0B;IAAgH;EF+oE7s5B;EE/oE8t5B;IAAwB;EFkpEtv5B;EElpEkw5B;IAA6B;IAAc;EFspE7y5B;EEtpEwz5B;IAA0B;IAAc;EF0pEh25B;EE1pEg35B;IAA0B;IAAc;EF8pEx55B;EE9pEy65B;IAA0B;IAAc;EFkqEj95B;EElqE295B;IAA0B;IAAc;EFsqEng6B;EEtqEoh6B;IAA0B;IAAc;EF0qE5j6B;EE1qE6k6B;IAA0B;IAAc;EF8qErn6B;EE9qE+n6B;IAA0B;IAAc;EFkrEvq6B;EElrEwr6B;IAA0B;IAAc;EFsrEhu6B;EEtrEiv6B;IAA0B;IAAc;EF0rEzx6B;EE1rEmy6B;IAA2B;IAAc;EF8rE506B;EE9rE616B;IAA2B;IAAc;EFksEt46B;EElsEu56B;IAA2B;IAAc;EFssEh86B;AACF;AEvsE886B;EAA0B;IAAqI;EF2sE3m7B;EE3sE4n7B;IAAyB;EF8sErp7B;EE9sEiq7B;IAA8B;IAAc;EFktE7s7B;EEltEwt7B;IAA2B;IAAc;EFstEjw7B;EEttEix7B;IAA2B;IAAc;EF0tE1z7B;EE1tE207B;IAA2B;IAAc;EF8tEp37B;EE9tE837B;IAA2B;IAAc;EFkuEv67B;EEluEw77B;IAA2B;IAAc;EFsuEj+7B;EEtuEk/7B;IAA2B;IAAc;EF0uE3h8B;EE1uEqi8B;IAA2B;IAAc;EF8uE9k8B;EE9uE+l8B;IAA2B;IAAc;EFkvExo8B;EElvEyp8B;IAA2B;IAAc;EFsvEls8B;EEtvE4s8B;IAA4B;IAAc;EF0vEtv8B;EE1vEuw8B;IAA4B;IAAc;EF8vEjz8B;EE9vEk08B;IAA4B;IAAc;EFkwE528B;AACF;AEnwE038B;EAAsB;EAAyC;AFuwEz78B;;AEvwEw+8B;EAA2B;EAA4C;AF4wE/i9B;;AE5wE2l9B;EAA8B;EAA+C;AFixExq9B;;AEjxEit9B;EAA2B;EAA4C;AFsxExx9B;;AEtxEi09B;EAA8B;EAA+C;AF2xE949B;;AE3xEu79B;EAA6B;EAA8C;AFgyElg+B;;AEhyE2i+B;EAA8B;EAA+C;AFqyExn+B;;AEryEiq+B;EAAiC;EAAsB;EAAgB;AF2yExu+B;;AE3yE6v+B;EAA8D;EAAuB;AFgzEl1+B;;AEhzEm3+B;EAA8B;AFozEj5+B;;AEpzEw6+B;EAAgB;EAAwE;EAAgG;EAAqB;EAAmB;EAAqB;EAAqB;AF8zElr/B;;AE9zEys/B;EAAsC;AFk0E/u/B;;AEl0Ek1/B;EAAsB;EAA0E;AFu0El7/B;;AEv0EohgC;EAAyB;EAAkB;EAAkB;EAAoB;EAAuD;AF+0E5pgC;;AE/0E0sgC;EAAuB;EAA2B;EAAoC;EAAkE;EAAyB;EAAkB;EAAoB;EAAwE;EAAgG;EAA2E;EAAmG;AF61EvvhC;;AE71EqyhC;EAAiC;EAA6B;AFk2En2hC;;AEl2Ei4hC;EAA+B;EAAgC;AFu2Eh8hC;;AEv2Ei+hC;EAA0B;EAAkB;AF42E7giC;;AE52EokiC;EAA8B;EAA8B;AFi3EhoiC;;AEj3EqriC;EAA2B;AFq3EhtiC;;AEr3E0uiC;EAAwB;EAA0E;EAAkG;AF23E96iC;;AE33EihjC;EAAgC;EAAsB;AFg4EvkjC;;AEh4E8njC;EAAwB;EAA0E;EAAkG;AFs4El0jC;;AEt4Eq6jC;EAA2B;EAA8B;AF24E99jC;;AE34Ei/jC;EAAqB;EAA2G;AFg5EjnkC;;AEh5EotkC;EAAwC;AFo5E5vkC;;AEp5Eq1kC;EAAmB;EAA2G;AFy5En9kC;;AEz5E4jlC;EAAqB;EAA2G;EAAyG;AF+5ErylC;;AE/5E83lC;EAA8B;EAAoB;AFo6Eh7lC;;AEp6Ew+lC;EAA4B;EAAoB;AFy6ExhmC;;AEz6EglmC;EAA8B;AF66E9mmC;;AE76EoomC;EAA0B;EAA0E;EAAkG;AFm7E10mC;;AEn7E66mC;EAAuC;EAAkB;AFw7Et+mC;;AEx7E6hnC;EAA2D;EAAsB;AF67E9mnC;;AE77EkqnC;EAA6B;EAAsB;AFk8ErtnC;;AEl8EywnC;EAAyB;EAAkB;AFu8EpznC;;AEv8Ew2nC;EAAyB;EAAkB;AF48En5nC;;AE58Eu8nC;EAAyB;EAAkB;AFi9El/nC;;AEj9EsioC;EAAyB;EAAkB;AFs9EjloC;;AEt9EwooC;EAAwB;EAAoB;AF29EproC;;AE39EkuoC;EAA2B;EAAoB;AFg+EjxoC;;AEh+E+zoC;EAA2B;EAAoB;AFq+E92oC;;AEr+E05oC;EAAsC;EAAkB;AF0+El9oC;;AE1+EsgpC;EAAwC;EAAoB;AF++ElkpC;;AE/+EunpC;EAAmD;EAAkB;AFo/E5rpC;;AEp/EmvpC;EAAyB;IAAY;EFy/EtxpC;EEz/EmypC;IAAY;EF4/E/ypC;EE5/EyzpC;IAAiB;EF+/E10pC;EE//Ew3pC;IAAiB;EFkgFz4pC;AACF;AEngF07pC;EAAyB;IAAW;IAAiB;EFwgF7+pC;EExgF+/pC;IAAW;IAAmB;EF4gF7hqC;EE5gF6iqC;IAAW;EF+gFxjqC;EE/gFskqC;IAAY;EFkhFllqC;EElhF+lqC;IAAU;EFqhFzmqC;EErhFsnqC;IAAiB;EFwhFvoqC;EExhFqrqC;IAAiB;EF2hFtsqC;EE3hFovqC;IAAc;EF8hFlwqC;EE9hFqxqC;IAAc;EFiiFnyqC;EEjiFyzqC;IAAW;IAAkB;EFqiFt1qC;EEriFy2qC;IAAiB;EFwiF13qC;EExiF44qC;IAAc;IAAkB;EF4iF56qC;EE5iF07qC;IAAc;IAAiB;EFgjFz9qC;AACF;AEjjF6+qC;EAA0B;IAAU;EFqjF/grC;EErjF4hrC;IAAU;EFwjFtirC;EExjFsjrC;IAAiB;EF2jFvkrC;EE3jFqnrC;IAAiB;EF8jFtorC;EE9jForrC;IAAc;EFikFlsrC;EEjkFqtrC;IAAe;EFokFpurC;AACF;AErkFuvrC;EAA0B;IAAU;EFykFzxrC;EEzkFqyrC;IAAW;IAAkB;EF6kFl0rC;EE7kFq1rC;IAAc;IAAiB;EFilFp3rC;EEjlFk4rC;IAAc;IAAmB;EFqlFn6rC;AACF;ADrkFA;AIjBA;AAAgE;EAAiB;EAAuB;AH4lFxG;;AG5lF8H;EAAe;AHgmF7I;;AGhmF6J;EAAK;EAA8B;EAA6B;EAAiM;EAAgB;EAAgB;EAAc;AH0mF5c;;AG1mFud;EAAK;EAAoB;AH+mFhf;;AG/mFyf;EAAG;EAAqB;EAAc;AHqnF/hB;;AGrnFwiB;EAAoB;EAAyC;AH0nFrmB;;AG1nFsoB;EAAkB;EAAkB;AH+nF1qB;;AG/nF8rB;EAAE;EAAc;AHooF9sB;;AGpoFsuB;EAAS;AHwoF/uB;;AGxoFkwB;EAAkB;EAAoG;AH6oFx3B;;AG7oFs4B;EAAM;AHipF54B;;AGjpF05B;EAAQ;EAAc;EAAc;EAAkB;AHwpFh9B;;AGxpFw+B;EAAI;AH4pF5+B;;AG5pF0/B;EAAI;AHgqF9/B;;AGhqFwgC;EAAM;EAAyB;EAAqB;AHsqF5jC;;AGtqF0kC;EAAsC;EAAc;EAAoB;EAAe;EAAoB;EAAoB;EAAS;AHgrFltC;;AGhrF4tC;EAAc;AHorF1uC;;AGprF8vC;EAAgD;EAA0B;EAA6B;AH0rFr2C;;AG1rF23C;EAAgB;AH8rF34C;;AG9rFw5C;EAAiB;AHksFz6C;;AGlsFy7C;EAAS;AHssFl8C;;AGtsF09C;EAAwD;AH0sFlhD;;AG1sF8hD;EAAc;EAA6B;AH+sFzkD;;AG/sF6lD;EAA4B;AHmtFznD;;AGntFipD;EAA6B;EAA0B;AHwtFxsD;;AGxtFqtD;EAAQ;AH4tF7tD;;AG5tF+uD;EAAmD;AHguFlyD;;AGhuF2yD;EAAS;AHouFpzD;;AGpuF6zD;EAAgB;AHwuF70D;;AGxuFu1D;EAAW;EAAgB;EAAS;AH8uF33D;;AG9uFq4D;EAAS;AHkvF94D;;AGlvF85D;EAAmD;EAAc;AHuvF/9D;;AGvvFy+D;EAAyC;EAAc;AH4vFhiE;;AG5vF0iE;EAAqB;AHgwF/jE;;AGhwF8kE;EAAU;AHowFxlE;;AGpwFumE;EAA+C;EAAc;AHywFpqE;;AGzwF0rE;EAAU;EAAY;AH8wFhtE;;AG9wF+tE;EAAS;AHkxFxuE;;AGlxFqvE;EAAiB;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AHi0FjpG;;AGj0FuqG;EAAW;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AHg3F7jI;;AGh3FmlI;EAAW;AHo3F9lI;;AGp3FymI;EAAyB;IAAW;EHy3F3oI;AACF;AG13F8pI;EAAyB;IAAW;EH83FhsI;AACF;AG/3FmtI;EAA0B;IAAW;EHm4FtvI;AACF;AGp4F0wI;EAA0B;IAAW;EHw4F7yI;AACF;AGz4Fi0I;EAA0B;IAAW;EH64Fp2I;AACF;AG94Fw3I;EAA0B;IAAW;EHk5F35I;AACF;AGn5F+6I;EAAS;AHs5Fx7I;;AGt5F28I;EAAW;AH05Ft9I;;AG15Fw+I;EAAQ;AH85Fh/I;;AG95FggJ;EAAO;AHk6FvgJ;;AGl6FshJ;EAAU;AHs6FhiJ;;AGt6FkjJ;EAAU;AH06F5jJ;;AG16F8kJ;EAAS;EAAS;EAAO;EAAQ;AHi7F/mJ;;AGj7FqnJ;EAAQ;AHq7F7nJ;;AGr7FwoJ;EAAQ;AHy7FhpJ;;AGz7FupJ;EAAS;AH67FhqJ;;AG77FwqJ;EAAS;AHi8FjrJ;;AGj8F4rJ;EAAW;AHq8FvsJ;;AGr8FmtJ;EAAO;AHy8F1tJ;;AGz8FguJ;EAAO;AH68FvuJ;;AG78FgvJ;EAAS;AHi9FzvJ;;AGj9FmwJ;EAAQ;AHq9F3wJ;;AGr9FoxJ;EAAQ;AHy9F5xJ;;AGz9FqyJ;EAAU;AH69F/yJ;;AG79F4zJ;EAAS;AHi+Fr0J;;AGj+Fm1J;EAAU;AHq+F71J;;AGr+F42J;EAAgB;AHy+F53J;;AGz+Fu4J;EAAM;AH6+F74J;;AG7+Fw5J;EAAM;AHi/F95J;;AGj/Fy6J;EAAM;AHq/F/6J;;AGr/F07J;EAAK;AHy/F/7J;;AGz/Fy8J;EAAK;AH6/F98J;;AG7/F49J;EAAK;AHigGj+J;;AGjgG0+J;EAAO;EAAmB;AHsgGpgK;;AGtgGohK;EAAS;EAAiB;AH2gG9iK;;AG3gGgkK;EAAO;EAAiB;AHghGxlK;;AGhhG0mK;EAAM;EAAoB;AHqhGpoK;;AGrhGqpK;EAAM;EAAgB;AH0hG3qK;;AG1hGwrK;EAAM;EAAqB;AH+hGntK;;AG/hGquK;EAAM;EAAiB;AHoiG5vK;;AGpiG8wK;EAAM;EAAmB;AHyiGvyK;;AGziGuzK;EAAM;EAAkB;AH8iG/0K;;AG9iGk2K;EAAM;EAAmB;AHmjG33K;;AGnjG+4K;EAAQ;EAA6B;AHwjGp7K;;AGxjGk9K;EAAQ;EAA+B;AH6jGz/K;;AG7jGqhL;EAAO;AHikG5hL;;AGjkG+iL;EAAO;AHqkGtjL;;AGrkGskL;EAAO;AHykG7kL;;AGzkGgmL;EAAM;AH6kGtmL;;AG7kGynL;EAAM;AHilG/nL;;AGjlGipL;EAAM;AHqlGvpL;;AGrlG2qL;EAAM;AHylGjrL;;AGzlGmsL;EAAM;AH6lGzsL;;AG7lGytL;EAAM;AHimG/tL;;AGjmGkvL;EAAM;AHqmGxvL;;AGrmG0wL;EAAM;AHymGhxL;;AGzmGiyL;EAAM;AH6mGvyL;;AG7mG4zL;EAAM;AHinGl0L;;AGjnGs1L;EAAM;AHqnG51L;;AGrnG+2L;EAAM;AHynGr3L;;AGznGk4L;EAAM;AH6nGx4L;;AG7nG05L;EAAM;AHioGh6L;;AGjoGk7L;EAAM;AHqoGx7L;;AGroGs8L;EAAM;AHyoG58L;;AGzoG29L;EAAM;AH6oGj+L;;AG7oGo/L;EAAO;AHipG3/L;;AGjpG6gM;EAAO;AHqpGphM;;AGrpGuiM;EAAO;AHypG9iM;;AGzpGikM;EAAM;AH6pGvkM;;AG7pGwlM;EAAO;AHiqG/lM;;AGjqGinM;EAAO;AHqqGxnM;;AGrqGsoM;EAAS;AHyqG/oM;;AGzqGuqM;EAAc;AH6qGrrM;;AG7qG0sM;EAAM;AHirGhtM;;AGjrG6tM;EAAQ;AHqrGruM;;AGrrG4vM;EAAa;AHyrGzwM;;AGzrG6xM;EAAO;AH6rGpyM;;AG7rGkzM;EAAY;AHisG9zM;;AGjsGi1M;EAAoB;AHqsGr2M;;AGrsGg4M;EAAiB;AHysGj5M;;AGzsGy6M;EAAW;AH6sGp7M;;AG7sGs8M;EAAM;AHitG58M;;AGjtGy9M;EAAU;AHqtGn+M;;AGrtGo/M;EAAQ;AHytG5/M;;AGztGygN;EAAM;AH6tG/gN;;AG7tG4hN;EAAQ;AHiuGpiN;;AGjuGgjN;EAAK;AHquGrjN;;AGruGikN;EAAM;AHyuGvkN;;AGzuGmlN;EAAM;AH6uGzlN;;AG7uGqmN;EAAM;AHivG3mN;;AGjvGwnN;EAAM;AHqvG9nN;;AGrvG2oN;EAAK;AHyvGhpN;;AGzvG8pN;EAAM;AH6vGpqN;;AG7vGirN;EAAM;AHiwGvrN;;AGjwGosN;EAAM;AHqwG1sN;;AGrwGstN;EAAM;AHywG5tN;;AGzwG0uN;EAAM;AH6wGhvN;;AG7wG+vN;EAAK;AHixGpwN;;AGjxGixN;EAAM;AHqxGvxN;;AGrxGmyN;EAAO;EAAwB;AH0xGl0N;;AG1xGq1N;EAAa;AH8xGl2N;;AG9xG+2N;EAAU;AHkyGz3N;;AGlyG04N;EAAQ;AHsyGl5N;;AGtyG65N;EAAK;AH0yGl6N;;AG1yG66N;EAAM;AH8yGn7N;;AG9yG87N;EAAM;AHkzGp8N;;AGlzG+8N;EAAO;EAAuB;AHuzG7+N;;AGvzG+/N;EAAK;AH2zGpgO;;AG3zGihO;EAAK;AH+zGthO;;AG/zGmiO;EAAK;AHm0GxiO;;AGn0GojO;EAAQ;AHu0G5jO;;AGv0GukO;EAAM;AH20G7kO;;AG30GylO;EAAM;AH+0G/lO;;AG/0G2mO;EAAM;AHm1GjnO;;AGn1G4nO;EAAM;AHu1GloO;;AGv1G8oO;EAAM;AH21GppO;;AG31GgqO;EAAM;AH+1GtqO;;AG/1GkrO;EAAmB;EAAuB;AHo2G5tO;;AGp2G8uO;EAAa;AHw2G3vO;;AGx2GuwO;EAAQ;AH42G/wO;;AG52GoyO;EAAc;AHg3GlzO;;AGh3G20O;EAAQ;AHo3Gn1O;;AGp3G+1O;EAAa;AHw3G52O;;AGx3G03O;EAAW;AH43Gr4O;;AG53Gi5O;EAAW;AHg4G55O;;AGh4G86O;EAAsB;AHo4Gp8O;;AGp4GkoP;EAAQ;AHw4G1oP;;AGx4GspP;EAAW;AH44GjqP;;AG54GsrP;EAAiB;EAAwB;EAAqB;AHk5GpvP;;AGl5GowP;EAAe;AHs5GnxP;;AGt5GsyP;EAAa;AH05GnzP;;AG15Gi2P;EAAU;AH85G32P;;AG95G83P;EAAkB;AHk6Gh5P;;AGl6G26P;EAAU;AHs6Gr7P;;AGt6G28P;EAAW;AH06Gt9P;;AG16Gq+P;EAAa;AH86Gl/P;;AG96GmgQ;EAAgB;AHk7GnhQ;;AGl7GwiQ;EAAiB;AHs7GzjQ;;AGt7GqlQ;EAAgB;AH07GrmQ;;AG17GgoQ;EAAa;AH87G7oQ;;AG97GoqQ;EAAW;AHk8G/qQ;;AGl8GosQ;EAAc;AHs8GltQ;;AGt8GquQ;EAAe;AH08GpvQ;;AG18G+wQ;EAAa;AH88G5xQ;;AG98GqzQ;EAAgB;AHk9Gr0Q;;AGl9G41Q;EAAiB;AHs9G72Q;;AGt9G24Q;EAAmB;AH09G95Q;;AG19Gs8Q;EAAgB;AH89Gt9Q;;AG99Gm/Q;EAAQ;AHk+G3/Q;;AGl+GogR;EAAO;AHs+G3gR;;AGt+GohR;EAAO;AH0+G3hR;;AG1+GsiR;EAAO;AH8+G7iR;;AG9+GujR;EAAyC;EAAuB;EAAqD;AHo/G5qR;;AGp/GouR;EAAwC;EAAwB;EAAyD;AH0/G71R;;AG1/Gy5R;EAA+C;EAAsB;AH+/G99R;;AG//GqhS;EAAiB;AHmgHtiS;;AGngHsjS;EAAiB;AHugHvkS;;AGvgHulS;EAAmB;AH2gH1mS;;AG3gH4nS;EAAmB;AH+gH/oS;;AG/gHiqS;EAAmB;AHmhHprS;;AGnhHssS;EAAU;EAAgB;EAAuB;AHyhHvvS;;AGzhH0wS;EAAmB;AH6hH7xS;;AG7hHgzS;EAAmB;AHiiHn0S;;AGjiHs1S;EAAqB;AHqiH32S;;AGriHg4S;EAAqB;AHyiHr5S;;AGziH06S;EAAY;AH6iHt7S;;AG7iH48S;EAAS;AHijHr9S;;AGjjH0+S;EAAY;AHqjHt/S;;AGrjH0gT;EAAc;AHyjHxhT;;AGzjH6iT;EAAc;AH6jH3jT;;AG7jH2kT;EAAa;AHikHxlT;;AGjkH2mT;EAAY;AHqkHvnT;;AGrkH4oT;EAAa;AHykHzpT;;AGzkH8qT;EAAY;AH6kH1rT;;AG7kHgtT;EAAgB;EAA6B;AHklH7vT;;AGllHuxT;EAAc;EAAkC;AHulHv0T;;AGvlH02T;EAAU;AH2lHp3T;;AG3lHq4T;EAAQ;AH+lH74T;;AG/lH85T;EAAU;AHmmHx6T;;AGnmHu7T;EAAY;AHumHn8T;;AGvmH29T;EAAY;AH2mHv+T;;AG3mH4/T;EAAU;AH+mHtgU;;AG/mH8hU;EAAU;AHmnHxiU;;AGnnH6jU;EAAY;AHunHzkU;;AGvnHgmU;EAAY;AH2nH5mU;;AG3nHkoU;EAAc;AH+nHhpU;;AG/nHmqU;EAAa;AHmoHhrU;;AGnoHksU;EAAiB;EAAsB;AHwoHzuU;;AGxoHgyU;EAAmB;EAAsB;AH6oHz0U;;AG7oH83U;EAA6B;EAAsB;AHkpHj7U;;AGlpHu+U;EAAiB;EAAsB;AHupH9gV;;AGvpHqkV;EAAiB;EAAsB;AH4pH5mV;;AG5pHmqV;EAAgB;EAAsB;AHiqHzsV;;AGjqH8vV;EAAoB;AHqqHlxV;;AGrqH2yV;EAA4B;EAAsB;AH0qH71V;;AG1qHi5V;EAAU;EAAkB;AH+qH76V;;AG/qHo+V;EAAc;EAAkB;AHorHpgW;;AGprHyjW;EAAc;EAAkB;AHyrHzlW;;AGzrH8oW;EAAY;EAAkB;AH8rH5qW;;AG9rHmuW;EAAa;EAAkB;AHmsHlwW;;AGnsHyzW;EAAa;EAAkB;AHwsHx1W;;AGxsH+4W;EAAgB;AH4sH/5W;;AG5sH47W;EAAc;EAAkB;AHitH59W;;AGjtHghX;EAAa;EAAkB;AHstH/iX;;AGttHmmX;EAAa;EAAkB;AH2tHloX;;AG3tHyrX;EAAmB;AH+tH5sX;;AG/tHoxX;EAAkB;AHmuHtyX;;AGnuH02X;EAAmB;AHuuH73X;;AGvuHw8X;EAA6B;EAA2B;EAAoC;AH6uHpiY;;AG7uHsmY;EAAc;EAA2B;EAAqC;AHmvHprY;;AGnvHsvY;EAA2B;EAA2B;EAAoC;AHyvHh1Y;;AGzvHk5Y;EAAW;EAAmC;AH8vHh8Y;;AG9vHugZ;EAAc;EAAqC;AHmwH1jZ;;AGnwHooZ;EAAwB;AHuwH5pZ;;AGvwHqrZ;EAAY;AH2wHjsZ;;AG3wHytZ;EAAc;AH+wHvuZ;;AG/wHyvZ;EAAgB;EAAsB;AHoxH/xZ;;AGpxHkzZ;EAAc;EAAoB;AHyxHp1Z;;AGzxHq2Z;EAAe;EAA0B;AH8xH94Z;;AG9xHq6Z;EAAK;AHkyH16Z;;AGlyHw7Z;EAAK;AHsyH77Z;;AGtyHu8Z;EAAK;AH0yH58Z;;AG1yH29Z;EAAK;AH8yHh+Z;;AG9yH++Z;EAAK;AHkzHp/Z;;AGlzHiga;EAAK;AHszHtga;;AGtzHqha;EAAQ;AH0zH7ha;;AG1zH6ia;EAAM;EAAoB;AH+zHvka;;AG/zH4la;EAAO;EAAoB;AHo0Hvna;;AGp0Hwoa;EAAM;EAAqB;AHy0Hnqa;;AGz0Hyra;EAAM;EAAsB;AH80Hrta;;AG90Hwua;EAAQ;EAAgC;AHm1Hhxa;;AGn1H6ya;EAAQ;EAAyB;AHw1H90a;;AGx1Hw2a;EAAM;EAAqB;AH61Hn4a;;AG71Hq5a;EAAM;EAAoB;AHk2H/6a;;AGl2Ho8a;EAAM;EAAoB;AHu2H99a;;AGv2Hm/a;EAAQ;EAA8B;AH42Hzhb;;AG52Hojb;EAAM;EAAmB;AHi3H7kb;;AGj3Himb;EAAM;EAAkB;AHs3Hznb;;AGt3H4ob;EAAM;EAAqB;AH23Hvqb;;AG33H6rb;EAAM;EAAoB;AHg4Hvtb;;AGh4Hwub;EAAM;EAAe;AHq4H7vb;;AGr4H6wb;EAAM;EAAsB;AH04Hzyb;;AG14H4zb;EAAQ;EAA8B;AH+4Hl2b;;AG/4Hi4b;EAAM;EAAiB;AHo5Hx5b;;AGp5Hs6b;EAAM;AHw5H56b;;AGx5Hg8b;EAAM;AH45Ht8b;;AG55Hy9b;EAAM;AHg6H/9b;;AGh6Hk/b;EAAM;AHo6Hx/b;;AGp6H0gc;EAAM;AHw6Hhhc;;AGx6Hqic;EAAM;AH46H3ic;;AG56Hkkc;EAAM;AHg7Hxkc;;AGh7H2lc;EAAM;AHo7Hjmc;;AGp7Hqnc;EAAM;AHw7H3nc;;AGx7H0oc;EAAM;AH47Hhpc;;AG57Hoqc;EAAW;AHg8H/qc;;AGh8H+rc;EAAa;AHo8H5sc;;AGp8H8tc;EAAe;AHw8H7uc;;AGx8Hywc;EAAY;AH48Hrxc;;AG58Hsyc;EAAc;AHg9Hpzc;;AGh9H+0c;EAAc;AHo9H71c;;AGp9Hm3c;EAAY;AHw9H/3c;;AGx9Hg8c;EAAS;EAAkB;AH69H39c;;AG79H++c;EAAU;EAAe;AHk+Hxgd;;AGl+Hshd;EAAS;AHs+H/hd;;AGt+Hijd;EAAkB;AH0+Hnkd;;AG1+Huld;EAAS;AH8+Hhmd;;AG9+Hmnd;EAAW;EAAe;AHm/H7od;;AGn/Hgqd;EAAU;EAAmB;AHw/H7rd;;AGx/Hitd;EAAS;EAAiB;AH6/H3ud;;AG7/H4vd;EAAa;AHigIzwd;;AGjgIyxd;EAAW;AHqgIpyd;;AGrgIozd;EAAe;AHygIn0d;;AGzgIm1d;EAAa;AH6gIh2d;;AG7gIg3d;EAAY;AHihI53d;;AGjhI44d;EAAW;AHqhIv5d;;AGrhIg7d;EAAY;AHyhI57d;;AGzhIs9d;EAAQ;AH6hI99d;;AG7hIg/d;EAAc;AHiiI9/d;;AGjiIghe;EAAe;AHqiI/he;;AGriIgje;EAAgB;AHyiIhke;;AGziIule;EAAe;AH6iItme;;AG7iI4ne;EAAiB;EAA8B;AHkjI3qe;;AGljIgue;EAAe;EAAoB;AHujInwe;;AGvjI8ye;EAAY;EAAoB;AH4jI90e;;AG5jI43e;EAAgB;EAA8B;AHikI16e;;AGjkIk+e;EAAiB;EAAoB;AHskIvgf;;AGtkImjf;EAAY;EAAoB;AH2kInlf;;AG3kI2nf;EAAc;EAAoB;AHglI7pf;;AGhlIysf;EAAiB;EAAoB;AHqlI9uf;;AGrlI0xf;EAAe;EAAoB;AH0lI7zf;;AG1lI22f;EAAe;EAAoB;AH+lI94f;;AG/lI07f;EAAgB;EAAoB;AHomI99f;;AGpmI0ggB;EAAc;EAAoB;AHymI5igB;;AGzmIwlgB;EAAe;EAAoB;AH8mI3ngB;;AG9mIyqgB;EAAgB;EAAoB;AHmnI7sgB;;AGnnIyvgB;EAAc;EAAoB;AHwnI3xgB;;AGxnIy0gB;EAAe;EAAoB;AH6nI52gB;;AG7nIu5gB;EAAe;EAAoB;AHkoI17gB;;AGloIq+gB;EAA0B;EAAoB;AHuoInhhB;;AGvoI8jhB;EAAiB;EAAoB;AH4oInmhB;;AG5oIgphB;EAAiB;EAAoB;AHipIrrhB;;AGjpIiuhB;EAAc;EAAoB;AHspInwhB;;AGtpI+yhB;EAAgB;EAAoB;AH2pIn1hB;;AG3pI+3hB;EAA2B;EAAoB;AHgqI96hB;;AGhqI29hB;EAAe;EAAoB;AHqqI9/hB;;AGrqI0iiB;EAAe;EAAoB;AH0qI7kiB;;AG1qI0niB;EAAiB;EAAoB;AH+qI/piB;;AG/qI4siB;EAAW;AHmrIvtiB;;AGnrIsviB;EAAc;AHurIpwiB;;AGvrI8xiB;EAAW;AH2rIzyiB;;AG3rImziB;EAAW;EAAwE;AHgsIt4iB;;AGhsIs+iB;EAAsB;AHosI5/iB;;AGpsI+ljB;EAAW;EAA0E;AHysIprjB;;AGzsIsxjB;EAAQ;EAAqE;AH8sIn2jB;;AG9sIg8jB;EAAmB;AHktIn9jB;;AGltIsjkB;EAAW;EAAwC;AHutIzmkB;;AGvtIgqkB;EAAW;EAA2E;AH4tItvkB;;AG5tIy1kB;EAAyB;AHguIl3kB;;AGhuIq9kB;EAAc;EAA8C;AHquIjhlB;;AGruI8klB;EAAa;EAAsB;EAA8B;AH2uI/olB;;AG3uIkvlB;EAAc;EAA8B;AHgvI9xlB;;AGhvIizlB;EAAQ;EAA2G;AHqvIp6lB;;AGrvIugmB;EAAc;AHyvIrhmB;;AGzvI8mmB;EAAM;EAA2G;AH8vI/tmB;;AG9vIw0mB;EAA2B;EAAoB;AHmwIv3mB;;AGnwI86mB;EAAM;AHuwIp7mB;;AGvwIw8mB;EAAc;AH2wIt9mB;;AG3wIuonB;EAAY;EAAyB;EAAsJ;EAA8I;EAAsK;AHmxItnoB;;AGnxIyqoB;EAAoB;EAA4B;AHwxIztoB;;AGxxI4woB;EAAkC;AH4xI9yoB;;AG5xIu0oB;EAAc;AHgyIr1oB;;AGhyI62oB;EAAa;AHoyI13oB;;AGpyI66oB;EAAK;EAA2B;EAAqC;EAAkE;EAAqC;EAA0E;EAAyB;EAAoE;AH+yIhwpB;;AG/yIkxpB;EAA6C;EAAe;AHozI90pB;;AGpzIw1pB;EAAmD;EAAqD;AHyzIh8pB;;AGzzI+8pB;EAAmD;EAAyB;AH8zI3hqB;;AG9zI0iqB;EAAW;AHk0IrjqB;;AGl0I0kqB;EAAgC;EAAwB;EAAyB;AHw0I3pqB;;AGx0IkrqB;EAA2C;AH40I7tqB;;AG50IkvqB;EAAyD;EAAsB;EAAoB;AHk1Ir1qB;;AGl1I02qB;EAAkB;EAAY;AHu1Ix4qB;;AGv1Iw5qB;EAA6G;EAAkB;EAAuD;EAAmB;EAAqB;AH+1ItnrB;;AG/1IqorB;EAAqH;AHm2I1vrB;;AGn2I8wrB;EAAyB;IAAgC;EHw2Ir0rB;EGx2Ii2rB;IAAwF;IAAwB;EH42Ij9rB;EG52I6+rB;IAAkB;IAAa;EHg3I5gsB;AACF;AGj3IiisB;EAA0B;IAAgC;IAA4B;EHs3IrnsB;AACF;AGv3IqpsB;EAAe;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AH+3Iv4sB;;AG/3Iu+sB;EAA6B;EAAkB;EAA2E;AHq4IjmtB;;AGr4IostB;EAAc;EAA2B;EAAmC;EAAkE;EAAyB;EAAwE;AH84In7tB;;AG94ImhuB;EAAe;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AHu5IrwuB;;AGv5Iq2uB;EAA+B;EAAkB;EAA2E;AH65Ij+uB;;AG75IokvB;EAAgB;EAA2B;EAAqC;EAAkE;EAAyB;EAAwE;AHs6IvzvB;;AGt6Iu5vB;EAAiB;EAA2B;EAAoC;EAAkE;EAAyB;EAAwE;AH+6I1owB;;AG/6I0uwB;EAAmC;EAAkB;EAA2E;AHq7I12wB;;AGr7I68wB;EAAkB;EAA2B;EAAoC;EAAkE;EAAyB;EAAwE;AH87IjsxB;;AG97IiyxB;EAA2J;EAAiB;EAAkB;EAAoB;EAAqB;AHs8IxgyB;;AGt8ImhyB;EAAoB;EAAa;EAAe;EAAoB;EAAqB;EAAmB;AH+8I/nyB;;AG/8IgpyB;EAAsB;EAAsB;EAAc;EAAkB;EAAe;EAAoB;EAAqB;AHy9IpxyB;;AGz9I+xyB;EAAyB;IAAmC;EH89Iz1yB;EG99Iy2yB;IAAuB;EHi+Ih4yB;EGj+I44yB;IAA4B;IAAc;EHq+It7yB;EGr+Ii8yB;IAAyB;IAAc;EHy+Ix+yB;EGz+Iw/yB;IAAyB;IAAc;EH6+I/hzB;EG7+IgjzB;IAAyB;IAAc;EHi/IvlzB;EGj/IimzB;IAAyB;IAAc;EHq/IxozB;EGr/IypzB;IAAyB;IAAc;EHy/IhszB;EGz/IitzB;IAAyB;IAAc;EH6/IxvzB;EG7/IkwzB;IAAyB;IAAc;EHigJzyzB;EGjgJ0zzB;IAAyB;IAAc;EHqgJj2zB;EGrgJk3zB;IAAyB;IAAc;EHygJz5zB;EGzgJm6zB;IAA0B;IAAc;EH6gJ38zB;EG7gJ49zB;IAA0B;IAAc;EHihJpg0B;EGjhJqh0B;IAA0B;IAAc;EHqhJ7j0B;AACF;AGthJ2k0B;EAAyB;IAAsD;EH0hJxp0B;EG1hJwq0B;IAAuB;EH6hJ/r0B;EG7hJ2s0B;IAA4B;IAAc;EHiiJrv0B;EGjiJgw0B;IAAyB;IAAc;EHqiJvy0B;EGriJuz0B;IAAyB;IAAc;EHyiJ910B;EGziJ+20B;IAAyB;IAAc;EH6iJt50B;EG7iJg60B;IAAyB;IAAc;EHijJv80B;EGjjJw90B;IAAyB;IAAc;EHqjJ//0B;EGrjJgh1B;IAAyB;IAAc;EHyjJvj1B;EGzjJik1B;IAAyB;IAAc;EH6jJxm1B;EG7jJyn1B;IAAyB;IAAc;EHikJhq1B;EGjkJir1B;IAAyB;IAAc;EHqkJxt1B;EGrkJku1B;IAA0B;IAAc;EHykJ1w1B;EGzkJ2x1B;IAA0B;IAAc;EH6kJn01B;EG7kJo11B;IAA0B;IAAc;EHilJ531B;AACF;AGllJ041B;EAA0B;IAAyE;EHslJ3+1B;EGtlJ4/1B;IAAuB;EHylJnh2B;EGzlJ+h2B;IAA4B;IAAc;EH6lJzk2B;EG7lJol2B;IAAyB;IAAc;EHimJ3n2B;EGjmJ2o2B;IAAyB;IAAc;EHqmJlr2B;EGrmJms2B;IAAyB;IAAc;EHymJ1u2B;EGzmJov2B;IAAyB;IAAc;EH6mJ3x2B;EG7mJ4y2B;IAAyB;IAAc;EHinJn12B;EGjnJo22B;IAAyB;IAAc;EHqnJ342B;EGrnJq52B;IAAyB;IAAc;EHynJ572B;EGznJ682B;IAAyB;IAAc;EH6nJp/2B;EG7nJqg3B;IAAyB;IAAc;EHioJ5i3B;EGjoJsj3B;IAA0B;IAAc;EHqoJ9l3B;EGroJ+m3B;IAA0B;IAAc;EHyoJvp3B;EGzoJwq3B;IAA0B;IAAc;EH6oJht3B;AACF;AG9oJ8t3B;EAA0B;IAA4F;EHkpJl13B;EGlpJm23B;IAAuB;EHqpJ133B;EGrpJs43B;IAA4B;IAAc;EHypJh73B;EGzpJ273B;IAAyB;IAAc;EH6pJl+3B;EG7pJk/3B;IAAyB;IAAc;EHiqJzh4B;EGjqJ0i4B;IAAyB;IAAc;EHqqJjl4B;EGrqJ2l4B;IAAyB;IAAc;EHyqJlo4B;EGzqJmp4B;IAAyB;IAAc;EH6qJ1r4B;EG7qJ2s4B;IAAyB;IAAc;EHirJlv4B;EGjrJ4v4B;IAAyB;IAAc;EHqrJny4B;EGrrJoz4B;IAAyB;IAAc;EHyrJ314B;EGzrJ424B;IAAyB;IAAc;EH6rJn54B;EG7rJ654B;IAA0B;IAAc;EHisJr84B;EGjsJs94B;IAA0B;IAAc;EHqsJ9/4B;EGrsJ+g5B;IAA0B;IAAc;EHysJvj5B;AACF;AG1sJqk5B;EAA0B;IAAgH;EH8sJ7s5B;EG9sJ8t5B;IAAwB;EHitJtv5B;EGjtJkw5B;IAA6B;IAAc;EHqtJ7y5B;EGrtJwz5B;IAA0B;IAAc;EHytJh25B;EGztJg35B;IAA0B;IAAc;EH6tJx55B;EG7tJy65B;IAA0B;IAAc;EHiuJj95B;EGjuJ295B;IAA0B;IAAc;EHquJng6B;EGruJoh6B;IAA0B;IAAc;EHyuJ5j6B;EGzuJ6k6B;IAA0B;IAAc;EH6uJrn6B;EG7uJ+n6B;IAA0B;IAAc;EHivJvq6B;EGjvJwr6B;IAA0B;IAAc;EHqvJhu6B;EGrvJiv6B;IAA0B;IAAc;EHyvJzx6B;EGzvJmy6B;IAA2B;IAAc;EH6vJ506B;EG7vJ616B;IAA2B;IAAc;EHiwJt46B;EGjwJu56B;IAA2B;IAAc;EHqwJh86B;AACF;AGtwJ886B;EAA0B;IAAqI;EH0wJ3m7B;EG1wJ4n7B;IAAyB;EH6wJrp7B;EG7wJiq7B;IAA8B;IAAc;EHixJ7s7B;EGjxJwt7B;IAA2B;IAAc;EHqxJjw7B;EGrxJix7B;IAA2B;IAAc;EHyxJ1z7B;EGzxJ207B;IAA2B;IAAc;EH6xJp37B;EG7xJ837B;IAA2B;IAAc;EHiyJv67B;EGjyJw77B;IAA2B;IAAc;EHqyJj+7B;EGryJk/7B;IAA2B;IAAc;EHyyJ3h8B;EGzyJqi8B;IAA2B;IAAc;EH6yJ9k8B;EG7yJ+l8B;IAA2B;IAAc;EHizJxo8B;EGjzJyp8B;IAA2B;IAAc;EHqzJls8B;EGrzJ4s8B;IAA4B;IAAc;EHyzJtv8B;EGzzJuw8B;IAA4B;IAAc;EH6zJjz8B;EG7zJk08B;IAA4B;IAAc;EHi0J528B;AACF;AGl0J038B;EAAsB;EAAyC;AHs0Jz78B;;AGt0Jw+8B;EAA2B;EAA4C;AH20J/i9B;;AG30J2l9B;EAA8B;EAA+C;AHg1Jxq9B;;AGh1Jit9B;EAA2B;EAA4C;AHq1Jxx9B;;AGr1Ji09B;EAA8B;EAA+C;AH01J949B;;AG11Ju79B;EAA6B;EAA8C;AH+1Jlg+B;;AG/1J2i+B;EAA8B;EAA+C;AHo2Jxn+B;;AGp2Jiq+B;EAAiC;EAAsB;EAAgB;AH02Jxu+B;;AG12J6v+B;EAA8D;EAAuB;AH+2Jl1+B;;AG/2Jm3+B;EAA8B;AHm3Jj5+B;;AGn3Jw6+B;EAAgB;EAAwE;EAAgG;EAAqB;EAAmB;EAAqB;EAAqB;AH63Jlr/B;;AG73Jys/B;EAAsC;AHi4J/u/B;;AGj4Jk1/B;EAAsB;EAA0E;AHs4Jl7/B;;AGt4JohgC;EAAyB;EAAkB;EAAkB;EAAoB;EAAuD;AH84J5pgC;;AG94J0sgC;EAAuB;EAA2B;EAAoC;EAAkE;EAAyB;EAAkB;EAAoB;EAAwE;EAAgG;EAA2E;EAAmG;AH45JvvhC;;AG55JqyhC;EAAwH;EAAoB;EAA2C;EAAc;EAAiB;EAAgB;EAAiB;EAAkB;AHu6J9iiC;;AGv6J8jiC;EAAgJ;EAAoB;EAA6C;EAAe;EAAc;AH+6J5yiC;;AG/6JyziC;EAA4Q;EAAoB;EAA6C;EAAiB;EAAgB;AHu7JvqjC;;AGv7JwrjC;EAA4Q;EAAoB;EAA6C;EAAkB;EAAgB;EAAoB;AHg8J3jkC;;AGh8J8kkC;EAAsB;AHo8JpmkC;;AGp8JsnkC;EAA2E;EAA8B;AHy8J/tkC;;AGz8JqxkC;EAA4I;EAA8B;AH88J/7kC;;AG98Jq/kC;EAA4qB;EAA8B;AHm9J/rmC;;AGn9JovmC;EAAqE;EAA8B;AHw9Jv1mC;;AGx9J84mC;EAAgI;EAA8B;AH69J5inC;;AG79JomnC;EAA2E;EAA8B;AHk+J7snC;;AGl+JkwnC;EAA4I;EAA8B;AHu+J56nC;;AGv+Jk+nC;EAAyE;EAA8B;AH4+JzkoC;;AG5+J+noC;EAAwI;EAA8B;AHi/JryoC;;AGj/J21oC;EAA2E;EAA8B;AHs/Jp8oC;;AGt/J0/oC;EAA4I;EAA8B;AH2/JpqpC;;AG3/J0tpC;EAAsB;AH+/JhvpC;;AG//JmwpC;EAAkC;AHmgKrypC;;AGngKkzpC;EAAsC;EAAkB;EAAuD;EAAkB;EAAc;EAAkB;AH4gKn9pC;;AG5gK89pC;EAAa;AHghK3+pC;;AGhhKw/pC;EAAW;EAAkB;EAA8D;EAA0C;EAA0C;EAA4C;EAA2C;EAAuD;EAAkB;EAAc;AH6hKr1qC;;AG7hKu2qC;EAAiD;AHiiKx5qC;;AGjiKu8qC;EAAiF;AHqiKxhrC;;AGriKukrC;EAAqE;AHyiK5orC;;AGziKwrrC;EAAiF;AH6iKzwrC;;AG7iKwzrC;EAA6E;AHijKr4rC;;AGjjKm7rC;EAAiF;AHqjKpgsC;;AGrjKmjsC;EAAsB;EAAa;AH0jKtlsC;;AG1jK+msC;EAAqB;EAAkB;EAAkB;EAAoB;EAAoD;AHkkKhvsC;;AGlkK2xsC;EAAwB;AHskKnzsC;;AGtkKw2sC;EAA6C;EAAkB;EAAkB;EAAoB;AH6kK78sC;;AG7kK2/sC;EAAqB;AHilKhhtC;;AGjlKsktC;EAAwB;AHqlK9ltC;;AGrlKoptC;EAA+C;EAAkB;EAAkB;EAAoB;AH4lK3vtC;;AG5lKyytC;EAAuB;AHgmKh0tC;;AGhmKq3tC;EAAwB;EAAkB;EAAkB;EAAoB;EAAqD;AHwmK1/tC;;AGxmKwiuC;EAAmB;EAA+C;AH6mK1muC;;AG7mKsouC;EAAkG;EAA4C;AHknKpxuC;;AGlnKmzuC;EAA8G;EAA+C;AHunKh9uC;;AGvnK4+uC;EAAkG;EAA4C;AH4nK1nvC;;AG5nKspvC;EAA8G;EAA+C;AHioKnzvC;;AGjoK+0vC;EAA0G;EAA8C;AHsoKv+vC;;AGtoKmgwC;EAA8G;EAA+C;AH2oKhqwC;;AG3oK4rwC;EAAyE;EAA4C;AHgpKjzwC;;AGhpK60wC;EAA+E;EAAwD;AHqpKp9wC;;AGrpKg/wC;EAAyE;EAAqD;AH0pK9mxC;;AG1pK0oxC;EAA+E;EAAwD;AH+pKjxxC;;AG/pK6yxC;EAA6E;EAAuD;AHoqKj7xC;;AGpqK68xC;EAA+E;EAAwD;AHyqKplyC;;AGzqKgnyC;EAAiB;EAAkB;EAAkB;EAAoB;EAAoD;AHirK7uyC;;AGjrKwxyC;EAAoB;AHqrK5yyC;;AGrrKi2yC;EAAqC;EAAkB;EAAkB;EAAoB;AH4rK97yC;;AG5rK4+yC;EAAiB;AHgsK7/yC;;AGhsKmjzC;EAAoB;AHosKvkzC;;AGpsK6nzC;EAAuC;EAAkB;EAAkB;EAAoB;AH2sK5tzC;;AG3sK0wzC;EAAmB;AH+sK7xzC;;AG/sKk1zC;EAAoB;EAAkB;EAAkB;EAAoB;EAAqD;AHutKn9zC;;AGvtKig0C;EAAY;EAAqC;EAA+C;EAAmD;EAA8D;AH+tKlt0C;;AG/tK8u0C;EAAiB;EAA4C;EAAgD;EAA2D;AHsuKt50C;;AGtuKq70C;EAAoB;EAA+C;EAAmD;EAA8D;AH6uKzm1C;;AG7uKqo1C;EAAiB;EAA4C;EAAgD;EAA2D;AHovK7y1C;;AGpvKy01C;EAAoB;EAA+C;EAAmD;EAA8D;AH2vK7/1C;;AG3vKyh2C;EAAmB;EAA8C;EAAkD;EAA6D;AHkwKzs2C;;AGlwKqu2C;EAAoB;EAA+C;EAAmD;EAA8D;AHywKz52C;;AGzwKq72C;EAAiC;EAA6B;AH8wKn/2C;;AG9wKih3C;EAA+B;EAAgC;AHmxKhl3C;;AGnxKin3C;EAA0B;EAAkB;AHwxK7p3C;;AGxxKot3C;EAA8B;EAA8B;AH6xKhx3C;;AG7xKq03C;EAA2B;AHiyKh23C;;AGjyK033C;EAAwB;EAA0E;EAAkG;AHuyK9j4C;;AGvyKiq4C;EAAgC;EAAsB;AH4yKvt4C;;AG5yK8w4C;EAAwB;EAA0E;EAAkG;AHkzKl94C;;AGlzKqj5C;EAA2B;EAA8B;AHuzK9m5C;;AGvzKio5C;EAAqB;EAA2G;AH4zKjw5C;;AG5zKo25C;EAAwC;AHg0K545C;;AGh0Kq+5C;EAAmB;EAA2G;AHq0Knm6C;;AGr0K4s6C;EAAqB;EAA2G;EAAyG;AH20Kr76C;;AG30K8g7C;EAA8B;EAAoB;AHg1Khk7C;;AGh1Kwn7C;EAA4B;EAAoB;AHq1Kxq7C;;AGr1Kgu7C;EAA8B;AHy1K9v7C;;AGz1Kox7C;EAA0B;EAA0E;EAAkG;AH+1K197C;;AG/1K6j8C;EAAuC;EAAkB;AHo2Ktn8C;;AGp2K6q8C;EAA2D;EAAsB;AHy2K9v8C;;AGz2Kkz8C;EAA6B;EAAsB;AH82Kr28C;;AG92Ky58C;EAAyB;EAAkB;AHm3Kp88C;;AGn3Kw/8C;EAAyB;EAAkB;AHw3Kni9C;;AGx3Kul9C;EAAyB;EAAkB;AH63Klo9C;;AG73Ksr9C;EAAyB;EAAkB;AHk4Kju9C;;AGl4Kwx9C;EAAwB;EAAoB;AHu4Kp09C;;AGv4Kk39C;EAA2B;EAAoB;AH44Kj69C;;AG54K+89C;EAA2B;EAAoB;AHi5K9/9C;;AGj5K0i+C;EAAsC;EAAkB;AHs5Klm+C;;AGt5Ksp+C;EAAwC;EAAoB;AH25Klt+C;;AG35Kuw+C;EAAmD;EAAkB;AHg6K50+C;;AGh6Km4+C;EAAyB;IAAY;EHq6Kt6+C;EGr6Km7+C;IAAY;EHw6K/7+C;EGx6Ky8+C;IAAiB;EH26K19+C;EG36Kwg/C;IAAiB;EH86Kzh/C;AACF;AG/6K0k/C;EAAyB;IAAW;IAAiB;EHo7K7n/C;EGp7K+o/C;IAAW;IAAmB;EHw7K7q/C;EGx7K6r/C;IAAW;EH27Kxs/C;EG37Kst/C;IAAY;EH87Klu/C;EG97K+u/C;IAAU;EHi8Kzv/C;EGj8Ksw/C;IAAiB;EHo8Kvx/C;EGp8Kq0/C;IAAiB;EHu8Kt1/C;EGv8Ko4/C;IAAc;EH08Kl5/C;EG18Kq6/C;IAAc;EH68Kn7/C;EG78Ky8/C;IAAW;IAAkB;EHi9Kt+/C;EGj9Ky//C;IAAiB;EHo9K1ggD;EGp9K4hgD;IAAc;IAAkB;EHw9K5jgD;EGx9K0kgD;IAAc;IAAiB;EH49KzmgD;AACF;AG79K6ngD;EAA0B;IAAU;EHi+K/pgD;EGj+K4qgD;IAAU;EHo+KtrgD;EGp+KssgD;IAAiB;EHu+KvtgD;EGv+KqwgD;IAAiB;EH0+KtxgD;EG1+Ko0gD;IAAc;EH6+Kl1gD;EG7+Kq2gD;IAAe;EHg/Kp3gD;AACF;AGj/Ku4gD;EAA0B;IAAU;EHq/Kz6gD;EGr/Kq7gD;IAAW;IAAkB;EHy/Kl9gD;EGz/Kq+gD;IAAc;IAAiB;EH6/KpghD;EG7/KkhhD;IAAc;IAAmB;EHigLnjhD;AACF,EIlgLA;AAAgE;EAAiB;EAAuB;AJsgLxG;;AItgL8H;EAAe;AJ0gL7I;;AI1gL6J;EAAK;EAA8B;EAA6B;EAAiM;EAAgB;EAAgB;EAAc;AJohL5c;;AIphLud;EAAK;EAAoB;AJyhLhf;;AIzhLyf;EAAG;EAAqB;EAAc;AJ+hL/hB;;AI/hLwiB;EAAoB;EAAyC;AJoiLrmB;;AIpiLsoB;EAAkB;EAAkB;AJyiL1qB;;AIziL8rB;EAAE;EAAc;AJ8iL9sB;;AI9iLsuB;EAAS;AJkjL/uB;;AIljLkwB;EAAkB;EAAoG;AJujLx3B;;AIvjLs4B;EAAM;AJ2jL54B;;AI3jL05B;EAAQ;EAAc;EAAc;EAAkB;AJkkLh9B;;AIlkLw+B;EAAI;AJskL5+B;;AItkL0/B;EAAI;AJ0kL9/B;;AI1kLwgC;EAAM;EAAyB;EAAqB;AJglL5jC;;AIhlL0kC;EAAsC;EAAc;EAAoB;EAAe;EAAoB;EAAoB;EAAS;AJ0lLltC;;AI1lL4tC;EAAc;AJ8lL1uC;;AI9lL8vC;EAAgD;EAA0B;EAA6B;AJomLr2C;;AIpmL23C;EAAgB;AJwmL34C;;AIxmLw5C;EAAiB;AJ4mLz6C;;AI5mLy7C;EAAS;AJgnLl8C;;AIhnL09C;EAAwD;AJonLlhD;;AIpnL8hD;EAAc;EAA6B;AJynLzkD;;AIznL6lD;EAA4B;AJ6nLznD;;AI7nLipD;EAA6B;EAA0B;AJkoLxsD;;AIloLqtD;EAAQ;AJsoL7tD;;AItoL+uD;EAAmD;AJ0oLlyD;;AI1oL2yD;EAAS;AJ8oLpzD;;AI9oL6zD;EAAgB;AJkpL70D;;AIlpLu1D;EAAW;EAAgB;EAAS;AJwpL33D;;AIxpLq4D;EAAS;AJ4pL94D;;AI5pL85D;EAAmD;EAAc;AJiqL/9D;;AIjqLy+D;EAAyC;EAAc;AJsqLhiE;;AItqL0iE;EAAqB;AJ0qL/jE;;AI1qL8kE;EAAU;AJ8qLxlE;;AI9qLumE;EAA+C;EAAc;AJmrLpqE;;AInrL0rE;EAAU;EAAY;AJwrLhtE;;AIxrL+tE;EAAS;AJ4rLxuE;;AI5rLqvE;EAAiB;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AJ2uLjpG;;AI3uLuqG;EAAW;EAAwB;EAAwB;EAAmB;EAAmB;EAAc;EAAc;EAAc;EAAe;EAAe;EAAa;EAAa;EAAkB;EAAsC;EAAe;EAAoB;EAAsB;EAAuB;EAAwB;EAAkB;EAA2B;EAA4B;EAAoC;EAAkC;EAA2B;EAAsB;EAA8B;EAAY;EAAkB;EAAgB;EAAiB;EAAkB;EAAc;EAAgB;EAAa;EAAmB;EAAqB;EAA2B;EAAyB;EAA0B;EAA2B;EAAuB;EAAwB;EAAyB;AJ0xL7jI;;AI1xLmlI;EAAW;AJ8xL9lI;;AI9xLymI;EAAyB;IAAW;EJmyL3oI;AACF;AIpyL8pI;EAAyB;IAAW;EJwyLhsI;AACF;AIzyLmtI;EAA0B;IAAW;EJ6yLtvI;AACF;AI9yL0wI;EAA0B;IAAW;EJkzL7yI;AACF;AInzLi0I;EAA0B;IAAW;EJuzLp2I;AACF;AIxzLw3I;EAA0B;IAAW;EJ4zL35I;AACF;AI7zL+6I;EAAS;AJg0Lx7I;;AIh0L28I;EAAW;AJo0Lt9I;;AIp0Lw+I;EAAQ;AJw0Lh/I;;AIx0LggJ;EAAO;AJ40LvgJ;;AI50LshJ;EAAU;AJg1LhiJ;;AIh1LkjJ;EAAU;AJo1L5jJ;;AIp1L8kJ;EAAS;EAAS;EAAO;EAAQ;AJ21L/mJ;;AI31LqnJ;EAAQ;AJ+1L7nJ;;AI/1LwoJ;EAAQ;AJm2LhpJ;;AIn2LupJ;EAAS;AJu2LhqJ;;AIv2LwqJ;EAAS;AJ22LjrJ;;AI32L4rJ;EAAW;AJ+2LvsJ;;AI/2LmtJ;EAAO;AJm3L1tJ;;AIn3LguJ;EAAO;AJu3LvuJ;;AIv3LgvJ;EAAS;AJ23LzvJ;;AI33LmwJ;EAAQ;AJ+3L3wJ;;AI/3LoxJ;EAAQ;AJm4L5xJ;;AIn4LqyJ;EAAU;AJu4L/yJ;;AIv4L4zJ;EAAS;AJ24Lr0J;;AI34Lm1J;EAAU;AJ+4L71J;;AI/4L42J;EAAgB;AJm5L53J;;AIn5Lu4J;EAAM;AJu5L74J;;AIv5Lw5J;EAAM;AJ25L95J;;AI35Ly6J;EAAM;AJ+5L/6J;;AI/5L07J;EAAK;AJm6L/7J;;AIn6Ly8J;EAAK;AJu6L98J;;AIv6L49J;EAAK;AJ26Lj+J;;AI36L0+J;EAAO;EAAmB;AJg7LpgK;;AIh7LohK;EAAS;EAAiB;AJq7L9iK;;AIr7LgkK;EAAO;EAAiB;AJ07LxlK;;AI17L0mK;EAAM;EAAoB;AJ+7LpoK;;AI/7LqpK;EAAM;EAAgB;AJo8L3qK;;AIp8LwrK;EAAM;EAAqB;AJy8LntK;;AIz8LquK;EAAM;EAAiB;AJ88L5vK;;AI98L8wK;EAAM;EAAmB;AJm9LvyK;;AIn9LuzK;EAAM;EAAkB;AJw9L/0K;;AIx9Lk2K;EAAM;EAAmB;AJ69L33K;;AI79L+4K;EAAQ;EAA6B;AJk+Lp7K;;AIl+Lk9K;EAAQ;EAA+B;AJu+Lz/K;;AIv+LqhL;EAAO;AJ2+L5hL;;AI3+L+iL;EAAO;AJ++LtjL;;AI/+LskL;EAAO;AJm/L7kL;;AIn/LgmL;EAAM;AJu/LtmL;;AIv/LynL;EAAM;AJ2/L/nL;;AI3/LipL;EAAM;AJ+/LvpL;;AI//L2qL;EAAM;AJmgMjrL;;AIngMmsL;EAAM;AJugMzsL;;AIvgMytL;EAAM;AJ2gM/tL;;AI3gMkvL;EAAM;AJ+gMxvL;;AI/gM0wL;EAAM;AJmhMhxL;;AInhMiyL;EAAM;AJuhMvyL;;AIvhM4zL;EAAM;AJ2hMl0L;;AI3hMs1L;EAAM;AJ+hM51L;;AI/hM+2L;EAAM;AJmiMr3L;;AIniMk4L;EAAM;AJuiMx4L;;AIviM05L;EAAM;AJ2iMh6L;;AI3iMk7L;EAAM;AJ+iMx7L;;AI/iMs8L;EAAM;AJmjM58L;;AInjM29L;EAAM;AJujMj+L;;AIvjMo/L;EAAO;AJ2jM3/L;;AI3jM6gM;EAAO;AJ+jMphM;;AI/jMuiM;EAAO;AJmkM9iM;;AInkMikM;EAAM;AJukMvkM;;AIvkMwlM;EAAO;AJ2kM/lM;;AI3kMinM;EAAO;AJ+kMxnM;;AI/kMsoM;EAAS;AJmlM/oM;;AInlMuqM;EAAc;AJulMrrM;;AIvlM0sM;EAAM;AJ2lMhtM;;AI3lM6tM;EAAQ;AJ+lMruM;;AI/lM4vM;EAAa;AJmmMzwM;;AInmM6xM;EAAO;AJumMpyM;;AIvmMkzM;EAAY;AJ2mM9zM;;AI3mMi1M;EAAoB;AJ+mMr2M;;AI/mMg4M;EAAiB;AJmnMj5M;;AInnMy6M;EAAW;AJunMp7M;;AIvnMs8M;EAAM;AJ2nM58M;;AI3nMy9M;EAAU;AJ+nMn+M;;AI/nMo/M;EAAQ;AJmoM5/M;;AInoMygN;EAAM;AJuoM/gN;;AIvoM4hN;EAAQ;AJ2oMpiN;;AI3oMgjN;EAAK;AJ+oMrjN;;AI/oMikN;EAAM;AJmpMvkN;;AInpMmlN;EAAM;AJupMzlN;;AIvpMqmN;EAAM;AJ2pM3mN;;AI3pMwnN;EAAM;AJ+pM9nN;;AI/pM2oN;EAAK;AJmqMhpN;;AInqM8pN;EAAM;AJuqMpqN;;AIvqMirN;EAAM;AJ2qMvrN;;AI3qMosN;EAAM;AJ+qM1sN;;AI/qMstN;EAAM;AJmrM5tN;;AInrM0uN;EAAM;AJurMhvN;;AIvrM+vN;EAAK;AJ2rMpwN;;AI3rMixN;EAAM;AJ+rMvxN;;AI/rMmyN;EAAO;EAAwB;AJosMl0N;;AIpsMq1N;EAAa;AJwsMl2N;;AIxsM+2N;EAAU;AJ4sMz3N;;AI5sM04N;EAAQ;AJgtMl5N;;AIhtM65N;EAAK;AJotMl6N;;AIptM66N;EAAM;AJwtMn7N;;AIxtM87N;EAAM;AJ4tMp8N;;AI5tM+8N;EAAO;EAAuB;AJiuM7+N;;AIjuM+/N;EAAK;AJquMpgO;;AIruMihO;EAAK;AJyuMthO;;AIzuMmiO;EAAK;AJ6uMxiO;;AI7uMojO;EAAQ;AJivM5jO;;AIjvMukO;EAAM;AJqvM7kO;;AIrvMylO;EAAM;AJyvM/lO;;AIzvM2mO;EAAM;AJ6vMjnO;;AI7vM4nO;EAAM;AJiwMloO;;AIjwM8oO;EAAM;AJqwMppO;;AIrwMgqO;EAAM;AJywMtqO;;AIzwMkrO;EAAmB;EAAuB;AJ8wM5tO;;AI9wM8uO;EAAa;AJkxM3vO;;AIlxMuwO;EAAQ;AJsxM/wO;;AItxMoyO;EAAc;AJ0xMlzO;;AI1xM20O;EAAQ;AJ8xMn1O;;AI9xM+1O;EAAa;AJkyM52O;;AIlyM03O;EAAW;AJsyMr4O;;AItyMi5O;EAAW;AJ0yM55O;;AI1yM86O;EAAsB;AJ8yMp8O;;AI9yMkoP;EAAQ;AJkzM1oP;;AIlzMspP;EAAW;AJszMjqP;;AItzMsrP;EAAiB;EAAwB;EAAqB;AJ4zMpvP;;AI5zMowP;EAAe;AJg0MnxP;;AIh0MsyP;EAAa;AJo0MnzP;;AIp0Mi2P;EAAU;AJw0M32P;;AIx0M83P;EAAkB;AJ40Mh5P;;AI50M26P;EAAU;AJg1Mr7P;;AIh1M28P;EAAW;AJo1Mt9P;;AIp1Mq+P;EAAa;AJw1Ml/P;;AIx1MmgQ;EAAgB;AJ41MnhQ;;AI51MwiQ;EAAiB;AJg2MzjQ;;AIh2MqlQ;EAAgB;AJo2MrmQ;;AIp2MgoQ;EAAa;AJw2M7oQ;;AIx2MoqQ;EAAW;AJ42M/qQ;;AI52MosQ;EAAc;AJg3MltQ;;AIh3MquQ;EAAe;AJo3MpvQ;;AIp3M+wQ;EAAa;AJw3M5xQ;;AIx3MqzQ;EAAgB;AJ43Mr0Q;;AI53M41Q;EAAiB;AJg4M72Q;;AIh4M24Q;EAAmB;AJo4M95Q;;AIp4Ms8Q;EAAgB;AJw4Mt9Q;;AIx4Mm/Q;EAAQ;AJ44M3/Q;;AI54MogR;EAAO;AJg5M3gR;;AIh5MohR;EAAO;AJo5M3hR;;AIp5MsiR;EAAO;AJw5M7iR;;AIx5MujR;EAAyC;EAAuB;EAAqD;AJ85M5qR;;AI95MouR;EAAwC;EAAwB;EAAyD;AJo6M71R;;AIp6My5R;EAA+C;EAAsB;AJy6M99R;;AIz6MqhS;EAAiB;AJ66MtiS;;AI76MsjS;EAAiB;AJi7MvkS;;AIj7MulS;EAAmB;AJq7M1mS;;AIr7M4nS;EAAmB;AJy7M/oS;;AIz7MiqS;EAAmB;AJ67MprS;;AI77MssS;EAAU;EAAgB;EAAuB;AJm8MvvS;;AIn8M0wS;EAAmB;AJu8M7xS;;AIv8MgzS;EAAmB;AJ28Mn0S;;AI38Ms1S;EAAqB;AJ+8M32S;;AI/8Mg4S;EAAqB;AJm9Mr5S;;AIn9M06S;EAAY;AJu9Mt7S;;AIv9M48S;EAAS;AJ29Mr9S;;AI39M0+S;EAAY;AJ+9Mt/S;;AI/9M0gT;EAAc;AJm+MxhT;;AIn+M6iT;EAAc;AJu+M3jT;;AIv+M2kT;EAAa;AJ2+MxlT;;AI3+M2mT;EAAY;AJ++MvnT;;AI/+M4oT;EAAa;AJm/MzpT;;AIn/M8qT;EAAY;AJu/M1rT;;AIv/MgtT;EAAgB;EAA6B;AJ4/M7vT;;AI5/MuxT;EAAc;EAAkC;AJigNv0T;;AIjgN02T;EAAU;AJqgNp3T;;AIrgNq4T;EAAQ;AJygN74T;;AIzgN85T;EAAU;AJ6gNx6T;;AI7gNu7T;EAAY;AJihNn8T;;AIjhN29T;EAAY;AJqhNv+T;;AIrhN4/T;EAAU;AJyhNtgU;;AIzhN8hU;EAAU;AJ6hNxiU;;AI7hN6jU;EAAY;AJiiNzkU;;AIjiNgmU;EAAY;AJqiN5mU;;AIriNkoU;EAAc;AJyiNhpU;;AIziNmqU;EAAa;AJ6iNhrU;;AI7iNksU;EAAiB;EAAsB;AJkjNzuU;;AIljNgyU;EAAmB;EAAsB;AJujNz0U;;AIvjN83U;EAA6B;EAAsB;AJ4jNj7U;;AI5jNu+U;EAAiB;EAAsB;AJikN9gV;;AIjkNqkV;EAAiB;EAAsB;AJskN5mV;;AItkNmqV;EAAgB;EAAsB;AJ2kNzsV;;AI3kN8vV;EAAoB;AJ+kNlxV;;AI/kN2yV;EAA4B;EAAsB;AJolN71V;;AIplNi5V;EAAU;EAAkB;AJylN76V;;AIzlNo+V;EAAc;EAAkB;AJ8lNpgW;;AI9lNyjW;EAAc;EAAkB;AJmmNzlW;;AInmN8oW;EAAY;EAAkB;AJwmN5qW;;AIxmNmuW;EAAa;EAAkB;AJ6mNlwW;;AI7mNyzW;EAAa;EAAkB;AJknNx1W;;AIlnN+4W;EAAgB;AJsnN/5W;;AItnN47W;EAAc;EAAkB;AJ2nN59W;;AI3nNghX;EAAa;EAAkB;AJgoN/iX;;AIhoNmmX;EAAa;EAAkB;AJqoNloX;;AIroNyrX;EAAmB;AJyoN5sX;;AIzoNoxX;EAAkB;AJ6oNtyX;;AI7oN02X;EAAmB;AJipN73X;;AIjpNw8X;EAA6B;EAA2B;EAAoC;AJupNpiY;;AIvpNsmY;EAAc;EAA2B;EAAqC;AJ6pNprY;;AI7pNsvY;EAA2B;EAA2B;EAAoC;AJmqNh1Y;;AInqNk5Y;EAAW;EAAmC;AJwqNh8Y;;AIxqNugZ;EAAc;EAAqC;AJ6qN1jZ;;AI7qNooZ;EAAwB;AJirN5pZ;;AIjrNqrZ;EAAY;AJqrNjsZ;;AIrrNytZ;EAAc;AJyrNvuZ;;AIzrNyvZ;EAAgB;EAAsB;AJ8rN/xZ;;AI9rNkzZ;EAAc;EAAoB;AJmsNp1Z;;AInsNq2Z;EAAe;EAA0B;AJwsN94Z;;AIxsNq6Z;EAAK;AJ4sN16Z;;AI5sNw7Z;EAAK;AJgtN77Z;;AIhtNu8Z;EAAK;AJotN58Z;;AIptN29Z;EAAK;AJwtNh+Z;;AIxtN++Z;EAAK;AJ4tNp/Z;;AI5tNiga;EAAK;AJguNtga;;AIhuNqha;EAAQ;AJouN7ha;;AIpuN6ia;EAAM;EAAoB;AJyuNvka;;AIzuN4la;EAAO;EAAoB;AJ8uNvna;;AI9uNwoa;EAAM;EAAqB;AJmvNnqa;;AInvNyra;EAAM;EAAsB;AJwvNrta;;AIxvNwua;EAAQ;EAAgC;AJ6vNhxa;;AI7vN6ya;EAAQ;EAAyB;AJkwN90a;;AIlwNw2a;EAAM;EAAqB;AJuwNn4a;;AIvwNq5a;EAAM;EAAoB;AJ4wN/6a;;AI5wNo8a;EAAM;EAAoB;AJixN99a;;AIjxNm/a;EAAQ;EAA8B;AJsxNzhb;;AItxNojb;EAAM;EAAmB;AJ2xN7kb;;AI3xNimb;EAAM;EAAkB;AJgyNznb;;AIhyN4ob;EAAM;EAAqB;AJqyNvqb;;AIryN6rb;EAAM;EAAoB;AJ0yNvtb;;AI1yNwub;EAAM;EAAe;AJ+yN7vb;;AI/yN6wb;EAAM;EAAsB;AJozNzyb;;AIpzN4zb;EAAQ;EAA8B;AJyzNl2b;;AIzzNi4b;EAAM;EAAiB;AJ8zNx5b;;AI9zNs6b;EAAM;AJk0N56b;;AIl0Ng8b;EAAM;AJs0Nt8b;;AIt0Ny9b;EAAM;AJ00N/9b;;AI10Nk/b;EAAM;AJ80Nx/b;;AI90N0gc;EAAM;AJk1Nhhc;;AIl1Nqic;EAAM;AJs1N3ic;;AIt1Nkkc;EAAM;AJ01Nxkc;;AI11N2lc;EAAM;AJ81Njmc;;AI91Nqnc;EAAM;AJk2N3nc;;AIl2N0oc;EAAM;AJs2Nhpc;;AIt2Noqc;EAAW;AJ02N/qc;;AI12N+rc;EAAa;AJ82N5sc;;AI92N8tc;EAAe;AJk3N7uc;;AIl3Nywc;EAAY;AJs3Nrxc;;AIt3Nsyc;EAAc;AJ03Npzc;;AI13N+0c;EAAc;AJ83N71c;;AI93Nm3c;EAAY;AJk4N/3c;;AIl4Ng8c;EAAS;EAAkB;AJu4N39c;;AIv4N++c;EAAU;EAAe;AJ44Nxgd;;AI54Nshd;EAAS;AJg5N/hd;;AIh5Nijd;EAAkB;AJo5Nnkd;;AIp5Nuld;EAAS;AJw5Nhmd;;AIx5Nmnd;EAAW;EAAe;AJ65N7od;;AI75Ngqd;EAAU;EAAmB;AJk6N7rd;;AIl6Nitd;EAAS;EAAiB;AJu6N3ud;;AIv6N4vd;EAAa;AJ26Nzwd;;AI36Nyxd;EAAW;AJ+6Npyd;;AI/6Nozd;EAAe;AJm7Nn0d;;AIn7Nm1d;EAAa;AJu7Nh2d;;AIv7Ng3d;EAAY;AJ27N53d;;AI37N44d;EAAW;AJ+7Nv5d;;AI/7Ng7d;EAAY;AJm8N57d;;AIn8Ns9d;EAAQ;AJu8N99d;;AIv8Ng/d;EAAc;AJ28N9/d;;AI38Nghe;EAAe;AJ+8N/he;;AI/8Ngje;EAAgB;AJm9Nhke;;AIn9Nule;EAAe;AJu9Ntme;;AIv9N4ne;EAAiB;EAA8B;AJ49N3qe;;AI59Ngue;EAAe;EAAoB;AJi+Nnwe;;AIj+N8ye;EAAY;EAAoB;AJs+N90e;;AIt+N43e;EAAgB;EAA8B;AJ2+N16e;;AI3+Nk+e;EAAiB;EAAoB;AJg/Nvgf;;AIh/Nmjf;EAAY;EAAoB;AJq/Nnlf;;AIr/N2nf;EAAc;EAAoB;AJ0/N7pf;;AI1/Nysf;EAAiB;EAAoB;AJ+/N9uf;;AI//N0xf;EAAe;EAAoB;AJogO7zf;;AIpgO22f;EAAe;EAAoB;AJygO94f;;AIzgO07f;EAAgB;EAAoB;AJ8gO99f;;AI9gO0ggB;EAAc;EAAoB;AJmhO5igB;;AInhOwlgB;EAAe;EAAoB;AJwhO3ngB;;AIxhOyqgB;EAAgB;EAAoB;AJ6hO7sgB;;AI7hOyvgB;EAAc;EAAoB;AJkiO3xgB;;AIliOy0gB;EAAe;EAAoB;AJuiO52gB;;AIviOu5gB;EAAe;EAAoB;AJ4iO17gB;;AI5iOq+gB;EAA0B;EAAoB;AJijOnhhB;;AIjjO8jhB;EAAiB;EAAoB;AJsjOnmhB;;AItjOgphB;EAAiB;EAAoB;AJ2jOrrhB;;AI3jOiuhB;EAAc;EAAoB;AJgkOnwhB;;AIhkO+yhB;EAAgB;EAAoB;AJqkOn1hB;;AIrkO+3hB;EAA2B;EAAoB;AJ0kO96hB;;AI1kO29hB;EAAe;EAAoB;AJ+kO9/hB;;AI/kO0iiB;EAAe;EAAoB;AJolO7kiB;;AIplO0niB;EAAiB;EAAoB;AJylO/piB;;AIzlO4siB;EAAW;AJ6lOvtiB;;AI7lOsviB;EAAc;AJimOpwiB;;AIjmO8xiB;EAAW;AJqmOzyiB;;AIrmOmziB;EAAW;EAAwE;AJ0mOt4iB;;AI1mOs+iB;EAAsB;AJ8mO5/iB;;AI9mO+ljB;EAAW;EAA0E;AJmnOprjB;;AInnOsxjB;EAAQ;EAAqE;AJwnOn2jB;;AIxnOg8jB;EAAmB;AJ4nOn9jB;;AI5nOsjkB;EAAW;EAAwC;AJioOzmkB;;AIjoOgqkB;EAAW;EAA2E;AJsoOtvkB;;AItoOy1kB;EAAyB;AJ0oOl3kB;;AI1oOq9kB;EAAc;EAA8C;AJ+oOjhlB;;AI/oO8klB;EAAa;EAAsB;EAA8B;AJqpO/olB;;AIrpOkvlB;EAAc;EAA8B;AJ0pO9xlB;;AI1pOizlB;EAAQ;EAA2G;AJ+pOp6lB;;AI/pOugmB;EAAc;AJmqOrhmB;;AInqO8mmB;EAAM;EAA2G;AJwqO/tmB;;AIxqOw0mB;EAA2B;EAAoB;AJ6qOv3mB;;AI7qO86mB;EAAM;AJirOp7mB;;AIjrOw8mB;EAAc;AJqrOt9mB;;AIrrOuonB;EAAY;EAAyB;EAAsJ;EAA8I;EAAsK;AJ6rOtnoB;;AI7rOyqoB;EAAoB;EAA4B;AJksOztoB;;AIlsO4woB;EAAkC;AJssO9yoB;;AItsOu0oB;EAAc;AJ0sOr1oB;;AI1sO62oB;EAAa;AJ8sO13oB;;AI9sO66oB;EAAW;AJktOx7oB;;AIltO68oB;EAAsB;AJstOn+oB;;AIttOs/oB;EAAkC;AJ0tOxhpB;;AI1tOqipB;EAAsC;EAAkB;EAAuD;EAAkB;EAAc;EAAkB;AJmuOtspB;;AInuOitpB;EAAa;AJuuO9tpB;;AIvuO2upB;EAAW;EAAkB;EAA8D;EAA0C;EAA0C;EAA4C;EAA2C;EAAuD;EAAkB;EAAc;AJovOxkqB;;AIpvO0lqB;EAAiD;AJwvO3oqB;;AIxvO0rqB;EAAiF;AJ4vO3wqB;;AI5vO0zqB;EAAqE;AJgwO/3qB;;AIhwO26qB;EAAiF;AJowO5/qB;;AIpwO2irB;EAA6E;AJwwOxnrB;;AIxwOsqrB;EAAiF;AJ4wOvvrB;;AI5wOsyrB;EAAsB;EAAa;AJixOz0rB;;AIjxOk2rB;EAAqB;EAAkB;EAAkB;EAAoB;EAAoD;AJyxOn+rB;;AIzxO8gsB;EAAwB;AJ6xOtisB;;AI7xO2lsB;EAA6C;EAAkB;EAAkB;EAAoB;AJoyOhssB;;AIpyO8usB;EAAqB;AJwyOnwsB;;AIxyOyzsB;EAAwB;AJ4yOj1sB;;AI5yOu4sB;EAA+C;EAAkB;EAAkB;EAAoB;AJmzO9+sB;;AInzO4htB;EAAuB;AJuzOnjtB;;AIvzOwmtB;EAAwB;EAAkB;EAAkB;EAAoB;EAAqD;AJ+zO7utB;;AI/zO2xtB;EAAmB;EAA+C;AJo0O71tB;;AIp0Oy3tB;EAAkG;EAA4C;AJy0OvguB;;AIz0OsiuB;EAA8G;EAA+C;AJ80OnsuB;;AI90O+tuB;EAAkG;EAA4C;AJm1O72uB;;AIn1Oy4uB;EAA8G;EAA+C;AJw1OtivB;;AIx1OkkvB;EAA0G;EAA8C;AJ61O1tvB;;AI71OsvvB;EAA8G;EAA+C;AJk2On5vB;;AIl2O+6vB;EAAyE;EAA4C;AJu2OpiwB;;AIv2OgkwB;EAA+E;EAAwD;AJ42OvswB;;AI52OmuwB;EAAyE;EAAqD;AJi3Oj2wB;;AIj3O63wB;EAA+E;EAAwD;AJs3OpgxB;;AIt3OgixB;EAA6E;EAAuD;AJ23OpqxB;;AI33OgsxB;EAA+E;EAAwD;AJg4Ov0xB;;AIh4Om2xB;EAAiB;EAAkB;EAAkB;EAAoB;EAAoD;AJw4Oh+xB;;AIx4O2gyB;EAAoB;AJ44O/hyB;;AI54OolyB;EAAqC;EAAkB;EAAkB;EAAoB;AJm5OjryB;;AIn5O+tyB;EAAiB;AJu5OhvyB;;AIv5OsyyB;EAAoB;AJ25O1zyB;;AI35Og3yB;EAAuC;EAAkB;EAAkB;EAAoB;AJk6O/8yB;;AIl6O6/yB;EAAmB;AJs6OhhzB;;AIt6OqkzB;EAAoB;EAAkB;EAAkB;EAAoB;EAAqD;AJ86OtszB;;AI96OovzB;EAAY;EAAqC;EAA+C;EAAmD;EAA8D;AJs7Or8zB;;AIt7Oi+zB;EAAiB;EAA4C;EAAgD;EAA2D;AJ67Ozo0B;;AI77Owq0B;EAAoB;EAA+C;EAAmD;EAA8D;AJo8O510B;;AIp8Ow30B;EAAiB;EAA4C;EAAgD;EAA2D;AJ28Ohi1B;;AI38O4j1B;EAAoB;EAA+C;EAAmD;EAA8D;AJk9Ohv1B;;AIl9O4w1B;EAAmB;EAA8C;EAAkD;EAA6D;AJy9O571B;;AIz9Ow91B;EAAoB;EAA+C;EAAmD;EAA8D;AJg+O5o2B;;AIh+Owq2B;EAAiC;EAA6B;AJq+Otu2B;;AIr+Oow2B;EAA+B;EAAgC;AJ0+On02B;;AI1+Oo22B;EAA0B;EAAkB;AJ++Oh52B;;AI/+Ou82B;EAA8B;EAA8B;AJo/Ong3B;;AIp/Owj3B;EAA2B;AJw/Onl3B;;AIx/O6m3B;EAAwB;EAA0E;EAAkG;AJ8/Ojz3B;;AI9/Oo53B;EAAgC;EAAsB;AJmgP183B;;AIngPig4B;EAAwB;EAA0E;EAAkG;AJygPrs4B;;AIzgPwy4B;EAA2B;EAA8B;AJ8gPj24B;;AI9gPo34B;EAAqB;EAA2G;AJmhPp/4B;;AInhPul5B;EAAwC;AJuhP/n5B;;AIvhPwt5B;EAAmB;EAA2G;AJ4hPt15B;;AI5hP+75B;EAAqB;EAA2G;EAAyG;AJkiPxq6B;;AIliPiw6B;EAA8B;EAAoB;AJuiPnz6B;;AIviP226B;EAA4B;EAAoB;AJ4iP356B;;AI5iPm96B;EAA8B;AJgjPj/6B;;AIhjPug7B;EAA0B;EAA0E;EAAkG;AJsjP7s7B;;AItjPgz7B;EAAuC;EAAkB;AJ2jPz27B;;AI3jPg67B;EAA2D;EAAsB;AJgkPj/7B;;AIhkPqi8B;EAA6B;EAAsB;AJqkPxl8B;;AIrkP4o8B;EAAyB;EAAkB;AJ0kPvr8B;;AI1kP2u8B;EAAyB;EAAkB;AJ+kPtx8B;;AI/kP008B;EAAyB;EAAkB;AJolPr38B;;AIplPy68B;EAAyB;EAAkB;AJylPp98B;;AIzlP2g9B;EAAwB;EAAoB;AJ8lPvj9B;;AI9lPqm9B;EAA2B;EAAoB;AJmmPpp9B;;AInmPks9B;EAA2B;EAAoB;AJwmPjv9B;;AIxmP6x9B;EAAsC;EAAkB;AJ6mPr19B;;AI7mPy49B;EAAwC;EAAoB;AJknPr89B;;AIlnP0/9B;EAAmD;EAAkB;AJunP/j+B;;AIvnPsn+B;EAAyB;IAAY;EJ4nPzp+B;EI5nPsq+B;IAAY;EJ+nPlr+B;EI/nP4r+B;IAAiB;EJkoP7s+B;EIloP2v+B;IAAiB;EJqoP5w+B;AACF;AItoP6z+B;EAAyB;IAAW;IAAiB;EJ2oPh3+B;EI3oPk4+B;IAAW;IAAmB;EJ+oPh6+B;EI/oPg7+B;IAAW;EJkpP37+B;EIlpPy8+B;IAAY;EJqpPr9+B;EIrpPk++B;IAAU;EJwpP5++B;EIxpPy/+B;IAAiB;EJ2pP1g/B;EI3pPwj/B;IAAiB;EJ8pPzk/B;EI9pPun/B;IAAc;EJiqPro/B;EIjqPwp/B;IAAc;EJoqPtq/B;EIpqP4r/B;IAAW;IAAkB;EJwqPzt/B;EIxqP4u/B;IAAiB;EJ2qP7v/B;EI3qP+w/B;IAAc;IAAkB;EJ+qP/y/B;EI/qP6z/B;IAAc;IAAiB;EJmrP51/B;AACF;AIprPg3/B;EAA0B;IAAU;EJwrPl5/B;EIxrP+5/B;IAAU;EJ2rPz6/B;EI3rPy7/B;IAAiB;EJ8rP18/B;EI9rPw//B;IAAiB;EJisPzggC;EIjsPujgC;IAAc;EJosPrkgC;EIpsPwlgC;IAAe;EJusPvmgC;AACF;AIxsP0ngC;EAA0B;IAAU;EJ4sP5pgC;EI5sPwqgC;IAAW;IAAkB;EJgtPrsgC;EIhtPwtgC;IAAc;IAAiB;EJotPvvgC;EIptPqwgC;IAAc;IAAmB;EJwtPtygC;AACF;AArtPA;AKiEE;ECmQE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;APqqPJ;;AK1qPE;EEPI;ECZF;EDwBA;EAZE;ECZF;EDwBA;EE8QA,iBA3RU;EA4RV;EAQA,iCAnSW;EJ6BT;EACA;EACA;EACA;EACA;ALiqPN;;AS7+OE;EFrNI;ECZF;EDwBA;AP4rPJ;;AU1rPM;EACE;EHfF;ECZF;EDwBA;EEmNI;EC9MA;AVgsPR;;AS7+OE;EFpOI;ECZF;EDwBA;AP2sPJ;;AUzsPM;EACE;EHfF;ECZF;EDwBA;EEkOI;EC7NA;AV+sPR;;AS7+OE;EFnPI;ECZF;EDwBA;AP0tPJ;;AUxtPM;EACE;EHfF;ECZF;EDwBA;EEmPI;EC9OA;AV8tPR;;AS3+OE;EFpQI;ECZF;EDwBA;APyuPJ;;AUvuPM;EACE;EHfF;ECZF;EDwBA;EEoQI;EC/PA;AV6uPR;;AS5rPE;EFtDE;APsvPJ;;AS1sPE;EFxDI;ECZF;EDwBA;AP4vPJ;;AS5rPE;EFhEE;APgwPJ;;AW9sPE;;;EJlDE;APswPJ;;ASvqPE;;EAGI,wCA9HU;ATuyPhB;;ASrqPE;EAEI,qCApIU;AT2yPhB;;AS/pPE;;EAGI,wBA9IS;EA+IT;ATiqPN;;AS7pPE;EAEI,qBArJS;EAsJT;AT+pPN;;AS3pPE;EAEI;AT6pPN;;ASrpPE;EFzIE;APkyPJ;;AS/oPE;EFnJE;APsyPJ;;ASroPE;;;EFjKE;AP4yPJ;;ASpgPE;EAEI,YAkHK;ATo5OX;;ASlgPE;EAEI,gBA4GK;ATw5OX;;ASthPE;EAEI,YAmIuB;ATq5O7B;;AS9+OE;;EAGI;ATg/ON;;ASl9OE;;ED9XE;EDmBA;ECnBA;EDmBA;APq0PJ;;AUn0PM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVy0PR;;AKxwPE;EAGI;EACA;EACA;ALywPN;;AKrwPE;EAEI;EACA;EACA;EACA;EACA;;;;;IAAA;EAMA;ALuwPN;;AY54PE;ENoSE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EKtCE;EACA;EACA;EACA;AZm6PN;;AU93PM;EACE;EFtBJ;EIZI;EFoCA;AVk4PR;;AYj6PE;EAEI;AZm6PN;;AUz4PM;EACE;EFtBJ;EICI;EFuBA;AV64PR;;AY/5PE;EAYE;AZu5PJ;;Aa37PE;EP+RE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EMjCE;EACA;EACA;EACA;ELWF;EKRE;Abi9PN;;AUp7PM;EACE;EFtBJ;EKJI;EH4BA;AVw7PR;;Aa/8PE;EDiBE;AZk8PJ;;Aa/8PE;EAEI;Abi9PN;;AUn8PM;EACE;EFtBJ;EKaI;EHWA;AVu8PR;;Aa78PE;ECsEE,WAnBK;EAoBL,YApBK;EAqBL;EDhEE;EL1BF;EDmBA;ECnBA;EDmBA;EMqBE;EAUA;Ab07PN;;Ac/4PE;EAEI;Adi5PN;;Ac54PI;EAUI;EACA,gBA1CC;EA2CD,eA3CC;Adi7PT;;Aen9PI;EDiEA;IEzFA;IACA;IACA;IACA;IACA;IACA;IRhBA;IQkBA;IRlBA;IQoBA;IACA,YA3BwB;IA4BxB,WAtB0B;EhBsgQ5B;AACF;Aep+PI;EDiEA;IE3EE;EhBk/PJ;AACF;Aez+PI;ECPA;IACE;IACA;IACA,kBAhEgB;IAiEhB;IACA;IACA;IRlCF;IQoCE;IRpCF;IQsCE;IACA,wBA/BgB;IAgChB,uBAhCgB;EhBmhQpB;AACF;Aez/PI;ECPA;IAeI;EhBq/PN;AACF;Acn6PI;EAEI,WA3DC;EA4DD,YA5DC;EG3BL,eAHsB;EAItB,kBAJsB;EAcpB,iBANwB;EAOxB,gBAPwB;AjB0/P9B;;Ac35PM;EAEI,gBA3ED;EA4EC,eA5ED;Ady+PT;;Acv5PE;EGhJE;EACA;EACA,YH4DK;ENrEL;ESeE;EACA,WHqDG;EGpDH;AjBuiQN;;AUniQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVyiQR;;AahiQI;ELjCA;EDmBA;ECnBA;EDmBA;APqjQJ;;AUnjQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVyjQR;;AatiQI;EAEI;AbwiQR;;AahiQI;EAII;AbgiQR;;Aa3hQE;EAEI;EACA;EACA;Ab6hQN;;AazhQE;EAEI;Ab2hQN;;AavhQE;EEpEE;EACA;EACA;EACA;EACA;EACA;Af+lQJ;;AavhQE;EAEI;EACA;EACA;AbyhQN;;AS9kQE;EFjBE;APmmQJ;;AkBvhQI;EXxFE;ECZF;EDwBA;APymQJ;;AkBppPE;EXjeI;ECZF;EDwBA;AP+mQJ;;AkB1pPE;EA9QI;EXnNA;ECZF;EDwBA;APsnQJ;;AkBr5PM;EAEI;AlBu5PV;;AkBl5PQ;EAEI,yBAhRO;EX0Bb;ECZF;EDwBA;APioQJ;;AkB54PI;EXrPA;APqoQJ;;AS1mQE;EF3BE;APyoQJ;;AkB7jQI;EXxFE;ECZF;EDwBA;AP+oQJ;;AkB1rPE;EXjeI;ECZF;EDwBA;APqpQJ;;AkBhsPE;EA9QI;EXnNA;ECZF;EDwBA;AP4pQJ;;AkB37PM;EAEI;AlB67PV;;AkBx7PQ;EAEI,yBAhRO;EX0Bb;ECZF;EDwBA;APuqQJ;;AkBl7PI;EXrPA;AP2qQJ;;AmBxtQE;EAEI;EACA;EACA;AnB0tQN;;AmBvtQI;EAEI;AnBytQR;;AmBptQE;EZmBI;ECZF;EDwBA;EY3BE;EAGA;EACA;EACA;EACA;AnBqtQN;;AoB7vQE;EduTE;EACA;ECvQE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EAZE;ECZF;EDwBA;EazDE;EACA;EACA;ApBoxQN;;AoBhxQE;EZgCE;EDmBA;ECnBA;EDmBA;Ea/CE;EACA;EACA;EACA;ApBoxQN;;AUtuQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AV4uQR;;AoBzxQE;EAEI;EACA;ApB2xQN;;AoBvxQE;EZcE;EDmBA;ECnBA;EDmBA;AP6vQJ;;AU3vQM;EACE;EFtBJ;EM8NI;EJtMA;AV+vQR;;AUlwQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVwwQR;;AoBvyQE;EZOE;EDmBA;ECnBA;EDmBA;EalBE;ApBuyQN;;AUnxQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AVyxQR;;AoB5yQE;EZLE;EDmBA;ECnBA;EDmBA;EaVE;EACA;ApBgzQN;;AUryQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AV2yQR;;AoBrzQE;EZdE;EDmBA;ECnBA;EDmBA;EaDE;ApByzQN;;AUtzQM;EACE;EFtBJ;EDmBA;ECnBA;EDmBA;EGKI;AV4zQR;;AoB9zQE;EbfI;ECZF;EDwBA;EaQE;ApBg0QN;;AqBxtPE;EAEI;EACA,eD/mB+C;ApBy0QrD;;AqB1pOE;EAqBI,YZnsCmC;AT40QzC;;AsBxuQE;EAcM;AtB8tQR;;AWjmQE;EAEI;AXmmQN;;AsBhvQE;;EAcM;AtBuuQR;;AW1lQI;;EAEI;AX6lQR;;AsBnuQE;EAEI;AtBquQN;;AsBzyQI;EACE;IdlFF;IcoFI;EtB4yQN;EsBxyQI;IACE;IdzFJ;Ic2FI;EtB0yQN;EsBtyQI;IACE;IdhGJ;IcuGI;EtBmyQN;EsB/xQI;Id3GF;Ic6GI;EtBiyQN;AACF;AqBnkPE;EAEI,WE52BY;EF62BZ,YE72BY;AvBi7QlB;;AW5mQE;EAEI,4BUowCA;ArB02NN;;AwBh3PE;EAEI,YfjhBmC;ATm4QzC;;AyB5zQI;;;ECxFE;ECZF;EDwBA;A1Bg5QJ;;AyB37PE;;;ECjeI;ECZF;EDwBA;A1Bw5QJ;;AyBn8PE;;;EA9QI;ECnNA;ECZF;EDwBA;A1Bi6QJ;;AyBhsQM;;EAEI;AzBmsQV;;AyB9rQQ;;EAEI,yBAhRO;EC0Bb;ECZF;EDwBA;A1B86QJ;;AyBzrQI;;ECrPA;A1Bm7QJ;;AyBv2QI;;;;ECxFE;ECZF;EDwBA;A1B47QJ;;A4BvwPE;;EFjsBI;ECZF;EDwBA;EAAA;A1Bo8QJ;;A4B/wPE;;;;;;EFjsBI;ECZF;EDwBA;EAZE;ECZF;EDwBA;A1Bk9QJ;;A4BtvPE;EACE;IFzuBE;ICZF;IDwBA;IAAA;E1B09QF;E4BxvPE;IF9uBE;ICZF;IDwBA;IAZE;ICZF;IDwBA;E1Bk+QF;AACF;A4B3vPE;EACE;IFrvBE;ICZF;IDwBA;IAZE;ICZF;IDwBA;E1B4+QF;E4B7vPE;IF3vBE;ICZF;IDwBA;IAAA;E1Bk/QF;AACF;A4BjkQQ;;;EAEI;A5BokQZ;;A4B7jQQ;;;EAEI;A5BikQZ;;AApkRA,sB","sources":["webpack://webpackNumbers/./src/assets/styles/views/wireframe/main.scss","webpack://webpackNumbers/./src/assets/styles/views/admin/register/main.scss","webpack://webpackNumbers/./src/assets/styles/variables/variables.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/wireframe.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/admin_user_form.scss","webpack://webpackNumbers/./src/assets/styles/views/tailwind-output/admin_user_main.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/typography/_typography.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/theme/_css.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/theme/_gss.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/rtl/_rtl.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/notched-outline/_mixins.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-cell.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-header-cell.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/icon-button/_icon-button-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/dom/_dom.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/focus-ring/_focus-ring.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/touch-target/_touch-target.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/ripple/_ripple-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-progress-indicator.scss","webpack://webpackNumbers/./node_modules/@material/data-table/_data-table-pagination.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/select/_select-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/floating-label/_mixins.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/select/_select-icon-theme.scss","webpack://webpackNumbers/./node_modules/@material/data-table/node_modules/@material/list/_evolution-mixins.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/node_modules/@material/ripple/_ripple-theme.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/node_modules/@material/theme/_css.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/node_modules/@material/theme/_gss.scss","webpack://webpackNumbers/./node_modules/@material/checkbox/_checkbox-theme.scss"],"sourcesContent":["body {\r\n    display: block;\r\n    margin: 0px !important;\r\n}\r\n\r\n\r\n/* START :: VARIABLES */\r\n\r\n@import '../../variables/variables.scss';\r\n\r\n/* END :: VARIABLES */\r\n\r\n\r\n/* START :: TAILWIND CSS */\r\n\r\n@import '../tailwind-output/wireframe.scss';\r\n\r\n/* END :: TAILWIND CSS */","@import '../../wireframe/main.scss';\r\n@import '../../tailwind-output/admin_user_form.scss';\r\n@import '../../tailwind-output/admin_user_main.scss';\r\n\r\n/* START :: TABLE CSS */\r\n\r\n@import \"@material/data-table/mdc-data-table\";\r\n\r\n/* END :: TABLE CSS */",":root {\r\n    --theme-default-color: rgba(249, 120, 23);\r\n    --theme-default-color-disabled: rgb(223, 145, 85);\r\n    --theme-gray-color: rgb(175, 175, 175);\r\n    --theme-gray-color-disabled: rgb(216, 215, 215);\r\n    --theme-success-color: rgb(19, 133, 57);\r\n    --theme-success-color-disabled: rgb(107, 190, 135);\r\n    --theme-danger-color: rgb(185, 26, 26);\r\n    --theme-danger-color-disabled: rgb(182, 118, 118);\r\n    --theme-warning-color: rgb(202, 128, 17);\r\n    --theme-warning-color-disabled: rgb(175, 150, 111);\r\n    --theme-info-color: rgb(2, 137, 170);\r\n    --theme-info-color-disabled: rgb(108, 163, 177);\r\n    --theme-primary-color: rgb(11, 59, 216);\r\n    --theme-primary-color-disabled: rgb(76, 93, 146);\r\n}","/*! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\"\"}html{-webkit-text-size-adjust:100%;font-feature-settings:normal;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}@media (min-width:2811px){.container{max-width:2811px}}.visible{visibility:visible}.invisible{visibility:hidden}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-10{top:2.5rem}.left-0{left:0}.right-0{right:0}.right-4{right:1rem}.bottom-16{bottom:4rem}.top-0{top:0}.top-4{top:1rem}.left-20{left:5rem}.top-28{top:7rem}.top-12{top:3rem}.-left-14{left:-3.5rem}.-left-7{left:-1.75rem}.bottom-9{bottom:2.25rem}.left-\\[-7rem\\]{left:-7rem}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-0{z-index:0}.m-1{margin:.25rem}.m-0{margin:0}.my-24{margin-bottom:6rem;margin-top:6rem}.mx-auto{margin-left:auto;margin-right:auto}.mx-12{margin-left:3rem;margin-right:3rem}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-0{margin-bottom:0;margin-top:0}.my-1{margin-bottom:.25rem;margin-top:.25rem}.mx-4{margin-left:1rem;margin-right:1rem}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-1{margin-left:.25rem;margin-right:.25rem}.\\!mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.\\!my-1{margin-bottom:.25rem!important;margin-top:.25rem!important}.mb-32{margin-bottom:8rem}.mt-12{margin-top:3rem}.mb-12{margin-bottom:3rem}.mr-2{margin-right:.5rem}.mt-1{margin-top:.25rem}.mb-2{margin-bottom:.5rem}.ml-2{margin-left:.5rem}.mb-0{margin-bottom:0}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mt-2{margin-top:.5rem}.mb-3{margin-bottom:.75rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-0{margin-top:0}.mt-3{margin-top:.75rem}.mr-4{margin-right:1rem}.ml-0{margin-left:0}.mr-0{margin-right:0}.ml-6{margin-left:1.5rem}.ml-64{margin-left:16rem}.mr-72{margin-right:18rem}.-mt-1{margin-top:-.25rem}.ml-4{margin-left:1rem}.-mt-2{margin-top:-.5rem}.block{display:block}.\\!block{display:block!important}.inline-block{display:inline-block}.flex{display:flex}.\\!flex{display:flex!important}.inline-flex{display:inline-flex}.table{display:table}.table-cell{display:table-cell}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.grid{display:grid}.contents{display:contents}.hidden{display:none}.h-52{height:13rem}.h-full{height:100%}.h-8{height:2rem}.h-32{height:8rem}.h-16{height:4rem}.h-96{height:24rem}.h-44{height:11rem}.h-1{height:.25rem}.h-48{height:12rem}.h-40{height:10rem}.h-36{height:9rem}.h-14{height:3.5rem}.h-11{height:2.75rem}.h-2{height:.5rem}.h-24{height:6rem}.h-fit{height:-moz-fit-content;height:fit-content}.h-\\[400px\\]{height:400px}.max-h-48{max-height:12rem}.w-full{width:100%}.w-8{width:2rem}.w-32{width:8rem}.w-16{width:4rem}.w-max{width:-moz-max-content;width:max-content}.w-6{width:1.5rem}.w-1{width:.25rem}.w-2{width:.5rem}.w-auto{width:auto}.w-48{width:12rem}.w-40{width:10rem}.w-36{width:9rem}.w-64{width:16rem}.w-72{width:18rem}.w-80{width:20rem}.w-\\[fit-content\\]{width:-moz-fit-content;width:fit-content}.w-\\[19rem\\]{width:19rem}.\\!w-28{width:7rem!important}.\\!max-w-full{max-width:100%!important}.flex-1{flex:1 1 0%}.flex-shrink{flex-shrink:1}.flex-grow{flex-grow:1}.rotate-45{--tw-rotate:45deg}.rotate-45,.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.resize{resize:both}.list-disc{list-style-type:disc}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-flow-row{grid-auto-flow:row}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.content-center{align-content:center}.content-between{align-content:space-between}.content-evenly{align-content:space-evenly}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.\\!justify-between{justify-content:space-between!important}.justify-evenly{justify-content:space-evenly}.gap-12{gap:3rem}.gap-4{gap:1rem}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.25rem*var(--tw-space-y-reverse));margin-top:calc(.25rem*(1 - var(--tw-space-y-reverse)))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)))}.divide-gray-200>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(229 231 235/var(--tw-divide-opacity))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-x-scroll{overflow-x:scroll}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-md{border-radius:.375rem}.rounded{border-radius:.25rem}.rounded-lg{border-radius:.5rem}.rounded-full{border-radius:9999px}.rounded-none{border-radius:0}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-3xl{border-radius:1.5rem}.rounded-sm{border-radius:.125rem}.rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.rounded-b-md{border-bottom-left-radius:.375rem;border-bottom-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-0{border-width:0}.border-b-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-r-2{border-right-width:2px}.border-l-4{border-left-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity))}.border-yellow-500{--tw-border-opacity:1;border-color:rgb(234 179 8/var(--tw-border-opacity))}.border-akwaaba-orange-light{--tw-border-opacity:1;border-color:rgb(255 161 91/var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgb(156 163 175/var(--tw-border-opacity))}.border-red-600{--tw-border-opacity:1;border-color:rgb(220 38 38/var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-akwaaba-orange-dark{--tw-border-opacity:1;border-color:rgb(209 89 0/var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.bg-green-600{--tw-bg-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-900{--tw-bg-opacity:1;background-color:rgb(20 83 45/var(--tw-bg-opacity))}.bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.bg-blue-100{--tw-bg-opacity:1;background-color:rgb(219 234 254/var(--tw-bg-opacity))}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-akwaaba-orange-default{--tw-gradient-from:#f97817;--tw-gradient-to:rgba(249,120,23,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-gray-50{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-akwaaba-orange-light{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.via-white{--tw-gradient-to:hsla(0,0%,100%,0);--tw-gradient-stops:var(--tw-gradient-from),#fff,var(--tw-gradient-to)}.via-gray-100{--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to)}.to-akwaaba-orange-dark{--tw-gradient-to:#d15900}.bg-contain{background-size:contain}.fill-current{fill:currentColor}.object-contain{-o-object-fit:contain;object-fit:contain}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-2{padding:.5rem}.p-0{padding:0}.p-3{padding:.75rem}.p-1{padding:.25rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-1\\.5{padding:.375rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-12{padding-bottom:3rem;padding-top:3rem}.px-7{padding-left:1.75rem;padding-right:1.75rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.\\!py-1{padding-bottom:.25rem!important;padding-top:.25rem!important}.\\!px-0{padding-left:0!important;padding-right:0!important}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-1{padding-left:.25rem;padding-right:.25rem}.\\!py-4{padding-bottom:1rem!important;padding-top:1rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-4{padding-bottom:1rem;padding-top:1rem}.px-0{padding-left:0;padding-right:0}.py-1{padding-bottom:.25rem;padding-top:.25rem}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-0{padding-bottom:0;padding-top:0}.pr-2{padding-right:.5rem}.pr-4{padding-right:1rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pb-2{padding-bottom:.5rem}.pb-5{padding-bottom:1.25rem}.pt-1{padding-top:.25rem}.pb-4{padding-bottom:1rem}.pl-0{padding-left:0}.pl-3{padding-left:.75rem}.text-left{text-align:left}.text-center{text-align:center}.\\!text-center{text-align:center!important}.text-right{text-align:right}.\\!text-right{text-align:right!important}.align-middle{vertical-align:middle}.font-serif{font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif}.text-sm{font-size:.875rem;line-height:1.25rem}.text-5xl{font-size:3rem;line-height:1}.text-xl{font-size:1.25rem}.text-lg,.text-xl{line-height:1.75rem}.text-lg{font-size:1.125rem}.text-base{font-size:1rem;line-height:1.5rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xs{font-size:.75rem;line-height:1rem}.font-medium{font-weight:500}.font-bold{font-weight:700}.font-semibold{font-weight:600}.font-normal{font-weight:400}.font-light{font-weight:300}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-snug{line-height:1.375}.leading-tight{line-height:1.25}.tracking-tight{letter-spacing:-.025em}.tracking-wide{letter-spacing:.025em}.\\!text-gray-800{--tw-text-opacity:1!important;color:rgb(31 41 55/var(--tw-text-opacity))!important}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.\\!text-red-400{--tw-text-opacity:1!important;color:rgb(248 113 113/var(--tw-text-opacity))!important}.text-yellow-600{--tw-text-opacity:1;color:rgb(202 138 4/var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgb(220 38 38/var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity:1;color:rgb(79 70 229/var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgb(21 128 61/var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgb(185 28 28/var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.text-green-500{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55/var(--tw-text-opacity))}.text-akwaaba-orange-dark{--tw-text-opacity:1;color:rgb(209 89 0/var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity:1;color:rgb(250 204 21/var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity:1;color:rgb(234 179 8/var(--tw-text-opacity))}.text-red-500{--tw-text-opacity:1;color:rgb(239 68 68/var(--tw-text-opacity))}.text-green-600{--tw-text-opacity:1;color:rgb(22 163 74/var(--tw-text-opacity))}.text-akwaaba-orange-light{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity:1;color:rgb(59 130 246/var(--tw-text-opacity))}.text-purple-600{--tw-text-opacity:1;color:rgb(147 51 234/var(--tw-text-opacity))}.underline{text-decoration-line:underline}.no-underline{text-decoration-line:none}.opacity-0{opacity:0}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color)}.shadow,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color)}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color)}.shadow-inner,.shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow:inset 0 2px 4px 0 rgba(0,0,0,.05);--tw-shadow-colored:inset 0 2px 4px 0 var(--tw-shadow-color)}.shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-0{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-akwaaba-orange-light{--tw-ring-opacity:1;--tw-ring-color:rgb(255 161 91/var(--tw-ring-opacity))}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-150,.transition-opacity{transition-duration:.15s}.duration-300{transition-duration:.3s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}body{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to);--tw-gradient-to:#f9fafb;background-image:linear-gradient(to right,var(--tw-gradient-stops));overflow-y:scroll}[scrollbar=app-scrollbar]::-webkit-scrollbar{cursor:pointer;width:4px}[scrollbar=app-scrollbar]::-webkit-scrollbar-track{background-color:rgba(229,231,235,var(--bg-opacity));cursor:pointer}[scrollbar=app-scrollbar]::-webkit-scrollbar-thumb{background-color:#a0aec0;cursor:pointer}mwc-dialog{z-index:50!important}.main-app-content,.main-content{margin-left:0!important;margin-right:0!important;padding:1rem!important}datatables-new>[mdc-data-table=data-table]{width:100%!important}dt-pagination .mdc-button,dt-pagination .mdc-icon-button{height:30px!important;padding:0!important;width:30px!important}.main-app-content{height:auto;overflow-y:auto}.main-app-content>.main-container,.main-app-content>[display-app-content=here]>.main-container,.special-card{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-radius:1rem;margin-bottom:.75rem;padding:1.5rem}.main-app-content>.main-container:last-child,.main-app-content>[display-app-content=here]>.main-container:last-child{margin-bottom:13rem}@media (min-width:768px){.main-app-content,.main-content{margin-left:16rem!important}.main-app-content>[mdc-data-table=data-table],.main-content>[mdc-data-table=data-table]{display:block!important;margin-left:16rem!important}.main-app-content{height:100vh;overflow-y:scroll}}@media (min-width:1280px){.main-app-content,.main-content{margin-left:16rem!important;margin-right:18rem!important}}.gradient.gray{--tw-gradient-from:#d1d5db;--tw-gradient-to:rgba(209,213,219,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#4b5563;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.gray,.gradient.red{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.red{--tw-gradient-from:#fca5a5;--tw-gradient-to:hsla(0,94%,82%,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#dc2626;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.blue{--tw-gradient-from:#93c5fd;--tw-gradient-to:rgba(147,197,253,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#2563eb;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.blue,.gradient.green{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.green{--tw-gradient-from:#86efac;--tw-gradient-to:rgba(134,239,172,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#16a34a;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.yellow{--tw-gradient-from:#fde047;--tw-gradient-to:rgba(253,224,71,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#ca8a04;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.akwaaba,.gradient.yellow{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.akwaaba{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.app-container-,.app-container--2xl,.app-container--fluid,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{margin-left:auto;margin-right:auto;padding-left:.75rem;padding-right:.75rem;width:100%}.app-container--row{display:flex;flex-wrap:wrap;margin-left:-.75rem;margin-right:-.75rem;margin-top:-1.5rem;padding:0 1.5rem}.app-container--row>*{box-sizing:border-box;flex-shrink:0;margin-top:1.5rem;max-width:100%;padding-left:.75rem;padding-right:.75rem;width:100%}@media (min-width:640px){.app-container-,.app-container--sm{max-width:640px}.app-container--col-sm{flex:1 0 0%}.app-container--col-sm-auto{flex:0 0 auto;width:auto}.app-container--col-sm-1{flex:0 0 auto;width:8.333333%}.app-container--col-sm-2{flex:0 0 auto;width:16.666667%}.app-container--col-sm-3{flex:0 0 auto;width:25%}.app-container--col-sm-4{flex:0 0 auto;width:33.333333%}.app-container--col-sm-5{flex:0 0 auto;width:41.666667%}.app-container--col-sm-6{flex:0 0 auto;width:50%}.app-container--col-sm-7{flex:0 0 auto;width:58.333333%}.app-container--col-sm-8{flex:0 0 auto;width:66.666667%}.app-container--col-sm-9{flex:0 0 auto;width:75%}.app-container--col-sm-10{flex:0 0 auto;width:83.333333%}.app-container--col-sm-11{flex:0 0 auto;width:91.666667%}.app-container--col-sm-12{flex:0 0 auto;width:100%}}@media (min-width:768px){.app-container-,.app-container--md,.app-container--sm{max-width:768px}.app-container--col-md{flex:1 0 0%}.app-container--col-md-auto{flex:0 0 auto;width:auto}.app-container--col-md-1{flex:0 0 auto;width:8.333333%}.app-container--col-md-2{flex:0 0 auto;width:16.666667%}.app-container--col-md-3{flex:0 0 auto;width:25%}.app-container--col-md-4{flex:0 0 auto;width:33.333333%}.app-container--col-md-5{flex:0 0 auto;width:41.666667%}.app-container--col-md-6{flex:0 0 auto;width:50%}.app-container--col-md-7{flex:0 0 auto;width:58.333333%}.app-container--col-md-8{flex:0 0 auto;width:66.666667%}.app-container--col-md-9{flex:0 0 auto;width:75%}.app-container--col-md-10{flex:0 0 auto;width:83.333333%}.app-container--col-md-11{flex:0 0 auto;width:91.666667%}.app-container--col-md-12{flex:0 0 auto;width:100%}}@media (min-width:1024px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm{max-width:1024px}.app-container--col-lg{flex:1 0 0%}.app-container--col-lg-auto{flex:0 0 auto;width:auto}.app-container--col-lg-1{flex:0 0 auto;width:8.333333%}.app-container--col-lg-2{flex:0 0 auto;width:16.666667%}.app-container--col-lg-3{flex:0 0 auto;width:25%}.app-container--col-lg-4{flex:0 0 auto;width:33.333333%}.app-container--col-lg-5{flex:0 0 auto;width:41.666667%}.app-container--col-lg-6{flex:0 0 auto;width:50%}.app-container--col-lg-7{flex:0 0 auto;width:58.333333%}.app-container--col-lg-8{flex:0 0 auto;width:66.666667%}.app-container--col-lg-9{flex:0 0 auto;width:75%}.app-container--col-lg-10{flex:0 0 auto;width:83.333333%}.app-container--col-lg-11{flex:0 0 auto;width:91.666667%}.app-container--col-lg-12{flex:0 0 auto;width:100%}}@media (min-width:1280px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1280px}.app-container--col-xl{flex:1 0 0%}.app-container--col-xl-auto{flex:0 0 auto;width:auto}.app-container--col-xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-xl-3{flex:0 0 auto;width:25%}.app-container--col-xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-xl-6{flex:0 0 auto;width:50%}.app-container--col-xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-xl-9{flex:0 0 auto;width:75%}.app-container--col-xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-xl-12{flex:0 0 auto;width:100%}}@media (min-width:1536px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1536px}.app-container--col-2xl{flex:1 0 0%}.app-container--col-2xl-auto{flex:0 0 auto;width:auto}.app-container--col-2xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-2xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-2xl-3{flex:0 0 auto;width:25%}.app-container--col-2xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-2xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-2xl-6{flex:0 0 auto;width:50%}.app-container--col-2xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-2xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-2xl-9{flex:0 0 auto;width:75%}.app-container--col-2xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-2xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-2xl-12{flex:0 0 auto;width:100%}}@media (min-width:2811px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{max-width:2811px}.app-container--col-mega{flex:1 0 0%}.app-container--col-mega-auto{flex:0 0 auto;width:auto}.app-container--col-mega-1{flex:0 0 auto;width:8.333333%}.app-container--col-mega-2{flex:0 0 auto;width:16.666667%}.app-container--col-mega-3{flex:0 0 auto;width:25%}.app-container--col-mega-4{flex:0 0 auto;width:33.333333%}.app-container--col-mega-5{flex:0 0 auto;width:41.666667%}.app-container--col-mega-6{flex:0 0 auto;width:50%}.app-container--col-mega-7{flex:0 0 auto;width:58.333333%}.app-container--col-mega-8{flex:0 0 auto;width:66.666667%}.app-container--col-mega-9{flex:0 0 auto;width:75%}.app-container--col-mega-10{flex:0 0 auto;width:83.333333%}.app-container--col-mega-11{flex:0 0 auto;width:91.666667%}.app-container--col-mega-12{flex:0 0 auto;width:100%}}mwc-circular-progress{--mdc-circular-progress-track-color:#fff;--mdc-theme-primary:var(--theme-default-color)}mwc-circular-progress.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-circular-progress-track-color:#111827}mwc-circular-progress.success{--mdc-theme-primary:var(--theme-success-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.info{--mdc-theme-primary:var(--theme-info-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-circular-progress-track-color:#fff}div[pageLoadingIndicator=on]>img{height:3rem!important;margin-top:50vh;width:3rem!important}div[pageLoadingIndicator=on],div[pageLoadingIndicator=on]>img{display:flex!important;justify-content:center!important}div[pageLoadingIndicator=off]{display:none!important}mwc-icon-button{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);align-content:center;align-items:center;border-radius:9999px;display:inline-block;justify-content:center}mwc-icon-button,mwc-icon-button:hover{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}mwc-icon-button:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}mwc-icon-button.inactive{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));color:rgb(107 114 128/var(--tw-text-opacity))}mwc-icon-button.active{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;fill:currentColor;--tw-text-opacity:1;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);color:rgb(255 255 255/var(--tw-text-opacity))}.first\\:rounded-t-lg:first-child{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.last\\:rounded-b-lg:last-child{border-bottom-left-radius:.5rem;border-bottom-right-radius:.5rem}.hover\\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.hover\\:\\!text-gray-900:hover{--tw-text-opacity:1!important;color:rgb(17 24 39/var(--tw-text-opacity))!important}.hover\\:no-underline:hover{text-decoration-line:none}.hover\\:shadow-lg:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:border-indigo-300:focus{--tw-border-opacity:1;border-color:rgb(165 180 252/var(--tw-border-opacity))}.focus\\:shadow-lg:focus{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-0:focus,.focus\\:ring:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-4:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring-indigo-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(199 210 254/var(--tw-ring-opacity))}.focus\\:ring-gray-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(229 231 235/var(--tw-ring-opacity))}.focus\\:ring-opacity-50:focus{--tw-ring-opacity:0.5}.active\\:shadow-lg:active{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.group:hover .group-hover\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:divide-gray-700>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(55 65 81/var(--tw-divide-opacity))}.dark .dark\\:border-gray-700{--tw-border-opacity:1;border-color:rgb(55 65 81/var(--tw-border-opacity))}.dark .dark\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity))}.dark .dark\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.dark .dark\\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.dark .dark\\:text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.dark .dark\\:hover\\:bg-gray-800:hover{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:focus\\:ring-gray-800:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(31 41 55/var(--tw-ring-opacity))}.dark .group:hover .dark\\:group-hover\\:bg-blue-300{--tw-bg-opacity:1;background-color:rgb(147 197 253/var(--tw-bg-opacity))}@media (min-width:640px){.sm\\:hidden{display:none}.sm\\:w-2\\/5{width:40%}.sm\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.sm\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:768px){.md\\:mx-12{margin-left:3rem;margin-right:3rem}.md\\:my-24{margin-bottom:6rem;margin-top:6rem}.md\\:block{display:block}.md\\:hidden{display:none}.md\\:h-96{height:24rem}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}.md\\:px-12{padding-left:3rem;padding-right:3rem}.md\\:text-center{text-align:center}.md\\:text-6xl{font-size:3.75rem;line-height:1}.md\\:text-2xl{font-size:1.5rem;line-height:2rem}}@media (min-width:1024px){.lg\\:mt-0{margin-top:0}.lg\\:mb-0{margin-bottom:0}.lg\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\\:flex-row{flex-direction:row}.lg\\:text-left{text-align:left}}@media (min-width:1280px){.xl\\:m-24{margin:6rem}.xl\\:px-32{padding-left:8rem;padding-right:8rem}.xl\\:text-7xl{font-size:4.5rem;line-height:1}.xl\\:text-3xl{font-size:1.875rem;line-height:2.25rem}}","/*! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\"\"}html{-webkit-text-size-adjust:100%;font-feature-settings:normal;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}@media (min-width:2811px){.container{max-width:2811px}}.visible{visibility:visible}.invisible{visibility:hidden}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-10{top:2.5rem}.left-0{left:0}.right-0{right:0}.right-4{right:1rem}.bottom-16{bottom:4rem}.top-0{top:0}.top-4{top:1rem}.left-20{left:5rem}.top-28{top:7rem}.top-12{top:3rem}.-left-14{left:-3.5rem}.-left-7{left:-1.75rem}.bottom-9{bottom:2.25rem}.left-\\[-7rem\\]{left:-7rem}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-0{z-index:0}.m-1{margin:.25rem}.m-0{margin:0}.my-24{margin-bottom:6rem;margin-top:6rem}.mx-auto{margin-left:auto;margin-right:auto}.mx-12{margin-left:3rem;margin-right:3rem}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-0{margin-bottom:0;margin-top:0}.my-1{margin-bottom:.25rem;margin-top:.25rem}.mx-4{margin-left:1rem;margin-right:1rem}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-1{margin-left:.25rem;margin-right:.25rem}.\\!mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.\\!my-1{margin-bottom:.25rem!important;margin-top:.25rem!important}.mb-32{margin-bottom:8rem}.mt-12{margin-top:3rem}.mb-12{margin-bottom:3rem}.mr-2{margin-right:.5rem}.mt-1{margin-top:.25rem}.mb-2{margin-bottom:.5rem}.ml-2{margin-left:.5rem}.mb-0{margin-bottom:0}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mt-2{margin-top:.5rem}.mb-3{margin-bottom:.75rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-0{margin-top:0}.mt-3{margin-top:.75rem}.mr-4{margin-right:1rem}.ml-0{margin-left:0}.mr-0{margin-right:0}.ml-6{margin-left:1.5rem}.ml-64{margin-left:16rem}.mr-72{margin-right:18rem}.-mt-1{margin-top:-.25rem}.ml-4{margin-left:1rem}.-mt-2{margin-top:-.5rem}.block{display:block}.\\!block{display:block!important}.inline-block{display:inline-block}.flex{display:flex}.\\!flex{display:flex!important}.inline-flex{display:inline-flex}.table{display:table}.table-cell{display:table-cell}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.grid{display:grid}.contents{display:contents}.hidden{display:none}.h-52{height:13rem}.h-full{height:100%}.h-8{height:2rem}.h-32{height:8rem}.h-16{height:4rem}.h-96{height:24rem}.h-44{height:11rem}.h-1{height:.25rem}.h-48{height:12rem}.h-40{height:10rem}.h-36{height:9rem}.h-14{height:3.5rem}.h-11{height:2.75rem}.h-2{height:.5rem}.h-24{height:6rem}.h-fit{height:-moz-fit-content;height:fit-content}.h-\\[400px\\]{height:400px}.max-h-48{max-height:12rem}.w-full{width:100%}.w-8{width:2rem}.w-32{width:8rem}.w-16{width:4rem}.w-max{width:-moz-max-content;width:max-content}.w-6{width:1.5rem}.w-1{width:.25rem}.w-2{width:.5rem}.w-auto{width:auto}.w-48{width:12rem}.w-40{width:10rem}.w-36{width:9rem}.w-64{width:16rem}.w-72{width:18rem}.w-80{width:20rem}.w-\\[fit-content\\]{width:-moz-fit-content;width:fit-content}.w-\\[19rem\\]{width:19rem}.\\!w-28{width:7rem!important}.\\!max-w-full{max-width:100%!important}.flex-1{flex:1 1 0%}.flex-shrink{flex-shrink:1}.flex-grow{flex-grow:1}.rotate-45{--tw-rotate:45deg}.rotate-45,.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.resize{resize:both}.list-disc{list-style-type:disc}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-flow-row{grid-auto-flow:row}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.content-center{align-content:center}.content-between{align-content:space-between}.content-evenly{align-content:space-evenly}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.\\!justify-between{justify-content:space-between!important}.justify-evenly{justify-content:space-evenly}.gap-12{gap:3rem}.gap-4{gap:1rem}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.25rem*var(--tw-space-y-reverse));margin-top:calc(.25rem*(1 - var(--tw-space-y-reverse)))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)))}.divide-gray-200>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(229 231 235/var(--tw-divide-opacity))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-x-scroll{overflow-x:scroll}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-md{border-radius:.375rem}.rounded{border-radius:.25rem}.rounded-lg{border-radius:.5rem}.rounded-full{border-radius:9999px}.rounded-none{border-radius:0}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-3xl{border-radius:1.5rem}.rounded-sm{border-radius:.125rem}.rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.rounded-b-md{border-bottom-left-radius:.375rem;border-bottom-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-0{border-width:0}.border-b-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-r-2{border-right-width:2px}.border-l-4{border-left-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity))}.border-yellow-500{--tw-border-opacity:1;border-color:rgb(234 179 8/var(--tw-border-opacity))}.border-akwaaba-orange-light{--tw-border-opacity:1;border-color:rgb(255 161 91/var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgb(156 163 175/var(--tw-border-opacity))}.border-red-600{--tw-border-opacity:1;border-color:rgb(220 38 38/var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-akwaaba-orange-dark{--tw-border-opacity:1;border-color:rgb(209 89 0/var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.bg-green-600{--tw-bg-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-900{--tw-bg-opacity:1;background-color:rgb(20 83 45/var(--tw-bg-opacity))}.bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.bg-blue-100{--tw-bg-opacity:1;background-color:rgb(219 234 254/var(--tw-bg-opacity))}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-akwaaba-orange-default{--tw-gradient-from:#f97817;--tw-gradient-to:rgba(249,120,23,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-gray-50{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-akwaaba-orange-light{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.via-white{--tw-gradient-to:hsla(0,0%,100%,0);--tw-gradient-stops:var(--tw-gradient-from),#fff,var(--tw-gradient-to)}.via-gray-100{--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to)}.to-akwaaba-orange-dark{--tw-gradient-to:#d15900}.bg-contain{background-size:contain}.fill-current{fill:currentColor}.object-contain{-o-object-fit:contain;object-fit:contain}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-2{padding:.5rem}.p-0{padding:0}.p-3{padding:.75rem}.p-1{padding:.25rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-1\\.5{padding:.375rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-12{padding-bottom:3rem;padding-top:3rem}.px-7{padding-left:1.75rem;padding-right:1.75rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.\\!py-1{padding-bottom:.25rem!important;padding-top:.25rem!important}.\\!px-0{padding-left:0!important;padding-right:0!important}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-1{padding-left:.25rem;padding-right:.25rem}.\\!py-4{padding-bottom:1rem!important;padding-top:1rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-4{padding-bottom:1rem;padding-top:1rem}.px-0{padding-left:0;padding-right:0}.py-1{padding-bottom:.25rem;padding-top:.25rem}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-0{padding-bottom:0;padding-top:0}.pr-2{padding-right:.5rem}.pr-4{padding-right:1rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pb-2{padding-bottom:.5rem}.pb-5{padding-bottom:1.25rem}.pt-1{padding-top:.25rem}.pb-4{padding-bottom:1rem}.pl-0{padding-left:0}.pl-3{padding-left:.75rem}.text-left{text-align:left}.text-center{text-align:center}.\\!text-center{text-align:center!important}.text-right{text-align:right}.\\!text-right{text-align:right!important}.align-middle{vertical-align:middle}.font-serif{font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif}.text-sm{font-size:.875rem;line-height:1.25rem}.text-5xl{font-size:3rem;line-height:1}.text-xl{font-size:1.25rem}.text-lg,.text-xl{line-height:1.75rem}.text-lg{font-size:1.125rem}.text-base{font-size:1rem;line-height:1.5rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xs{font-size:.75rem;line-height:1rem}.font-medium{font-weight:500}.font-bold{font-weight:700}.font-semibold{font-weight:600}.font-normal{font-weight:400}.font-light{font-weight:300}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-snug{line-height:1.375}.leading-tight{line-height:1.25}.tracking-tight{letter-spacing:-.025em}.tracking-wide{letter-spacing:.025em}.\\!text-gray-800{--tw-text-opacity:1!important;color:rgb(31 41 55/var(--tw-text-opacity))!important}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.\\!text-red-400{--tw-text-opacity:1!important;color:rgb(248 113 113/var(--tw-text-opacity))!important}.text-yellow-600{--tw-text-opacity:1;color:rgb(202 138 4/var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgb(220 38 38/var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity:1;color:rgb(79 70 229/var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgb(21 128 61/var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgb(185 28 28/var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.text-green-500{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55/var(--tw-text-opacity))}.text-akwaaba-orange-dark{--tw-text-opacity:1;color:rgb(209 89 0/var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity:1;color:rgb(250 204 21/var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity:1;color:rgb(234 179 8/var(--tw-text-opacity))}.text-red-500{--tw-text-opacity:1;color:rgb(239 68 68/var(--tw-text-opacity))}.text-green-600{--tw-text-opacity:1;color:rgb(22 163 74/var(--tw-text-opacity))}.text-akwaaba-orange-light{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity:1;color:rgb(59 130 246/var(--tw-text-opacity))}.text-purple-600{--tw-text-opacity:1;color:rgb(147 51 234/var(--tw-text-opacity))}.underline{text-decoration-line:underline}.no-underline{text-decoration-line:none}.opacity-0{opacity:0}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color)}.shadow,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color)}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color)}.shadow-inner,.shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow:inset 0 2px 4px 0 rgba(0,0,0,.05);--tw-shadow-colored:inset 0 2px 4px 0 var(--tw-shadow-color)}.shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-0{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-akwaaba-orange-light{--tw-ring-opacity:1;--tw-ring-color:rgb(255 161 91/var(--tw-ring-opacity))}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-150,.transition-opacity{transition-duration:.15s}.duration-300{transition-duration:.3s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}body{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to);--tw-gradient-to:#f9fafb;background-image:linear-gradient(to right,var(--tw-gradient-stops));overflow-y:scroll}[scrollbar=app-scrollbar]::-webkit-scrollbar{cursor:pointer;width:4px}[scrollbar=app-scrollbar]::-webkit-scrollbar-track{background-color:rgba(229,231,235,var(--bg-opacity));cursor:pointer}[scrollbar=app-scrollbar]::-webkit-scrollbar-thumb{background-color:#a0aec0;cursor:pointer}mwc-dialog{z-index:50!important}.main-app-content,.main-content{margin-left:0!important;margin-right:0!important;padding:1rem!important}datatables-new>[mdc-data-table=data-table]{width:100%!important}dt-pagination .mdc-button,dt-pagination .mdc-icon-button{height:30px!important;padding:0!important;width:30px!important}.main-app-content{height:auto;overflow-y:auto}.main-app-content>.main-container,.main-app-content>[display-app-content=here]>.main-container,.special-card{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-radius:1rem;margin-bottom:.75rem;padding:1.5rem}.main-app-content>.main-container:last-child,.main-app-content>[display-app-content=here]>.main-container:last-child{margin-bottom:13rem}@media (min-width:768px){.main-app-content,.main-content{margin-left:16rem!important}.main-app-content>[mdc-data-table=data-table],.main-content>[mdc-data-table=data-table]{display:block!important;margin-left:16rem!important}.main-app-content{height:100vh;overflow-y:scroll}}@media (min-width:1280px){.main-app-content,.main-content{margin-left:16rem!important;margin-right:18rem!important}}.gradient.gray{--tw-gradient-from:#d1d5db;--tw-gradient-to:rgba(209,213,219,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#4b5563;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.gray,.gradient.red{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.red{--tw-gradient-from:#fca5a5;--tw-gradient-to:hsla(0,94%,82%,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#dc2626;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.blue{--tw-gradient-from:#93c5fd;--tw-gradient-to:rgba(147,197,253,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#2563eb;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.blue,.gradient.green{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.green{--tw-gradient-from:#86efac;--tw-gradient-to:rgba(134,239,172,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#16a34a;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.yellow{--tw-gradient-from:#fde047;--tw-gradient-to:rgba(253,224,71,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#ca8a04;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.gradient.akwaaba,.gradient.yellow{fill:currentColor;background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.gradient.akwaaba{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.app-container-,.app-container--2xl,.app-container--fluid,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{margin-left:auto;margin-right:auto;padding-left:.75rem;padding-right:.75rem;width:100%}.app-container--row{display:flex;flex-wrap:wrap;margin-left:-.75rem;margin-right:-.75rem;margin-top:-1.5rem;padding:0 1.5rem}.app-container--row>*{box-sizing:border-box;flex-shrink:0;margin-top:1.5rem;max-width:100%;padding-left:.75rem;padding-right:.75rem;width:100%}@media (min-width:640px){.app-container-,.app-container--sm{max-width:640px}.app-container--col-sm{flex:1 0 0%}.app-container--col-sm-auto{flex:0 0 auto;width:auto}.app-container--col-sm-1{flex:0 0 auto;width:8.333333%}.app-container--col-sm-2{flex:0 0 auto;width:16.666667%}.app-container--col-sm-3{flex:0 0 auto;width:25%}.app-container--col-sm-4{flex:0 0 auto;width:33.333333%}.app-container--col-sm-5{flex:0 0 auto;width:41.666667%}.app-container--col-sm-6{flex:0 0 auto;width:50%}.app-container--col-sm-7{flex:0 0 auto;width:58.333333%}.app-container--col-sm-8{flex:0 0 auto;width:66.666667%}.app-container--col-sm-9{flex:0 0 auto;width:75%}.app-container--col-sm-10{flex:0 0 auto;width:83.333333%}.app-container--col-sm-11{flex:0 0 auto;width:91.666667%}.app-container--col-sm-12{flex:0 0 auto;width:100%}}@media (min-width:768px){.app-container-,.app-container--md,.app-container--sm{max-width:768px}.app-container--col-md{flex:1 0 0%}.app-container--col-md-auto{flex:0 0 auto;width:auto}.app-container--col-md-1{flex:0 0 auto;width:8.333333%}.app-container--col-md-2{flex:0 0 auto;width:16.666667%}.app-container--col-md-3{flex:0 0 auto;width:25%}.app-container--col-md-4{flex:0 0 auto;width:33.333333%}.app-container--col-md-5{flex:0 0 auto;width:41.666667%}.app-container--col-md-6{flex:0 0 auto;width:50%}.app-container--col-md-7{flex:0 0 auto;width:58.333333%}.app-container--col-md-8{flex:0 0 auto;width:66.666667%}.app-container--col-md-9{flex:0 0 auto;width:75%}.app-container--col-md-10{flex:0 0 auto;width:83.333333%}.app-container--col-md-11{flex:0 0 auto;width:91.666667%}.app-container--col-md-12{flex:0 0 auto;width:100%}}@media (min-width:1024px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm{max-width:1024px}.app-container--col-lg{flex:1 0 0%}.app-container--col-lg-auto{flex:0 0 auto;width:auto}.app-container--col-lg-1{flex:0 0 auto;width:8.333333%}.app-container--col-lg-2{flex:0 0 auto;width:16.666667%}.app-container--col-lg-3{flex:0 0 auto;width:25%}.app-container--col-lg-4{flex:0 0 auto;width:33.333333%}.app-container--col-lg-5{flex:0 0 auto;width:41.666667%}.app-container--col-lg-6{flex:0 0 auto;width:50%}.app-container--col-lg-7{flex:0 0 auto;width:58.333333%}.app-container--col-lg-8{flex:0 0 auto;width:66.666667%}.app-container--col-lg-9{flex:0 0 auto;width:75%}.app-container--col-lg-10{flex:0 0 auto;width:83.333333%}.app-container--col-lg-11{flex:0 0 auto;width:91.666667%}.app-container--col-lg-12{flex:0 0 auto;width:100%}}@media (min-width:1280px){.app-container-,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1280px}.app-container--col-xl{flex:1 0 0%}.app-container--col-xl-auto{flex:0 0 auto;width:auto}.app-container--col-xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-xl-3{flex:0 0 auto;width:25%}.app-container--col-xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-xl-6{flex:0 0 auto;width:50%}.app-container--col-xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-xl-9{flex:0 0 auto;width:75%}.app-container--col-xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-xl-12{flex:0 0 auto;width:100%}}@media (min-width:1536px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--sm,.app-container--xl{max-width:1536px}.app-container--col-2xl{flex:1 0 0%}.app-container--col-2xl-auto{flex:0 0 auto;width:auto}.app-container--col-2xl-1{flex:0 0 auto;width:8.333333%}.app-container--col-2xl-2{flex:0 0 auto;width:16.666667%}.app-container--col-2xl-3{flex:0 0 auto;width:25%}.app-container--col-2xl-4{flex:0 0 auto;width:33.333333%}.app-container--col-2xl-5{flex:0 0 auto;width:41.666667%}.app-container--col-2xl-6{flex:0 0 auto;width:50%}.app-container--col-2xl-7{flex:0 0 auto;width:58.333333%}.app-container--col-2xl-8{flex:0 0 auto;width:66.666667%}.app-container--col-2xl-9{flex:0 0 auto;width:75%}.app-container--col-2xl-10{flex:0 0 auto;width:83.333333%}.app-container--col-2xl-11{flex:0 0 auto;width:91.666667%}.app-container--col-2xl-12{flex:0 0 auto;width:100%}}@media (min-width:2811px){.app-container-,.app-container--2xl,.app-container--lg,.app-container--md,.app-container--mega,.app-container--sm,.app-container--xl{max-width:2811px}.app-container--col-mega{flex:1 0 0%}.app-container--col-mega-auto{flex:0 0 auto;width:auto}.app-container--col-mega-1{flex:0 0 auto;width:8.333333%}.app-container--col-mega-2{flex:0 0 auto;width:16.666667%}.app-container--col-mega-3{flex:0 0 auto;width:25%}.app-container--col-mega-4{flex:0 0 auto;width:33.333333%}.app-container--col-mega-5{flex:0 0 auto;width:41.666667%}.app-container--col-mega-6{flex:0 0 auto;width:50%}.app-container--col-mega-7{flex:0 0 auto;width:58.333333%}.app-container--col-mega-8{flex:0 0 auto;width:66.666667%}.app-container--col-mega-9{flex:0 0 auto;width:75%}.app-container--col-mega-10{flex:0 0 auto;width:83.333333%}.app-container--col-mega-11{flex:0 0 auto;width:91.666667%}.app-container--col-mega-12{flex:0 0 auto;width:100%}}mwc-circular-progress{--mdc-circular-progress-track-color:#fff;--mdc-theme-primary:var(--theme-default-color)}mwc-circular-progress.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-circular-progress-track-color:#111827}mwc-circular-progress.success{--mdc-theme-primary:var(--theme-success-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.info{--mdc-theme-primary:var(--theme-info-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-circular-progress-track-color:#fff}mwc-circular-progress.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-circular-progress-track-color:#fff}div[pageLoadingIndicator=on]>img{height:3rem!important;margin-top:50vh;width:3rem!important}div[pageLoadingIndicator=on],div[pageLoadingIndicator=on]>img{display:flex!important;justify-content:center!important}div[pageLoadingIndicator=off]{display:none!important}mwc-icon-button{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);align-content:center;align-items:center;border-radius:9999px;display:inline-block;justify-content:center}mwc-icon-button,mwc-icon-button:hover{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}mwc-icon-button:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}mwc-icon-button.inactive{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));color:rgb(107 114 128/var(--tw-text-opacity))}mwc-icon-button.active{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to);--tw-gradient-to:#d15900;fill:currentColor;--tw-text-opacity:1;--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color);background-image:linear-gradient(to bottom right,var(--tw-gradient-stops));box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);color:rgb(255 255 255/var(--tw-text-opacity))}.form-container .header>.label,.form-container .header>label,.form-container header>.label,.form-container header>label{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity));display:block;font-size:1.5rem;font-weight:600;line-height:2rem;margin-top:.75rem;text-align:left}.form-container .header>.label>.icon,.form-container .header>label>.icon,.form-container header>.label>.icon,.form-container header>label>.icon{--tw-text-opacity:1;color:rgb(249 120 23/var(--tw-text-opacity));display:inline;height:1.5rem;width:1.5rem}.form-container .header>.label>.h1,.form-container .header>.label>h1,.form-container .header>label>.h1,.form-container .header>label>h1,.form-container header>.label>.h1,.form-container header>.label>h1,.form-container header>label>.h1,.form-container header>label>h1{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity));font-size:1.5rem;font-weight:700;line-height:2rem}.form-container .header>.label>.h3,.form-container .header>.label>h3,.form-container .header>label>.h3,.form-container .header>label>h3,.form-container header>.label>.h3,.form-container header>.label>h3,.form-container header>label>.h3,.form-container header>label>h3{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity));font-size:.875rem;font-weight:600;line-height:1.25rem;margin-bottom:1rem}.form-container .form{margin-top:2.5rem}.form-container .header.success .icon,.form-container header.success .icon{--tw-text-opacity:1!important;color:rgb(21 128 61/var(--tw-text-opacity))!important}.form-container .header.success .h1,.form-container .header.success h1,.form-container header.success .h1,.form-container header.success h1{--tw-text-opacity:1!important;color:rgb(22 163 74/var(--tw-text-opacity))!important}.form-container .header.danger .h3,.form-container .header.danger h3,.form-container .header.info .h3,.form-container .header.info h3,.form-container .header.primary .h3,.form-container .header.primary h3,.form-container .header.success .h3,.form-container .header.success h3,.form-container .header.warning .h3,.form-container .header.warning h3,.form-container header.danger .h3,.form-container header.danger h3,.form-container header.info .h3,.form-container header.info h3,.form-container header.primary .h3,.form-container header.primary h3,.form-container header.success .h3,.form-container header.success h3,.form-container header.warning .h3,.form-container header.warning h3{--tw-text-opacity:1!important;color:rgb(75 85 99/var(--tw-text-opacity))!important}.form-container .header.info .icon,.form-container header.info .icon{--tw-text-opacity:1!important;color:rgb(96 165 250/var(--tw-text-opacity))!important}.form-container .header.info .h1,.form-container .header.info h1,.form-container header.info .h1,.form-container header.info h1{--tw-text-opacity:1!important;color:rgb(147 197 253/var(--tw-text-opacity))!important}.form-container .header.warning .icon,.form-container header.warning .icon{--tw-text-opacity:1!important;color:rgb(161 98 7/var(--tw-text-opacity))!important}.form-container .header.warning .h1,.form-container .header.warning h1,.form-container header.warning .h1,.form-container header.warning h1{--tw-text-opacity:1!important;color:rgb(202 138 4/var(--tw-text-opacity))!important}.form-container .header.danger .icon,.form-container header.danger .icon{--tw-text-opacity:1!important;color:rgb(185 28 28/var(--tw-text-opacity))!important}.form-container .header.danger .h1,.form-container .header.danger h1,.form-container header.danger .h1,.form-container header.danger h1{--tw-text-opacity:1!important;color:rgb(220 38 38/var(--tw-text-opacity))!important}.form-container .header.primary .icon,.form-container header.primary .icon{--tw-text-opacity:1!important;color:rgb(29 78 216/var(--tw-text-opacity))!important}.form-container .header.primary .h1,.form-container .header.primary h1,.form-container header.primary .h1,.form-container header.primary h1{--tw-text-opacity:1!important;color:rgb(37 99 235/var(--tw-text-opacity))!important}.form-input-container{margin-top:1.75rem}.form-input-container:first-child{margin-top:0}mwc-select,mwc-textarea,mwc-textfield{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem;width:100%}mwc-textarea{height:10rem}mwc-switch{--tw-bg-opacity:1;--mdc-switch-selected-handle-color:var(--theme-default-color);--mdc-switch-selected-track-color:#c75e17;--mdc-switch-unselected-handle-color:gray;--mdc-switch-unselected-track-color:#d4d3d3;--mdc-switch-unselected-icon-color:#4e4c4c;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem}mwc-select,mwc-switch,mwc-textarea,mwc-textfield{--mdc-theme-primary:var(--theme-default-color)}mwc-select.success,mwc-switch.success,mwc-textarea.success,mwc-textfield.success{--mdc-theme-primary:var(--theme-success-color)}mwc-select.info,mwc-switch.info,mwc-textarea.info,mwc-textfield.info{--mdc-theme-primary:var(--theme-info-color)}mwc-select.warning,mwc-switch.warning,mwc-textarea.warning,mwc-textfield.warning{--mdc-theme-primary:var(--theme-warning-color)}mwc-select.danger,mwc-switch.danger,mwc-textarea.danger,mwc-textfield.danger{--mdc-theme-primary:var(--theme-danger-color)}mwc-select.primary,mwc-switch.primary,mwc-textarea.primary,mwc-textfield.primary{--mdc-theme-primary:var(--theme-primary-color)}.form-input-container{display:flex;justify-content:flex-end}mwc-icon-button.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}mwc-icon-button.success{background-color:rgb(22 163 74/var(--tw-bg-opacity))}mwc-icon-button.info,mwc-icon-button.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-icon-button.info{background-color:rgb(96 165 250/var(--tw-bg-opacity))}mwc-icon-button.warning{background-color:rgb(249 120 23/var(--tw-bg-opacity))}mwc-icon-button.danger,mwc-icon-button.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-icon-button.danger{background-color:rgb(220 38 38/var(--tw-bg-opacity))}mwc-icon-button.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}.button,mwc-button{--mdc-theme-primary:var(--theme-default-color);--mdc-theme-on-primary:#fff}.button.gray,.button.gray[data-btn-to=active],mwc-button.gray,mwc-button.gray[data-btn-to=active]{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#111827}.button.success,.button.success[data-btn-to=active],mwc-button.success,mwc-button.success[data-btn-to=active]{--mdc-theme-primary:var(--theme-success-color);--mdc-theme-on-primary:#fff}.button.info,.button.info[data-btn-to=active],mwc-button.info,mwc-button.info[data-btn-to=active]{--mdc-theme-primary:var(--theme-info-color);--mdc-theme-on-primary:#fff}.button.warning,.button.warning[data-btn-to=active],mwc-button.warning,mwc-button.warning[data-btn-to=active]{--mdc-theme-primary:var(--theme-warning-color);--mdc-theme-on-primary:#fff}.button.danger,.button.danger[data-btn-to=active],mwc-button.danger,mwc-button.danger[data-btn-to=active]{--mdc-theme-primary:var(--theme-danger-color);--mdc-theme-on-primary:#fff}.button.primary,.button.primary[data-btn-to=active],mwc-button.primary,mwc-button.primary[data-btn-to=active]{--mdc-theme-primary:var(--theme-primary-color);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].gray,mwc-button[data-btn-to=inactive].gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].success,mwc-button[data-btn-to=inactive].success{--mdc-theme-primary:var(--theme-success-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].info,mwc-button[data-btn-to=inactive].info{--mdc-theme-primary:var(--theme-info-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].warning,mwc-button[data-btn-to=inactive].warning{--mdc-theme-primary:var(--theme-warning-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].danger,mwc-button[data-btn-to=inactive].danger{--mdc-theme-primary:var(--theme-danger-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].primary,mwc-button[data-btn-to=inactive].primary{--mdc-theme-primary:var(--theme-primary-color-disabled);--mdc-theme-on-primary:#fff}mwc-tab-bar.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}mwc-tab-bar.success{background-color:rgb(22 163 74/var(--tw-bg-opacity))}mwc-tab-bar.info,mwc-tab-bar.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar.info{background-color:rgb(96 165 250/var(--tw-bg-opacity))}mwc-tab-bar.warning{background-color:rgb(249 120 23/var(--tw-bg-opacity))}mwc-tab-bar.danger,mwc-tab-bar.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar.danger{background-color:rgb(220 38 38/var(--tw-bg-opacity))}mwc-tab-bar.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar{--mdc-tab-horizontal-padding:0.75rem;--mdc-theme-primary:var(--theme-default-color);--mdc-tab-color-default:var(--theme-default-color);--mdc-tab-text-label-color-default:var(--theme-default-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-tab-color-default:var(--theme-gray-color);--mdc-tab-text-label-color-default:var(--theme-gray-color);--mdc-theme-on-primary:#111827}mwc-tab-bar.success{--mdc-theme-primary:var(--theme-success-color);--mdc-tab-color-default:var(--theme-success-color);--mdc-tab-text-label-color-default:var(--theme-success-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.info{--mdc-theme-primary:var(--theme-info-color);--mdc-tab-color-default:var(--theme-info-color);--mdc-tab-text-label-color-default:var(--theme-info-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-tab-color-default:var(--theme-warning-color);--mdc-tab-text-label-color-default:var(--theme-warning-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-tab-color-default:var(--theme-danger-color);--mdc-tab-text-label-color-default:var(--theme-danger-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-tab-color-default:var(--theme-primary-color);--mdc-tab-text-label-color-default:var(--theme-primary-color);--mdc-theme-on-primary:#fff}.first\\:rounded-t-lg:first-child{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.last\\:rounded-b-lg:last-child{border-bottom-left-radius:.5rem;border-bottom-right-radius:.5rem}.hover\\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.hover\\:\\!text-gray-900:hover{--tw-text-opacity:1!important;color:rgb(17 24 39/var(--tw-text-opacity))!important}.hover\\:no-underline:hover{text-decoration-line:none}.hover\\:shadow-lg:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:border-indigo-300:focus{--tw-border-opacity:1;border-color:rgb(165 180 252/var(--tw-border-opacity))}.focus\\:shadow-lg:focus{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-0:focus,.focus\\:ring:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-4:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring-indigo-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(199 210 254/var(--tw-ring-opacity))}.focus\\:ring-gray-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(229 231 235/var(--tw-ring-opacity))}.focus\\:ring-opacity-50:focus{--tw-ring-opacity:0.5}.active\\:shadow-lg:active{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.group:hover .group-hover\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:divide-gray-700>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(55 65 81/var(--tw-divide-opacity))}.dark .dark\\:border-gray-700{--tw-border-opacity:1;border-color:rgb(55 65 81/var(--tw-border-opacity))}.dark .dark\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity))}.dark .dark\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.dark .dark\\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.dark .dark\\:text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.dark .dark\\:hover\\:bg-gray-800:hover{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:focus\\:ring-gray-800:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(31 41 55/var(--tw-ring-opacity))}.dark .group:hover .dark\\:group-hover\\:bg-blue-300{--tw-bg-opacity:1;background-color:rgb(147 197 253/var(--tw-bg-opacity))}@media (min-width:640px){.sm\\:hidden{display:none}.sm\\:w-2\\/5{width:40%}.sm\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.sm\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:768px){.md\\:mx-12{margin-left:3rem;margin-right:3rem}.md\\:my-24{margin-bottom:6rem;margin-top:6rem}.md\\:block{display:block}.md\\:hidden{display:none}.md\\:h-96{height:24rem}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}.md\\:px-12{padding-left:3rem;padding-right:3rem}.md\\:text-center{text-align:center}.md\\:text-6xl{font-size:3.75rem;line-height:1}.md\\:text-2xl{font-size:1.5rem;line-height:2rem}}@media (min-width:1024px){.lg\\:mt-0{margin-top:0}.lg\\:mb-0{margin-bottom:0}.lg\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\\:flex-row{flex-direction:row}.lg\\:text-left{text-align:left}}@media (min-width:1280px){.xl\\:m-24{margin:6rem}.xl\\:px-32{padding-left:8rem;padding-right:8rem}.xl\\:text-7xl{font-size:4.5rem;line-height:1}.xl\\:text-3xl{font-size:1.875rem;line-height:2.25rem}}","/*! tailwindcss v3.2.4 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\"\"}html{-webkit-text-size-adjust:100%;font-feature-settings:normal;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}[hidden]{display:none}*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}@media (min-width:2811px){.container{max-width:2811px}}.visible{visibility:visible}.invisible{visibility:hidden}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-10{top:2.5rem}.left-0{left:0}.right-0{right:0}.right-4{right:1rem}.bottom-16{bottom:4rem}.top-0{top:0}.top-4{top:1rem}.left-20{left:5rem}.top-28{top:7rem}.top-12{top:3rem}.-left-14{left:-3.5rem}.-left-7{left:-1.75rem}.bottom-9{bottom:2.25rem}.left-\\[-7rem\\]{left:-7rem}.z-10{z-index:10}.z-20{z-index:20}.z-50{z-index:50}.z-0{z-index:0}.m-1{margin:.25rem}.m-0{margin:0}.my-24{margin-bottom:6rem;margin-top:6rem}.mx-auto{margin-left:auto;margin-right:auto}.mx-12{margin-left:3rem;margin-right:3rem}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-0{margin-bottom:0;margin-top:0}.my-1{margin-bottom:.25rem;margin-top:.25rem}.mx-4{margin-left:1rem;margin-right:1rem}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-2{margin-left:.5rem;margin-right:.5rem}.mx-1{margin-left:.25rem;margin-right:.25rem}.\\!mx-1{margin-left:.25rem!important;margin-right:.25rem!important}.\\!my-1{margin-bottom:.25rem!important;margin-top:.25rem!important}.mb-32{margin-bottom:8rem}.mt-12{margin-top:3rem}.mb-12{margin-bottom:3rem}.mr-2{margin-right:.5rem}.mt-1{margin-top:.25rem}.mb-2{margin-bottom:.5rem}.ml-2{margin-left:.5rem}.mb-0{margin-bottom:0}.mb-4{margin-bottom:1rem}.mt-6{margin-top:1.5rem}.mt-2{margin-top:.5rem}.mb-3{margin-bottom:.75rem}.mr-1{margin-right:.25rem}.ml-1{margin-left:.25rem}.mt-0{margin-top:0}.mt-3{margin-top:.75rem}.mr-4{margin-right:1rem}.ml-0{margin-left:0}.mr-0{margin-right:0}.ml-6{margin-left:1.5rem}.ml-64{margin-left:16rem}.mr-72{margin-right:18rem}.-mt-1{margin-top:-.25rem}.ml-4{margin-left:1rem}.-mt-2{margin-top:-.5rem}.block{display:block}.\\!block{display:block!important}.inline-block{display:inline-block}.flex{display:flex}.\\!flex{display:flex!important}.inline-flex{display:inline-flex}.table{display:table}.table-cell{display:table-cell}.table-header-group{display:table-header-group}.table-row-group{display:table-row-group}.table-row{display:table-row}.grid{display:grid}.contents{display:contents}.hidden{display:none}.h-52{height:13rem}.h-full{height:100%}.h-8{height:2rem}.h-32{height:8rem}.h-16{height:4rem}.h-96{height:24rem}.h-44{height:11rem}.h-1{height:.25rem}.h-48{height:12rem}.h-40{height:10rem}.h-36{height:9rem}.h-14{height:3.5rem}.h-11{height:2.75rem}.h-2{height:.5rem}.h-24{height:6rem}.h-fit{height:-moz-fit-content;height:fit-content}.h-\\[400px\\]{height:400px}.max-h-48{max-height:12rem}.w-full{width:100%}.w-8{width:2rem}.w-32{width:8rem}.w-16{width:4rem}.w-max{width:-moz-max-content;width:max-content}.w-6{width:1.5rem}.w-1{width:.25rem}.w-2{width:.5rem}.w-auto{width:auto}.w-48{width:12rem}.w-40{width:10rem}.w-36{width:9rem}.w-64{width:16rem}.w-72{width:18rem}.w-80{width:20rem}.w-\\[fit-content\\]{width:-moz-fit-content;width:fit-content}.w-\\[19rem\\]{width:19rem}.\\!w-28{width:7rem!important}.\\!max-w-full{max-width:100%!important}.flex-1{flex:1 1 0%}.flex-shrink{flex-shrink:1}.flex-grow{flex-grow:1}.rotate-45{--tw-rotate:45deg}.rotate-45,.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.resize{resize:both}.list-disc{list-style-type:disc}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.grid-flow-row{grid-auto-flow:row}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.flex-row{flex-direction:row}.flex-row-reverse{flex-direction:row-reverse}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.content-center{align-content:center}.content-between{align-content:space-between}.content-evenly{align-content:space-evenly}.items-start{align-items:flex-start}.items-end{align-items:flex-end}.items-center{align-items:center}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.\\!justify-between{justify-content:space-between!important}.justify-evenly{justify-content:space-evenly}.gap-12{gap:3rem}.gap-4{gap:1rem}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.space-y-1>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.25rem*var(--tw-space-y-reverse));margin-top:calc(.25rem*(1 - var(--tw-space-y-reverse)))}.divide-y>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)))}.divide-gray-200>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(229 231 235/var(--tw-divide-opacity))}.overflow-hidden{overflow:hidden}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-x-scroll{overflow-x:scroll}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.whitespace-normal{white-space:normal}.whitespace-nowrap{white-space:nowrap}.whitespace-pre-line{white-space:pre-line}.whitespace-pre-wrap{white-space:pre-wrap}.rounded-md{border-radius:.375rem}.rounded{border-radius:.25rem}.rounded-lg{border-radius:.5rem}.rounded-full{border-radius:9999px}.rounded-none{border-radius:0}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-3xl{border-radius:1.5rem}.rounded-sm{border-radius:.125rem}.rounded-r-none{border-bottom-right-radius:0;border-top-right-radius:0}.rounded-b-md{border-bottom-left-radius:.375rem;border-bottom-right-radius:.375rem}.border-2{border-width:2px}.border{border-width:1px}.border-0{border-width:0}.border-b-2{border-bottom-width:2px}.border-t-2{border-top-width:2px}.border-b{border-bottom-width:1px}.border-t{border-top-width:1px}.border-r-2{border-right-width:2px}.border-l-4{border-left-width:4px}.border-solid{border-style:solid}.border-none{border-style:none}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity))}.border-yellow-500{--tw-border-opacity:1;border-color:rgb(234 179 8/var(--tw-border-opacity))}.border-akwaaba-orange-light{--tw-border-opacity:1;border-color:rgb(255 161 91/var(--tw-border-opacity))}.border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity))}.border-gray-400{--tw-border-opacity:1;border-color:rgb(156 163 175/var(--tw-border-opacity))}.border-red-600{--tw-border-opacity:1;border-color:rgb(220 38 38/var(--tw-border-opacity))}.border-transparent{border-color:transparent}.border-akwaaba-orange-dark{--tw-border-opacity:1;border-color:rgb(209 89 0/var(--tw-border-opacity))}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.bg-green-600{--tw-bg-opacity:1;background-color:rgb(22 163 74/var(--tw-bg-opacity))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity))}.bg-gray-100{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity))}.bg-transparent{background-color:transparent}.bg-green-900{--tw-bg-opacity:1;background-color:rgb(20 83 45/var(--tw-bg-opacity))}.bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.bg-blue-100{--tw-bg-opacity:1;background-color:rgb(219 234 254/var(--tw-bg-opacity))}.bg-gradient-to-tr{background-image:linear-gradient(to top right,var(--tw-gradient-stops))}.bg-gradient-to-r{background-image:linear-gradient(to right,var(--tw-gradient-stops))}.bg-gradient-to-br{background-image:linear-gradient(to bottom right,var(--tw-gradient-stops))}.from-akwaaba-orange-default{--tw-gradient-from:#f97817;--tw-gradient-to:rgba(249,120,23,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-gray-50{--tw-gradient-from:#f9fafb;--tw-gradient-to:rgba(249,250,251,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.from-akwaaba-orange-light{--tw-gradient-from:#ffa15b;--tw-gradient-to:rgba(255,161,91,0);--tw-gradient-stops:var(--tw-gradient-from),var(--tw-gradient-to)}.via-white{--tw-gradient-to:hsla(0,0%,100%,0);--tw-gradient-stops:var(--tw-gradient-from),#fff,var(--tw-gradient-to)}.via-gray-100{--tw-gradient-to:rgba(243,244,246,0);--tw-gradient-stops:var(--tw-gradient-from),#f3f4f6,var(--tw-gradient-to)}.to-akwaaba-orange-dark{--tw-gradient-to:#d15900}.bg-contain{background-size:contain}.fill-current{fill:currentColor}.object-contain{-o-object-fit:contain;object-fit:contain}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-2{padding:.5rem}.p-0{padding:0}.p-3{padding:.75rem}.p-1{padding:.25rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-1\\.5{padding:.375rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-12{padding-bottom:3rem;padding-top:3rem}.px-7{padding-left:1.75rem;padding-right:1.75rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.\\!py-1{padding-bottom:.25rem!important;padding-top:.25rem!important}.\\!px-0{padding-left:0!important;padding-right:0!important}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-1{padding-left:.25rem;padding-right:.25rem}.\\!py-4{padding-bottom:1rem!important;padding-top:1rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.py-4{padding-bottom:1rem;padding-top:1rem}.px-0{padding-left:0;padding-right:0}.py-1{padding-bottom:.25rem;padding-top:.25rem}.\\!px-1{padding-left:.25rem!important;padding-right:.25rem!important}.py-0{padding-bottom:0;padding-top:0}.pr-2{padding-right:.5rem}.pr-4{padding-right:1rem}.pl-2{padding-left:.5rem}.pl-4{padding-left:1rem}.pb-2{padding-bottom:.5rem}.pb-5{padding-bottom:1.25rem}.pt-1{padding-top:.25rem}.pb-4{padding-bottom:1rem}.pl-0{padding-left:0}.pl-3{padding-left:.75rem}.text-left{text-align:left}.text-center{text-align:center}.\\!text-center{text-align:center!important}.text-right{text-align:right}.\\!text-right{text-align:right!important}.align-middle{vertical-align:middle}.font-serif{font-family:ui-serif,Georgia,Cambria,Times New Roman,Times,serif}.text-sm{font-size:.875rem;line-height:1.25rem}.text-5xl{font-size:3rem;line-height:1}.text-xl{font-size:1.25rem}.text-lg,.text-xl{line-height:1.75rem}.text-lg{font-size:1.125rem}.text-base{font-size:1rem;line-height:1.5rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xs{font-size:.75rem;line-height:1rem}.font-medium{font-weight:500}.font-bold{font-weight:700}.font-semibold{font-weight:600}.font-normal{font-weight:400}.font-light{font-weight:300}.uppercase{text-transform:uppercase}.capitalize{text-transform:capitalize}.italic{font-style:italic}.leading-snug{line-height:1.375}.leading-tight{line-height:1.25}.tracking-tight{letter-spacing:-.025em}.tracking-wide{letter-spacing:.025em}.\\!text-gray-800{--tw-text-opacity:1!important;color:rgb(31 41 55/var(--tw-text-opacity))!important}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.\\!text-red-400{--tw-text-opacity:1!important;color:rgb(248 113 113/var(--tw-text-opacity))!important}.text-yellow-600{--tw-text-opacity:1;color:rgb(202 138 4/var(--tw-text-opacity))}.text-black{--tw-text-opacity:1;color:rgb(0 0 0/var(--tw-text-opacity))}.text-red-600{--tw-text-opacity:1;color:rgb(220 38 38/var(--tw-text-opacity))}.text-indigo-600{--tw-text-opacity:1;color:rgb(79 70 229/var(--tw-text-opacity))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity))}.text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity))}.text-green-700{--tw-text-opacity:1;color:rgb(21 128 61/var(--tw-text-opacity))}.text-red-700{--tw-text-opacity:1;color:rgb(185 28 28/var(--tw-text-opacity))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.text-green-500{--tw-text-opacity:1;color:rgb(34 197 94/var(--tw-text-opacity))}.text-red-400{--tw-text-opacity:1;color:rgb(248 113 113/var(--tw-text-opacity))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55/var(--tw-text-opacity))}.text-akwaaba-orange-dark{--tw-text-opacity:1;color:rgb(209 89 0/var(--tw-text-opacity))}.text-yellow-400{--tw-text-opacity:1;color:rgb(250 204 21/var(--tw-text-opacity))}.text-yellow-500{--tw-text-opacity:1;color:rgb(234 179 8/var(--tw-text-opacity))}.text-red-500{--tw-text-opacity:1;color:rgb(239 68 68/var(--tw-text-opacity))}.text-green-600{--tw-text-opacity:1;color:rgb(22 163 74/var(--tw-text-opacity))}.text-akwaaba-orange-light{--tw-text-opacity:1;color:rgb(255 161 91/var(--tw-text-opacity))}.text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.text-blue-500{--tw-text-opacity:1;color:rgb(59 130 246/var(--tw-text-opacity))}.text-purple-600{--tw-text-opacity:1;color:rgb(147 51 234/var(--tw-text-opacity))}.underline{text-decoration-line:underline}.no-underline{text-decoration-line:none}.opacity-0{opacity:0}.shadow-md{--tw-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-lg{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color)}.shadow{--tw-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1);--tw-shadow-colored:0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color)}.shadow,.shadow-sm{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-sm{--tw-shadow:0 1px 2px 0 rgba(0,0,0,.05);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color)}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color)}.shadow-inner,.shadow-xl{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-inner{--tw-shadow:inset 0 2px 4px 0 rgba(0,0,0,.05);--tw-shadow-colored:inset 0 2px 4px 0 var(--tw-shadow-color)}.shadow-none{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline-none{outline:2px solid transparent;outline-offset:2px}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring,.ring-0{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.ring{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.ring-akwaaba-orange-light{--tw-ring-opacity:1;--tw-ring-color:rgb(255 161 91/var(--tw-ring-opacity))}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.transition{transition-duration:.15s;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-150,.transition-opacity{transition-duration:.15s}.duration-300{transition-duration:.3s}.ease-in-out{transition-timing-function:cubic-bezier(.4,0,.2,1)}mwc-dialog{z-index:50!important}.form-input-container{margin-top:1.75rem}.form-input-container:first-child{margin-top:0}mwc-select,mwc-textarea,mwc-textfield{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem;width:100%}mwc-textarea{height:10rem}mwc-switch{--tw-bg-opacity:1;--mdc-switch-selected-handle-color:var(--theme-default-color);--mdc-switch-selected-track-color:#c75e17;--mdc-switch-unselected-handle-color:gray;--mdc-switch-unselected-track-color:#d4d3d3;--mdc-switch-unselected-icon-color:#4e4c4c;background-color:rgb(255 255 255/var(--tw-bg-opacity));border-style:none;display:block;margin-top:.25rem}mwc-select,mwc-switch,mwc-textarea,mwc-textfield{--mdc-theme-primary:var(--theme-default-color)}mwc-select.success,mwc-switch.success,mwc-textarea.success,mwc-textfield.success{--mdc-theme-primary:var(--theme-success-color)}mwc-select.info,mwc-switch.info,mwc-textarea.info,mwc-textfield.info{--mdc-theme-primary:var(--theme-info-color)}mwc-select.warning,mwc-switch.warning,mwc-textarea.warning,mwc-textfield.warning{--mdc-theme-primary:var(--theme-warning-color)}mwc-select.danger,mwc-switch.danger,mwc-textarea.danger,mwc-textfield.danger{--mdc-theme-primary:var(--theme-danger-color)}mwc-select.primary,mwc-switch.primary,mwc-textarea.primary,mwc-textfield.primary{--mdc-theme-primary:var(--theme-primary-color)}.form-input-container{display:flex;justify-content:flex-end}mwc-icon-button.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}mwc-icon-button.success{background-color:rgb(22 163 74/var(--tw-bg-opacity))}mwc-icon-button.info,mwc-icon-button.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-icon-button.info{background-color:rgb(96 165 250/var(--tw-bg-opacity))}mwc-icon-button.warning{background-color:rgb(249 120 23/var(--tw-bg-opacity))}mwc-icon-button.danger,mwc-icon-button.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-icon-button.danger{background-color:rgb(220 38 38/var(--tw-bg-opacity))}mwc-icon-button.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}.button,mwc-button{--mdc-theme-primary:var(--theme-default-color);--mdc-theme-on-primary:#fff}.button.gray,.button.gray[data-btn-to=active],mwc-button.gray,mwc-button.gray[data-btn-to=active]{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#111827}.button.success,.button.success[data-btn-to=active],mwc-button.success,mwc-button.success[data-btn-to=active]{--mdc-theme-primary:var(--theme-success-color);--mdc-theme-on-primary:#fff}.button.info,.button.info[data-btn-to=active],mwc-button.info,mwc-button.info[data-btn-to=active]{--mdc-theme-primary:var(--theme-info-color);--mdc-theme-on-primary:#fff}.button.warning,.button.warning[data-btn-to=active],mwc-button.warning,mwc-button.warning[data-btn-to=active]{--mdc-theme-primary:var(--theme-warning-color);--mdc-theme-on-primary:#fff}.button.danger,.button.danger[data-btn-to=active],mwc-button.danger,mwc-button.danger[data-btn-to=active]{--mdc-theme-primary:var(--theme-danger-color);--mdc-theme-on-primary:#fff}.button.primary,.button.primary[data-btn-to=active],mwc-button.primary,mwc-button.primary[data-btn-to=active]{--mdc-theme-primary:var(--theme-primary-color);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].gray,mwc-button[data-btn-to=inactive].gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].success,mwc-button[data-btn-to=inactive].success{--mdc-theme-primary:var(--theme-success-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].info,mwc-button[data-btn-to=inactive].info{--mdc-theme-primary:var(--theme-info-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].warning,mwc-button[data-btn-to=inactive].warning{--mdc-theme-primary:var(--theme-warning-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].danger,mwc-button[data-btn-to=inactive].danger{--mdc-theme-primary:var(--theme-danger-color-disabled);--mdc-theme-on-primary:#fff}.button[data-btn-to=inactive].primary,mwc-button[data-btn-to=inactive].primary{--mdc-theme-primary:var(--theme-primary-color-disabled);--mdc-theme-on-primary:#fff}mwc-tab-bar.gray{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity));color:rgb(209 89 0/var(--tw-text-opacity))}mwc-tab-bar.success{background-color:rgb(22 163 74/var(--tw-bg-opacity))}mwc-tab-bar.info,mwc-tab-bar.success{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar.info{background-color:rgb(96 165 250/var(--tw-bg-opacity))}mwc-tab-bar.warning{background-color:rgb(249 120 23/var(--tw-bg-opacity))}mwc-tab-bar.danger,mwc-tab-bar.warning{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar.danger{background-color:rgb(220 38 38/var(--tw-bg-opacity))}mwc-tab-bar.primary{--tw-bg-opacity:1;fill:currentColor;--tw-text-opacity:1;background-color:rgb(37 99 235/var(--tw-bg-opacity));color:rgb(255 255 255/var(--tw-text-opacity))}mwc-tab-bar{--mdc-tab-horizontal-padding:0.75rem;--mdc-theme-primary:var(--theme-default-color);--mdc-tab-color-default:var(--theme-default-color);--mdc-tab-text-label-color-default:var(--theme-default-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.gray{--mdc-theme-primary:var(--theme-gray-color);--mdc-tab-color-default:var(--theme-gray-color);--mdc-tab-text-label-color-default:var(--theme-gray-color);--mdc-theme-on-primary:#111827}mwc-tab-bar.success{--mdc-theme-primary:var(--theme-success-color);--mdc-tab-color-default:var(--theme-success-color);--mdc-tab-text-label-color-default:var(--theme-success-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.info{--mdc-theme-primary:var(--theme-info-color);--mdc-tab-color-default:var(--theme-info-color);--mdc-tab-text-label-color-default:var(--theme-info-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.warning{--mdc-theme-primary:var(--theme-warning-color);--mdc-tab-color-default:var(--theme-warning-color);--mdc-tab-text-label-color-default:var(--theme-warning-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.danger{--mdc-theme-primary:var(--theme-danger-color);--mdc-tab-color-default:var(--theme-danger-color);--mdc-tab-text-label-color-default:var(--theme-danger-color);--mdc-theme-on-primary:#fff}mwc-tab-bar.primary{--mdc-theme-primary:var(--theme-primary-color);--mdc-tab-color-default:var(--theme-primary-color);--mdc-tab-text-label-color-default:var(--theme-primary-color);--mdc-theme-on-primary:#fff}.first\\:rounded-t-lg:first-child{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.last\\:rounded-b-lg:last-child{border-bottom-left-radius:.5rem;border-bottom-right-radius:.5rem}.hover\\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity))}.hover\\:\\!text-gray-900:hover{--tw-text-opacity:1!important;color:rgb(17 24 39/var(--tw-text-opacity))!important}.hover\\:no-underline:hover{text-decoration-line:none}.hover\\:shadow-lg:hover{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:border-indigo-300:focus{--tw-border-opacity:1;border-color:rgb(165 180 252/var(--tw-border-opacity))}.focus\\:shadow-lg:focus{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.focus\\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-0:focus,.focus\\:ring:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\\:ring-4:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\\:ring-indigo-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(199 210 254/var(--tw-ring-opacity))}.focus\\:ring-gray-200:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(229 231 235/var(--tw-ring-opacity))}.focus\\:ring-opacity-50:focus{--tw-ring-opacity:0.5}.active\\:shadow-lg:active{--tw-shadow:0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1);--tw-shadow-colored:0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.group:hover .group-hover\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:divide-gray-700>:not([hidden])~:not([hidden]){--tw-divide-opacity:1;border-color:rgb(55 65 81/var(--tw-divide-opacity))}.dark .dark\\:border-gray-700{--tw-border-opacity:1;border-color:rgb(55 65 81/var(--tw-border-opacity))}.dark .dark\\:bg-gray-900{--tw-bg-opacity:1;background-color:rgb(17 24 39/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity))}.dark .dark\\:bg-blue-200{--tw-bg-opacity:1;background-color:rgb(191 219 254/var(--tw-bg-opacity))}.dark .dark\\:text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.dark .dark\\:text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity))}.dark .dark\\:text-blue-800{--tw-text-opacity:1;color:rgb(30 64 175/var(--tw-text-opacity))}.dark .dark\\:hover\\:bg-gray-800:hover{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity))}.dark .dark\\:focus\\:ring-gray-800:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(31 41 55/var(--tw-ring-opacity))}.dark .group:hover .dark\\:group-hover\\:bg-blue-300{--tw-bg-opacity:1;background-color:rgb(147 197 253/var(--tw-bg-opacity))}@media (min-width:640px){.sm\\:hidden{display:none}.sm\\:w-2\\/5{width:40%}.sm\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.sm\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:768px){.md\\:mx-12{margin-left:3rem;margin-right:3rem}.md\\:my-24{margin-bottom:6rem;margin-top:6rem}.md\\:block{display:block}.md\\:hidden{display:none}.md\\:h-96{height:24rem}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\\:grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}.md\\:px-12{padding-left:3rem;padding-right:3rem}.md\\:text-center{text-align:center}.md\\:text-6xl{font-size:3.75rem;line-height:1}.md\\:text-2xl{font-size:1.5rem;line-height:2rem}}@media (min-width:1024px){.lg\\:mt-0{margin-top:0}.lg\\:mb-0{margin-bottom:0}.lg\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.lg\\:grid-cols-3{grid-template-columns:repeat(3,minmax(0,1fr))}.lg\\:flex-row{flex-direction:row}.lg\\:text-left{text-align:left}}@media (min-width:1280px){.xl\\:m-24{margin:6rem}.xl\\:px-32{padding-left:8rem;padding-right:8rem}.xl\\:text-7xl{font-size:4.5rem;line-height:1}.xl\\:text-3xl{font-size:1.875rem;line-height:2.25rem}}","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/checkbox/mixins' as checkbox-mixins;\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/typography/typography';\n@use './data-table-cell';\n@use './data-table-header-cell';\n@use './data-table-pagination';\n@use './data-table-progress-indicator';\n@use './data-table-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include table-styles($query: $query);\n  @include data-table-theme.sort-icon-color(\n    data-table-theme.$sort-icon-color,\n    $query: $query\n  );\n  @include data-table-theme.sort-icon-active-color(\n    data-table-theme.$sort-icon-active-color,\n    $query: $query\n  );\n\n  @include data-table-progress-indicator.core-styles($query: $query);\n  @include data-table-pagination.core-styles($query: $query);\n}\n\n// This API includes only the table styles without the sorting, pagination and\n// loading styles. It is intended to be used by frameworks that only need the\n// table styles.\n@mixin table-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define data-table\n\n  .mdc-data-table__content {\n    @include typography.typography(body2, $query: $query);\n  }\n\n  .mdc-data-table {\n    @include data-table-theme.fill-color(\n      data-table-theme.$fill-color,\n      $query: $query\n    );\n    @include data-table-theme.shape-radius(\n      data-table-theme.$shape-radius,\n      $query: $query\n    );\n    @include data-table-theme.stroke-size(\n      data-table-theme.$stroke-size,\n      $query: $query\n    );\n    @include data-table-theme.stroke-color(\n      data-table-theme.$stroke-color,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      // NOTE: Root element should not be scrollable, added this for backward\n      // compatibility.\n      -webkit-overflow-scrolling: touch;\n      display: inline-flex;\n      flex-direction: column;\n      box-sizing: border-box;\n      position: relative;\n    }\n  }\n\n  // Note that we don't output the color styles inside the `@at-root`,\n  // because it makes it difficult to consume by projects that wrap their\n  // themes in a class (e.g. `.my-theme { @include mdc-data-table-core-style() }`).\n  @include data-table-theme.row-fill-color(\n    data-table-theme.$row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-fill-color(\n    data-table-theme.$header-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.selected-row-fill-color(\n    data-table-theme.$selected-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-color(\n    data-table-theme.$divider-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-size(\n    data-table-theme.$divider-size,\n    $query: $query\n  );\n  @include data-table-theme.row-hover-fill-color(\n    data-table-theme.$row-hover-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-text-color(\n    data-table-theme.$header-row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.row-text-color(\n    data-table-theme.$row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.density(\n    data-table-theme.$default-density-scale,\n    $query: $query\n  );\n  @include data-table-theme.cell-padding(\n    $leading-padding: data-table-theme.$cell-leading-padding,\n    $trailing-padding: data-table-theme.$cell-trailing-padding,\n    $query: $query\n  );\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      -webkit-overflow-scrolling: touch;\n      overflow-x: auto;\n      width: 100%;\n    }\n  }\n\n  .mdc-data-table__table {\n    @include feature-targeting.targets($feat-structure) {\n      min-width: 100%; // Makes table full-width of its container (Firefox / IE11)\n      border: 0;\n      white-space: nowrap;\n      border-spacing: 0;\n      /**\n       * With table-layout:fixed, table and column widths are defined by the width\n       * of the first row of cells. Cells in subsequent rows do not affect column\n       * widths. This results in a predictable table layout and may also speed up\n       * rendering.\n       */\n      table-layout: fixed;\n    }\n  }\n\n  @include data-table-cell.core-styles($query: $query);\n  @include data-table-header-cell.core-styles($query: $query);\n\n  .mdc-data-table--sticky-header {\n    @include data-table-header-cell.header-cell-sticky($query: $query);\n  }\n}\n\n@mixin theme-baseline($query: feature-targeting.all()) {\n  @include data-table-theme.checked-icon-color(\n    data-table-theme.$checked-icon-color,\n    $query: $query\n  );\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-keys($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(font-size, map.get($theme, size));\n  @include theme.property(font-weight, map.get($theme, weight));\n  @include theme.property(letter-spacing, map.get($theme, tracking));\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/animation/functions';\n@use '@material/checkbox/checkbox-theme';\n@use '@material/density/density';\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/rtl/rtl';\n@use '@material/select/select-theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/touch-target';\n@use '@material/typography/typography';\n\n$fill-color: surface !default;\n$header-row-fill-color: surface !default;\n$row-fill-color: inherit !default;\n$selected-row-fill-color: rgba(theme-color.prop-value(primary), 0.04) !default;\n$checked-icon-color: primary !default;\n$divider-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n$divider-size: 1px !default;\n$row-hover-fill-color: rgba(theme-color.prop-value(on-surface), 0.04) !default;\n\n$header-row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n\n$sort-icon-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n$sort-icon-active-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.87\n) !default;\n$sort-icon-density-scale: -5 !default;\n\n$shape-radius: medium !default;\n$stroke-size: 1px !default;\n$stroke-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n\n$row-height: 52px !default;\n$header-row-height: get-header-row-height($row-height) !default;\n$cell-leading-padding: 16px !default;\n$cell-trailing-padding: 16px !default;\n\n$minimum-row-height: 36px !default;\n$maximum-row-height: $row-height !default;\n$default-density-scale: density.$default-scale !default;\n$density-config: (\n  height: (\n    maximum: $row-height,\n    default: $row-height,\n    minimum: $minimum-row-height,\n  ),\n);\n$pagination-rows-per-page-select-height: 36px;\n\n@function get-header-row-height($height) {\n  @return $height + 4px;\n}\n\n/// Sets the color of sort icon button when it is in idle state.\n/// (icon showed on header cell focus)\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n/// Sets the color of sort icon button when it is activated (sorted).\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-active-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property('background-color', $color);\n  }\n}\n\n@mixin header-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Set background color to cell instead of row to support sticky header.\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin selected-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row--selected {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin checked-icon-color($color, $query: feature-targeting.all()) {\n  .mdc-data-table__header-row-checkbox,\n  .mdc-data-table__row-checkbox {\n    @include checkbox-theme.focus-indicator-color($color, $query: $query);\n    @include checkbox-theme.container-colors(\n      $marked-stroke-color: $color,\n      $marked-fill-color: $color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets divider color of data table (including outline color of rows per page\n/// select). Use `stroke-color()` to set table border color.\n/// @param {Color} $color Divider color.\n///\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-rows-per-page-select {\n    @include select-theme.outline-color($color, $query: $query);\n  }\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      border-bottom-color: $color;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-color) {\n      border-top-color: $color;\n    }\n  }\n}\n\n@mixin divider-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom-width: $size;\n      border-bottom-style: solid;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      border-top-width: $size;\n      border-top-style: solid;\n    }\n  }\n\n  .mdc-data-table__row:last-child .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom: none;\n    }\n  }\n}\n\n@mixin row-hover-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin header-row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets row text color (including pagination row text).\n/// @param {Color} $color Row text color\n///\n@mixin row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-total,\n  .mdc-data-table__pagination-rows-per-page-label,\n  .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets rounded shape radius to data table.\n/// @param {Number|List} $radius - Shape radius in `border-radius` CSS format.\n/// @param {Boolean} $rtl-reflexive - Set to `true` to flip radius corners in\n///     RTL context.\n///\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n\n  // Apply same border radius as parent to leading/trailing header cells,\n  // and leading/trailing cells of last row.\n  // Cells that have explicit background color applied require border\n  // radius to take the parents' rounded shape.\n  $border-radius: shape-functions.unpack-radius($radius);\n  $top-left-radius: shape-functions.resolve-radius(list.nth($border-radius, 1));\n  $top-right-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 2)\n  );\n  $bottom-right-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 3)\n  );\n  $bottom-left-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 4)\n  );\n\n  .mdc-data-table__header-cell:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-left-radius, $top-left-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-right-radius,\n          if($rtl-reflexive, $top-left-radius, $top-right-radius)\n        );\n\n        border-top-left-radius: 0;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-right-radius, $top-right-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-left-radius,\n          if($rtl-reflexive, $top-right-radius, $top-left-radius)\n        );\n\n        border-top-right-radius: 0;\n      }\n    }\n  }\n\n  &.mdc-data-table--without-footer\n    .mdc-data-table__row:last-child\n    .mdc-data-table__cell:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-bottom-left-radius, $bottom-left-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-bottom-right-radius,\n          if($rtl-reflexive, $bottom-left-radius, $bottom-right-radius)\n        );\n\n        border-bottom-left-radius: 0;\n      }\n    }\n  }\n\n  &.mdc-data-table--without-footer\n    .mdc-data-table__row:last-child\n    .mdc-data-table__cell:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-bottom-right-radius, $bottom-right-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-bottom-left-radius,\n          if($rtl-reflexive, $bottom-right-radius, $bottom-left-radius)\n        );\n\n        border-bottom-right-radius: 0;\n      }\n    }\n  }\n}\n\n@mixin stroke-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-width: $size;\n    border-style: solid;\n  }\n}\n\n@mixin stroke-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    border-color: $color;\n  }\n}\n\n@mixin header-row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-row {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      min-height: $height;\n    }\n  }\n}\n\n///\n/// Sets cell padding including cell, header cell, row checkbox cell and header\n/// row checkbox cell.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $trailing-padding [$cell-trailing-padding] Trailing padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $trailing-padding: $cell-trailing-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0 $trailing-padding 0 $leading-padding;\n    }\n  }\n\n  @include checkbox-cell-padding(\n    $leading-padding: $leading-padding,\n    $row-checkbox-density-scale: $row-checkbox-density-scale,\n    $query: $query\n  );\n}\n\n///\n/// Sets only row checkbox cell and header row checkbox cell leading padding.\n/// Use `cell-padding()` to set all cell's padding.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin checkbox-cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell--checkbox,\n  .mdc-data-table__cell--checkbox {\n    @include feature-targeting.targets($feat-structure) {\n      // Distance from leading cell bound to checkbox's icon bound should be\n      // 16dp (`$leading-padding`). Calculate required padding excluding\n      // checkbox bounds.\n      $checkbox-icon-size: 24px;\n      $checkbox-touch-size: touch-target.$height;\n      @if $row-checkbox-density-scale and $row-checkbox-density-scale < 0 {\n        $checkbox-touch-size: checkbox-theme.get-ripple-size(\n          $row-checkbox-density-scale\n        );\n      }\n      $leading-padding: $leading-padding -\n        math.div($checkbox-touch-size - $checkbox-icon-size, 2);\n      @include rtl.reflexive-property(padding, $leading-padding, 0);\n    }\n  }\n}\n\n@mixin column-widths($width-list, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @for $i from 1 through list.length($width-list) {\n    .mdc-data-table__row > :nth-child(#{$i}) {\n      @include feature-targeting.targets($feat-structure) {\n        width: list.nth($width-list, $i);\n      }\n    }\n  }\n}\n\n///\n/// Sets density scale for data table. Use corresponding density mixins of child components (such as Checkbox) to apply\n/// density scales which will be rendered inside data table.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to set density of row checkbox and also\n///     automatically adjust the alignment of row checkbox within a cell.\n///     See `checkbox.density()` mixin for supported density scales.\n///\n@mixin density(\n  $density-scale,\n  $row-checkbox-density-scale: null,\n  $pagination-select-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $height: density.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include row-height($height, $query: $query);\n  @include header-row-height(get-header-row-height($height), $query: $query);\n\n  @if $row-checkbox-density-scale {\n    @include checkbox-cell-padding(\n      $leading-padding: $cell-leading-padding,\n      $row-checkbox-density-scale: $row-checkbox-density-scale,\n      $query: $query\n    );\n\n    .mdc-data-table__header-row-checkbox,\n    .mdc-data-table__row-checkbox {\n      @include checkbox-theme.density($row-checkbox-density-scale);\n    }\n  }\n\n  @if $pagination-select-density-scale {\n    @include select-density($pagination-select-density-scale);\n  }\n}\n\n@mixin select-density($density-scale) {\n  @include select-theme.outlined-height(\n    select-theme.$height + density.$interval * $density-scale\n  );\n  .mdc-list-item {\n    @include list-theme.one-line-item-density(\n      $density-scale + 2,\n      $exclude-variants: true\n    );\n  }\n\n  margin: 0;\n}\n\n///\n/// Sets maximum height of data table. Use this to make table vertically\n/// scrollable.\n/// @param {Number} $height\n///\n@mixin max-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      max-height: $height;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:selector';\n@use '@material/theme/gss';\n@use '@material/theme/selector-ext';\n@use '@material/theme/theme';\n\n$include: true !default;\n\n/// Creates a rule that will be applied when a component is within the context\n/// of an RTL layout.\n///\n/// @example - scss\n/// .mdc-foo {\n///   padding-left: 4px;\n///\n///   @include rtl {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n/// }\n///\n/// @example - css\n///   .mdc-foo {\n///     padding-left: 4px;\n///   }\n///\n///   [dir=\"rtl\"] .mdc-foo,\n///   .mdc-foo[dir=\"rtl\"] {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n///\n/// Note that this mixin works by checking for an ancestor element with\n/// `[dir=\"rtl\"]`. As a result, nested `dir` values are not supported:\n///\n/// @example - html\n/// <html dir=\"rtl\">\n///   <!-- ... -->\n///   <div dir=\"ltr\">\n///     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n///   </div>\n/// </html>\n///\n/// In the future, selectors such as the `:dir` pseudo-class\n/// (http://mdn.io/css/:dir) will help us mitigate this.\n///\n/// @content Content to be styled in an RTL context.\n@mixin rtl() {\n  @if ($include) {\n    $dir-rtl: '[dir=rtl]';\n\n    $rtl-selectors: list.join(\n      selector.nest($dir-rtl, &),\n      selector-ext.append-strict(&, $dir-rtl)\n    );\n\n    @at-root {\n      #{$rtl-selectors} {\n        /*rtl:begin:ignore*/\n        @content;\n        /*rtl:end:ignore*/\n      }\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position($position-property, $value, $replace: null) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n\n    // If any replacements are null, treat the entire value as null (do not\n    // emit anything).\n    @each $name, $replacement in $replace {\n      @if $replacement == null {\n        $left-value: null;\n        $right-value: null;\n      }\n    }\n  }\n\n  // Do not emit if either value are null\n  @if $left-value and $right-value {\n    @include _property($left-property, $left-value, $replace: $left-replace);\n    @include _property($right-property, $right-value, $replace: $right-replace);\n\n    @include rtl {\n      @include _property(\n        $left-property,\n        $right-value,\n        $replace: $right-replace\n      );\n      @include _property($right-property, $left-value, $replace: $left-replace);\n    }\n  }\n}\n\n///\n/// Adds RTL ignore annotation when `$mdc-rtl-include` is true.\n///\n@mixin ignore-next-line() {\n  @include gss.annotate(\n    (\n      noflip: $include,\n    )\n  );\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:list';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline {\n    @include base_($query);\n\n    &__leading,\n    &__notch,\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        box-sizing: border-box;\n        height: 100%;\n        border-top: variables.$border-width solid;\n        border-bottom: variables.$border-width solid;\n        pointer-events: none;\n      }\n    }\n\n    &__leading {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          variables.$border-width solid,\n          none\n        );\n\n        width: variables.$leading-width;\n      }\n    }\n\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          none,\n          variables.$border-width solid\n        );\n\n        flex-grow: 1;\n      }\n    }\n\n    &__notch {\n      @include feature-targeting.targets($feat-structure) {\n        flex: 0 0 auto;\n        width: auto;\n        max-width: calc(100% - #{variables.$leading-width} * 2);\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        display: inline-block;\n        position: relative;\n        max-width: 100%;\n      }\n    }\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: clip;\n      }\n    }\n\n    &--upgraded .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        max-width: calc(100% / 0.75);\n      }\n    }\n  }\n\n  .mdc-notched-outline--notched {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(padding, right, 8px);\n\n        border-top: none;\n      }\n    }\n  }\n\n  .mdc-notched-outline--no-label {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin stroke-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-structure) {\n      border-width: $width;\n    }\n  }\n}\n\n///\n/// Adds top offset to compensate for border width box size when it is notched.\n/// Use this when floating label is aligned to center to prevent label jump on focus.\n/// @param {Number} $stroke-width Stroke width of notched outline that needs to be offset.\n///\n@mixin notch-offset($stroke-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline--notched .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: $stroke-width;\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $component-height: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Resolve the radius relative to the notched outline component's height. The\n  // component should provide its current height from its density. The resolved\n  // radius allows percentage radii to be converted to pixels.\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $component-height\n  );\n\n  // Grab the top-left radius. We'll need it to adjust the leading for the\n  // label notch if the resulting radius shape is larger than the default\n  // leading.\n  $top-left-radius: list.nth(\n    shape-functions.unpack-radius($resolved-radius),\n    1\n  );\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  .mdc-notched-outline__leading {\n    // mask the leading to apply the top-left and bottom-left corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 1 0 0 1),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        // If the radius is bigger than the default leading width, we need to\n        // increase the leading width\n        width: $top-left-radius-px;\n        @if ($top-left-is-custom-prop) {\n          // The radius may be a custom property, in which case the above width\n          // is the IE11 fallback value.\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        // If the top-left radius is dynamic, the width of the leading is\n        // the max of whichever is larger: the default leading width or the\n        // value of the custom property.\n        $var: custom-properties.create-var($top-left-radius);\n        // Interpolation is a workaround for sass/sass#3259.\n        @supports (top: max(#{0%})) {\n          width: max(#{variables.$leading-width}, #{$var});\n        }\n      }\n    }\n  }\n\n  // Similar to above, adjust the max-width of the notch if we adjusted the\n  // leading's width.\n  .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        max-width: calc(100% - #{$top-left-radius-px} * 2);\n        @if ($top-left-is-custom-prop) {\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        $var: custom-properties.create-var($top-left-radius);\n        // Interpolation is a workaround for sass/sass#3259.\n        @supports (top: max(#{0%})) {\n          max-width: calc(100% - max(#{variables.$leading-width}, #{$var}) * 2);\n        }\n      }\n    }\n  }\n\n  .mdc-notched-outline__trailing {\n    // mask the leading to apply the top-right and bottom-right corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 0 1 1 0),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n  }\n}\n\n@mixin floating-label-float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets floating label position in notched outline when label is afloat.\n///\n/// @param {Number} $positionY Absolute Y-axis position in `px`.\n/// @param {Number} $positionX Absolute X-axis position in `px`. Defaults to `0`.\n/// @param {Number} $scale Defaults to `.75`.\n///\n/// @todo Replace mixin `mdc-notched-outline-floating-label-float-position` with this mixin when floating label is\n///     center aligned in all the places.\n///\n@mixin floating-label-float-position-absolute(\n  $positionY,\n  $positionX: 0,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust-absolute,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets the max-width for the notch\n///\n/// @param {Number} $max-width Max-width for the notch\n///\n@mixin notch-max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      max-width: $max-width;\n    }\n  }\n}\n\n//\n// Private\n//\n@mixin base_($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    box-sizing: border-box;\n    width: 100%;\n    max-width: 100%;\n    height: 100%;\n    @include rtl.ignore-next-line();\n    text-align: left;\n    pointer-events: none;\n\n    @include rtl.rtl {\n      @include rtl.ignore-next-line();\n      text-align: right;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__cell {\n    @include typography.typography(body2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      overflow: hidden;\n      text-align: left;\n      text-overflow: ellipsis;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--checkbox {\n    @include adaptive-width($query: $query);\n  }\n}\n\n@mixin adaptive-width($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // Set to lowest width to adapt to cell content. Cell width should adapt\n    // to row checkbox size when it is dense.\n    // NOTE: `min-width` does not seem to work on table cells.\n    width: 1px;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n@use './data-table-theme';\n@use './data-table-cell';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__header-cell {\n    @include typography.typography(subtitle2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      outline: none;\n\n      @include rtl.ignore-next-line();\n      text-align: left;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell--checkbox {\n    @include data-table-cell.adaptive-width($query: $query);\n  }\n\n  .mdc-data-table__header-cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.density(\n      $density-scale: data-table-theme.$sort-icon-density-scale,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      // Apply dummy `transform` to avoid pixel shift on sort down animation.\n      transform: rotate(0.0001deg);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 4px);\n    }\n\n    .mdc-data-table__header-cell--numeric & {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(margin, right, 4px);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: functions.standard(transform, $duration: 150ms);\n    }\n\n    .mdc-data-table__header-cell--sorted-descending & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: rotate(-180deg);\n      }\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n\n    &:focus,\n    .mdc-data-table__header-cell:hover &,\n    .mdc-data-table__header-cell--sorted & {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: inline-flex;\n      vertical-align: middle;\n    }\n  }\n\n  .mdc-data-table__header-cell--with-sort {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  .mdc-data-table__sort-status-label {\n    @include dom.visually-hidden($query: $query);\n  }\n}\n\n/// Sets header cell in sticky position on table content vertical scroll.\n@mixin header-cell-sticky($query: $query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      position: sticky;\n      top: 0;\n      z-index: 1;\n    }\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/focus-ring/focus-ring';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n@use '@material/theme/keys';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n\n$ripple-target: '.mdc-icon-button__ripple';\n\n$icon-size: 24px !default;\n$size: 48px !default;\n$minimum-height: 28px !default;\n$maximum-height: $size !default;\n$container-shape: 50%;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    default: $size,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$_custom-property-prefix: 'icon-button';\n\n$light-theme: (\n  disabled-icon-color: theme-color.$on-surface,\n  disabled-icon-opacity: 0.38,\n  icon-color: theme-color.$primary,\n  icon-size: $icon-size,\n  focus-icon-color: theme-color.$primary,\n  focus-state-layer-color: theme-color.$primary,\n  focus-state-layer-opacity: 0.12,\n  hover-icon-color: theme-color.$primary,\n  hover-state-layer-color: theme-color.$primary,\n  hover-state-layer-opacity: 0.08,\n  pressed-icon-color: theme-color.$primary,\n  pressed-state-layer-color: theme-color.$primary,\n  pressed-state-layer-opacity: 0.12,\n  state-layer-size: $size,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n\n  @include _state-layer-size($size: map.get($theme, state-layer-size));\n  @include _icon-size(map.get($theme, icon-size));\n  @include _disabled-icon-opacity(map.get($theme, disabled-icon-opacity));\n  @include _icon-color-with-map(\n    (\n      default: map.get($theme, icon-color),\n      disabled: map.get($theme, disabled-icon-color),\n      focus: map.get($theme, focus-icon-color),\n      hover: map.get($theme, hover-icon-color),\n      pressed: map.get($theme, pressed-icon-color),\n    )\n  );\n\n  // States styles\n  @include ripple-theme.theme-styles(\n    (\n      focus-state-layer-color: map.get($theme, focus-state-layer-color),\n      focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity),\n      hover-state-layer-color: map.get($theme, hover-state-layer-color),\n      hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity),\n      pressed-state-layer-color: map.get($theme, pressed-state-layer-color),\n      pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity),\n    ),\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Sets the density scale for icon button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values range from `-5` to `0`, with `0` being the default.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  @include size($size, $query: $query);\n}\n\n///\n/// Sets the size of the icon-button.\n///\n/// @param {Number} $size - Size value for icon-button.\n///     Size will set the width, height, and padding for the overall component.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $size;\n    height: $size;\n    padding: math.div($size - $icon-size, 2);\n  }\n\n  .mdc-icon-button__focus-ring {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n    }\n  }\n\n  @include ripple-theme.focus {\n    .mdc-icon-button__focus-ring {\n      @include dom.forced-colors-mode($exclude-ie11: true) {\n        @include focus-ring.focus-ring(\n          $query: $query,\n          $container-outer-padding-vertical: 0,\n          $container-outer-padding-horizontal: 0\n        );\n      }\n\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n        max-height: $size;\n        max-width: $size;\n      }\n    }\n  }\n\n  &.mdc-icon-button--reduced-size {\n    $component-size: $size;\n    // Icon button ripple size is capped at 40px for icon buttons with\n    // densities -1 and 0 (icon buttons with sizes 44x44 and 48x48px).\n    // See http://b/192353968 for more info.\n    @if $size >= 40px and $size <= 48px {\n      $component-size: 40px;\n    }\n\n    .mdc-icon-button__ripple {\n      @include feature-targeting.targets($feat-structure) {\n        width: $component-size;\n        height: $component-size;\n      }\n\n      @include touch-target-mixins.margin(\n        $component-height: $component-size,\n        $component-width: $component-size,\n        $touch-target-height: $size,\n        $touch-target-width: $size,\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.focus {\n      .mdc-icon-button__focus-ring {\n        @include feature-targeting.targets($feat-structure) {\n          max-height: $component-size;\n          max-width: $component-size;\n        }\n      }\n    }\n  }\n\n  .mdc-icon-button__touch {\n    @include touch-target-mixins.touch-target(\n      $set-width: true,\n      $query: $query,\n      $height: $size,\n      $width: $size\n    );\n  }\n}\n\n///\n/// Sets the width, height and padding of icon button. Also changes the size of\n/// the icon itself based on button size.\n///\n/// @param {Number} $width - Width value for icon-button.\n/// @param {Number} $height - Height value for icon-button. (default: $width)\n/// @param {Number} $padding - Padding value for icon-button. (default: max($width, $height) / 2)\n/// @deprecated\n///     This mixin provides too much of low level customization.\n///     Please use mdc-icon-button-size instead.\n///\n@mixin icon-size(\n  $width,\n  $height: $width,\n  $padding: math.div(math.max($width, $height), 2),\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $component-width: $width + $padding * 2;\n  $component-height: $height + $padding * 2;\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $component-width;\n    height: $component-height;\n    padding: $padding;\n    font-size: math.max($width, $height);\n  }\n\n  svg,\n  img {\n    @include feature-targeting.targets($feat-structure) {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n///\n/// Sets the font color and the ripple color to the provided color value.\n/// @param {Color} $color - The desired font and ripple color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include ink-color_($color, $query: $query);\n  @include ripple-theme.states(\n    $color,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Flips icon only in RTL context.\n///\n@mixin flip-icon-in-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-button__icon {\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        transform: rotate(180deg);\n      }\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value for a disabled icon button.\n/// @param {Color} $color - The desired font color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Includes ad-hoc high contrast mode support.\n///\n@mixin high-contrast-mode-shim($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // TODO(b/175806874): Use the DOM border mixin after the ripple is moved\n    // away from :before to a dedicated element.\n    outline: solid 3px transparent;\n\n    &:focus {\n      outline: double 5px transparent;\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value. This can be wrapped in\n/// a state qualifier such as `mdc-icon-button-if-disabled_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _state-layer-size($size) {\n  @include theme.property(height, $size);\n  @include theme.property(width, $size);\n}\n\n@mixin _icon-size($size) {\n  @include theme.property(font-size, $size);\n\n  svg,\n  img {\n    @include theme.property(width, $size);\n    @include theme.property(height, $size);\n  }\n}\n\n///\n/// Sets the icon opacity to the given opacity.\n/// @access private\n///\n@mixin _disabled-icon-opacity($opacity) {\n  &:disabled {\n    @include theme.property(opacity, $opacity);\n  }\n}\n\n///\n/// Sets the icon color to the given color.\n/// @param {map} $color-map - The desired icon color, specified as a map of\n///     colors with states {default, disabled, focus, hover, pressed} as keys.\n/// @access private\n///\n@mixin _icon-color-with-map($color-map) {\n  @include ink-color_(state.get-default-state($color-map));\n\n  $disabled: state.get-disabled-state($color-map);\n  @if $disabled {\n    &:disabled {\n      @include ink-color_($disabled);\n    }\n  }\n\n  $focus: state.get-focus-state($color-map);\n  @if $focus {\n    @include ripple-theme.focus {\n      @include ink-color_($focus);\n    }\n  }\n\n  $hover: state.get-hover-state($color-map);\n  @if $hover {\n    &:hover {\n      @include ink-color_($hover);\n    }\n  }\n\n  $pressed: state.get-pressed-state($color-map);\n  @if $pressed {\n    @include ripple-theme.active {\n      @include ink-color_($pressed);\n    }\n  }\n}\n\n@mixin _states-colors($color-map) {\n  // TODO(b/191298796): support focused & pressed key colors.\n\n  $hover: map.get($color-map, hover);\n  @if $hover {\n    @include ripple-theme.states-base-color(\n      $color: $hover,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n///\n/// Helps style the icon button in its disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  &:disabled {\n    @content;\n  }\n}\n","// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n@use '@material/feature-targeting/feature-targeting';\n///\n/// Emits necessary layout styles to set a transparent border around an element\n/// without interfering with the rest of its component layout. The border is\n/// only visible in high-contrast mode. The target element should be a child of\n/// a relatively positioned top-level element (i.e. a ::before pseudo-element).\n///\n/// @param {number} $border-width - The width of the transparent border.\n/// @param {string} $border-style - The style of the transparent border.\n///\n@mixin transparent-border(\n  $border-width: 1px,\n  $border-style: solid,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    border: $border-width $border-style transparent;\n    border-radius: inherit;\n    content: '';\n    pointer-events: none;\n  }\n\n  // Used to satisfy Firefox v94 which does not render transparent borders in HCM (b/206440838).\n  @include forced-colors-mode($exclude-ie11: true) {\n    @include feature-targeting.targets($feat-structure) {\n      border-color: CanvasText;\n    }\n  }\n}\n\n///\n/// Visually hides text content for accessibility. This text should only be\n/// visible to screen reader users.\n/// See https://a11yproject.com/posts/how-to-hide-content/\n///\n@mixin visually-hidden($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap; /* added line */\n    width: 1px;\n  }\n}\n\n/// Selects for IE11 support.\n///\n/// @content styles to emit for IE11 support\n@mixin ie11-support {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n/// Selects for `forced-colors` high contrast mode.\n///\n/// While in `forced-colors` mode, only system colors should be used.\n///\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#system_colors\n/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors\n/// @content styles to emit in `forced-colors` mode\n@mixin forced-colors-mode($exclude-ie11: false) {\n  @if $exclude-ie11 {\n    @media screen and (forced-colors: active) {\n      @content;\n    }\n  } @else {\n    @media screen and (forced-colors: active), (-ms-high-contrast: active) {\n      @content;\n    }\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n\n$ring-radius-default: 8px !default;\n$inner-ring-width-default: 2px !default;\n$inner-ring-color-default: transparent !default;\n$outer-ring-width-default: 2px !default;\n$outer-ring-color-default: transparent !default;\n$container-outer-padding-default: 2px !default;\n\n/// Styles applied to the component's inner focus ring element.\n///\n/// @param $ring-radius [$ring-radius-default] - Focus ring radius.\n/// @param $inner-ring-width [$inner-ring-width-default] - Inner focus ring width.\n/// @param $inner-ring-color [$inner-ring-color-default] - Inner focus ring color.\n/// @param $outer-ring-width [$outer-ring-width-default] - Outer focus ring width.\n/// @param $outer-ring-color [$outer-ring-color-default] - Outer focus ring color.\n/// @param $container-outer-padding [$container-outer-padding-default] - The\n///     distance between the focus ring and the container.\n@mixin focus-ring(\n  $query: feature-targeting.all(),\n  $ring-radius: $ring-radius-default,\n  $inner-ring-width: $inner-ring-width-default,\n  $inner-ring-color: $inner-ring-color-default,\n  $outer-ring-width: $outer-ring-width-default,\n  $outer-ring-color: $outer-ring-color-default,\n  $container-outer-padding-vertical: $container-outer-padding-default,\n  $container-outer-padding-horizontal: $container-outer-padding-default\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $container-size-vertical: 100%;\n  @if $container-outer-padding-vertical != 0 {\n    $container-size-vertical: calc(\n      100% + #{$container-outer-padding-vertical * 2}\n    );\n  }\n  $container-size-horizontal: 100%;\n  @if $container-outer-padding-horizontal != 0 {\n    $container-size-horizontal: calc(\n      100% + #{$container-outer-padding-horizontal * 2}\n    );\n  }\n  $outer-ring-size: 100%;\n  @if $outer-ring-width > 0 {\n    $outer-ring-size: calc(100% + #{$outer-ring-width * 2});\n  }\n  @include feature-targeting.targets($feat-structure) {\n    pointer-events: none;\n    border: $inner-ring-width solid $inner-ring-color;\n    border-radius: $ring-radius - $outer-ring-width;\n    box-sizing: content-box;\n    position: absolute;\n    top: 50%;\n    @include rtl.ignore-next-line();\n    left: 50%;\n    @include rtl.ignore-next-line();\n    transform: translate(-50%, -50%);\n    height: $container-size-vertical;\n    width: $container-size-horizontal;\n\n    @include dom.forced-colors-mode($exclude-ie11: true) {\n      border-color: CanvasText;\n    }\n\n    &::after {\n      content: '';\n      border: $outer-ring-width solid $outer-ring-color;\n      border-radius: $ring-radius;\n      display: block;\n      position: absolute;\n      top: 50%;\n      @include rtl.ignore-next-line();\n      left: 50%;\n      @include rtl.ignore-next-line();\n      transform: translate(-50%, -50%);\n      height: $outer-ring-size;\n      width: $outer-ring-size;\n\n      @include dom.forced-colors-mode($exclude-ie11: true) {\n        border-color: CanvasText;\n      }\n    }\n  }\n}\n/// Customizes the color of the button focus ring.\n///\n/// @param $inner-ring-color [$inner-ring-color-default] - Inner focus ring color.\n/// @param $outer-ring-width [$outer-ring-width-default] - Outer focus ring width.\n@mixin focus-ring-color(\n  $inner-ring-color: $inner-ring-color-default,\n  $outer-ring-color: $outer-ring-color-default\n) {\n  border-color: $inner-ring-color;\n\n  &::after {\n    border-color: $outer-ring-color;\n  }\n}\n\n/// Customizes the border radius of the button focus ring.\n///\n/// @param {Number} $ring-radius - The border radius of the focus ring.\n/// @param {Number} $outer-ring-width [$outer-ring-width] - Width of the outer\n///     ring, required to compute the radius for the inner ring.\n@mixin focus-ring-radius(\n  $ring-radius,\n  $outer-ring-width: $outer-ring-width-default,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    border-radius: $ring-radius - $outer-ring-width;\n\n    &::after {\n      border-radius: $ring-radius;\n    }\n  }\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n\n$height: 48px !default;\n$width: $height !default;\n\n/// Styles applied to the component's touch target wrapper element.\n@mixin wrapper($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-touch-target-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that styles are only emitted once across all components that\n      // have increased touch targets.\n      @include base-mixins.emit-once('mdc-touch-target/wrapper') {\n        // NOTE: Will change to `inline-block` in the future, but keeping as is\n        // temporarily for backwards-compatibility.\n        display: inline;\n      }\n    }\n  }\n}\n\n/// Styles applied to the component's inner touch target element.\n/// By default, only sets the inner element height to the minimum touch target\n/// height ($mdc-touch-target-height).\n/// @param {Boolean} $set-width [false] - Sets the inner element width to the\n///     minimum touch target width ($mdc-touch-target-width).\n/// @param $height [$mdc-touch-target-height] - Touch target height.\n/// @param $width [$mdc-touch-target-width] - Touch target width.\n@mixin touch-target(\n  $set-width: false,\n  $query: feature-targeting.all(),\n  $height: $height,\n  $width: $width\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 50%;\n    height: $height;\n  }\n\n  @if $set-width {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.ignore-next-line();\n      left: 50%;\n      width: $width;\n      transform: translate(-50%, -50%);\n    }\n  } @else {\n    @include feature-targeting.targets($feat-structure) {\n      left: 0;\n      right: 0;\n      transform: translateY(-50%);\n    }\n  }\n}\n\n/// Applies margin to the component with the increased touch target,\n/// to compensate for the touch target.\n@mixin margin(\n  $component-height,\n  $component-width: null,\n  $touch-target-height: $height,\n  $touch-target-width: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $vertical-margin-value: math.div($touch-target-height - $component-height, 2);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: $vertical-margin-value;\n    margin-bottom: $vertical-margin-value;\n  }\n\n  @if $component-width {\n    $horizontal-margin-value: math.div(\n      $touch-target-width - $component-width,\n      2\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      margin-right: $horizontal-margin-value;\n      margin-left: $horizontal-margin-value;\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n\n@mixin states-background-selector($ripple-target) {\n  #{$ripple-target}::before {\n    @content;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__progress-indicator {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n      position: absolute;\n      width: 100%;\n    }\n\n    .mdc-data-table--in-progress & {\n      @include feature-targeting.targets($feat-structure) {\n        display: block;\n      }\n    }\n  }\n\n  .mdc-data-table__scrim {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('background-color', surface);\n\n      height: 100%;\n      // TODO(b/151453287): Set appropriate opacity value once we've a UX\n      // guidance.\n      opacity: 0.32;\n      position: absolute;\n      top: 0;\n      width: 100%;\n    }\n  }\n}\n","@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n@use '@material/rtl/mixins' as rtl;\n@use '@material/icon-button/icon-button-theme';\n@use '@material/select/select-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/menu/mixins' as menu-theme;\n@use './data-table-theme';\n\n// stylelint-disable selector-class-pattern\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n/// Sets core styles for data table pagination.\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__pagination {\n    @include typography.typography(body2, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      display: flex;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-data-table__pagination-trailing {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 4px);\n\n      align-items: center;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: flex-end;\n    }\n  }\n\n  .mdc-data-table__pagination-navigation {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: flex;\n    }\n  }\n\n  .mdc-data-table__pagination-button {\n    @include icon-button-theme.flip-icon-in-rtl($query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 4px);\n    }\n  }\n\n  .mdc-data-table__pagination-total {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(\n        margin,\n        $left-value: 14px,\n        $right-value: 36px\n      );\n\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 22px);\n\n      align-items: center;\n      display: inline-flex;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, right, 12px);\n\n      white-space: nowrap;\n    }\n  }\n\n  .mdc-data-table__pagination-rows-per-page-select {\n    @include select-theme.variable-width($min-width: 80px, $query: $query);\n    @include menu-theme.min-width(80px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 8px 0;\n    }\n\n    // TODO(b/158196144): Set it to `-5` density scale using density mixin when\n    // select component supports it.\n    @include select-theme.outlined-height(\n      data-table-theme.$pagination-rows-per-page-select-height,\n      $query: $query\n    );\n    .mdc-list-item {\n      @include list-theme.one-line-item-height(\n        data-table-theme.$pagination-rows-per-page-select-height,\n        $query: $query\n      );\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:math';\n@use 'sass:color';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/tokens/resolvers';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/line-ripple/mixins' as line-ripple-mixins;\n@use '@material/list/mixins' as list-mixins;\n@use '@material/list/evolution-mixins' as list-evolution-mixins;\n@use '@material/menu-surface/mixins' as menu-surface-mixins;\n@use '@material/notched-outline/mixins' as notched-outline-mixins;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/rtl/rtl';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/theme/gss';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/variables' as theme-variables;\n@use '@material/typography/mixins' as typography-mixins;\n@use '@material/typography/typography';\n@use './select-icon-theme';\n@use './select-helper-text-theme';\n\n$ripple-target: '.mdc-select__ripple';\n\n@function get-outlined-label-position-y($select-anchor-height) {\n  @return math.div($select-anchor-height, 2) +\n    math.div(notched-outline-variables.$label-box-height, 2);\n}\n\n$arrow-padding: 52px !default;\n$label-padding: 16px !default;\n$height: 56px !default;\n$minimum-height-for-filled-label: 52px !default;\n$filled-baseline-top: 40px !default;\n$selected-text-height: 28px !default;\n$anchor-padding-left: 16px !default;\n$anchor-padding-left-with-leading-icon: 0 !default;\n$anchor-padding-right: 0 !default;\n$outlined-stroke-width: 2px !default;\n$default-width: 200px !default;\n$shape-radius: small !default;\n\n$minimum-height: 40px !default;\n$minimum-height-for-filled-label: 52px !default;\n$maximum-height: $height !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$ink-color: rgba(theme-variables.prop-value(on-surface), 0.87) !default;\n$dropdown-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.54\n) !default;\n$label-color: rgba(theme-variables.prop-value(on-surface), 0.6) !default;\n$focused-label-color: rgba(theme-variables.prop-value(primary), 0.87) !default;\n$bottom-line-idle-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.42\n) !default;\n$bottom-line-hover-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.87\n) !default;\n\n$fill-color: color.mix(\n  theme-variables.prop-value(on-surface),\n  theme-variables.prop-value(surface),\n  4%\n) !default;\n\n// Disabled Styles\n$disabled-label-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-ink-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-fill-color: color.mix(\n  theme-variables.prop-value(on-surface),\n  theme-variables.prop-value(surface),\n  2%\n) !default;\n$disabled-fill-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n$disabled-bottom-line-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n$disabled-dropdown-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-outline-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.06\n) !default;\n\n$outlined-idle-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n$outlined-hover-border: rgba(\n  theme-variables.prop-value(on-surface),\n  0.87\n) !default;\n\n$label-position-y: 106% !default;\n$outline-label-offset: 16px !default;\n$outlined-label-position-y: get-outlined-label-position-y($height) !default;\n$outlined-with-leading-icon-label-position-x: 32px !default;\n\n$dropdown-transition-duration: 150ms !default;\n// Transition durartions to active state\n$icon-active-fade-out-duration: 0.33 * $dropdown-transition-duration !default;\n$icon-active-fade-in-duration: 0.67 * $dropdown-transition-duration !default;\n// Transition durartions to inactive state\n$icon-inactive-fade-out-duration: 0.5 * $dropdown-transition-duration !default;\n$icon-inactive-fade-in-duration: 0.5 * $dropdown-transition-duration !default;\n\n// Error colors\n$error-color: error !default;\n\n$_light-theme: (\n  // Implement `menu-cascading-menu-indicator-icon-color` when select supports.\n  // Implement `menu-cascading-menu-indicator-icon-size` when select supports.\n  // Implement `menu-container-surface-tint-layer-color` when select supports.\n  // Implement `text-field-disabled-trailing-icon-color` when select supports.\n  // Implement `text-field-hover-trailing-icon-color` when select supports.\n  // Implement `text-field-focus-trailing-icon-color` when select supports.\n  // Implement `text-field-error-trailing-icon-color` when select supports.\n  // Implement `text-field-error-hover-trailing-icon-color` when select supports.\n  // Implement `text-field-error-focus-trailing-icon-color` when select supports.\n  // Implement `text-field-trailing-icon-color` when select supports.\n  // Implement `text-field-trailing-icon-size` when select supports.\n  // Implement `text-field-error-hover-state-layer-color` when select supports.\n  // Implement `text-field-error-hover-state-layer-opacity` when select supports.\n  // Implement `text-field-hover-state-layer-color` when select supports.\n  // Implement `text-field-hover-state-layer-opacity` when select supports.\n  menu-container-color: null,\n  menu-container-elevation: null,\n  menu-container-shadow-color: null,\n  menu-container-shape: null,\n  menu-divider-color: null,\n  menu-divider-height: null,\n  menu-list-item-container-height: null,\n  menu-list-item-label-text-color: null,\n  menu-list-item-label-text-font: null,\n  menu-list-item-label-text-line-height: null,\n  menu-list-item-label-text-size: null,\n  menu-list-item-label-text-tracking: null,\n  menu-list-item-label-text-weight: null,\n  menu-list-item-selected-container-color: null,\n  menu-list-item-with-leading-icon-leading-icon-color: null,\n  menu-list-item-with-leading-icon-leading-icon-size: null,\n  menu-list-item-with-trailing-icon-trailing-icon-color: null,\n  menu-list-item-with-trailing-icon-trailing-icon-size: null,\n  text-field-active-indicator-color: null,\n  text-field-active-indicator-height: null,\n  text-field-caret-color: null,\n  // Token key `text-field-hover-caret-color` not available on DSDB.\n  text-field-hover-caret-color: null,\n  // Token key `text-field-focus-caret-color` not available on DSDB.\n  text-field-focus-caret-color: null,\n  text-field-container-color: null,\n  text-field-container-height: null,\n  text-field-container-shape: null,\n  text-field-disabled-active-indicator-color: null,\n  text-field-disabled-active-indicator-height: null,\n  text-field-disabled-active-indicator-opacity: null,\n  text-field-disabled-container-color: null,\n  text-field-disabled-container-opacity: null,\n  text-field-disabled-input-text-color: null,\n  text-field-disabled-input-text-opacity: null,\n  text-field-disabled-label-text-color: null,\n  text-field-disabled-label-text-opacity: null,\n  text-field-disabled-leading-icon-color: null,\n  text-field-disabled-leading-icon-opacity: null,\n  text-field-disabled-outline-color: null,\n  text-field-disabled-outline-opacity: null,\n  text-field-disabled-outline-width: null,\n  text-field-disabled-supporting-text-color: null,\n  text-field-disabled-supporting-text-opacity: null,\n  text-field-disabled-trailing-icon-opacity: null,\n  text-field-error-active-indicator-color: null,\n  text-field-error-focus-active-indicator-color: null,\n  // Token key `text-field-error-caret-color` not available on DSDB.\n  text-field-error-caret-color: null,\n  // Token key `text-field-error-hover-caret-color` not available on DSDB.\n  text-field-error-hover-caret-color: null,\n  text-field-error-focus-caret-color: null,\n  text-field-error-focus-input-text-color: null,\n  text-field-error-focus-label-text-color: null,\n  text-field-error-focus-leading-icon-color: null,\n  text-field-error-focus-outline-color: null,\n  text-field-error-focus-supporting-text-color: null,\n  text-field-error-hover-active-indicator-color: null,\n  text-field-error-hover-input-text-color: null,\n  text-field-error-hover-label-text-color: null,\n  text-field-error-hover-leading-icon-color: null,\n  text-field-error-hover-outline-color: null,\n  text-field-error-hover-supporting-text-color: null,\n  text-field-error-input-text-color: null,\n  text-field-error-label-text-color: null,\n  text-field-error-leading-icon-color: null,\n  text-field-error-outline-color: null,\n  text-field-error-supporting-text-color: null,\n  text-field-focus-active-indicator-color: null,\n  text-field-focus-active-indicator-height: null,\n  text-field-focus-input-text-color: null,\n  text-field-focus-label-text-color: null,\n  text-field-focus-leading-icon-color: null,\n  text-field-focus-outline-color: null,\n  text-field-focus-outline-width: null,\n  text-field-focus-supporting-text-color: null,\n  text-field-hover-active-indicator-color: null,\n  text-field-hover-active-indicator-height: null,\n  text-field-hover-input-text-color: null,\n  text-field-hover-label-text-color: null,\n  text-field-hover-leading-icon-color: null,\n  text-field-hover-outline-color: null,\n  text-field-hover-outline-width: null,\n  text-field-hover-supporting-text-color: null,\n  text-field-input-text-color: null,\n  text-field-input-text-font: null,\n  text-field-input-text-line-height: null,\n  text-field-input-text-size: null,\n  text-field-input-text-tracking: null,\n  text-field-input-text-weight: null,\n  text-field-label-text-color: null,\n  text-field-label-text-font: null,\n  text-field-label-text-line-height: null,\n  text-field-label-text-populated-line-height: null,\n  text-field-label-text-populated-size: null,\n  text-field-label-text-size: null,\n  text-field-label-text-tracking: null,\n  text-field-label-text-weight: null,\n  text-field-leading-icon-color: null,\n  text-field-leading-icon-size: null,\n  text-field-outline-color: null,\n  text-field-outline-width: null,\n  text-field-supporting-text-color: null,\n  text-field-supporting-text-font: null,\n  text-field-supporting-text-line-height: null,\n  text-field-supporting-text-size: null,\n  text-field-supporting-text-tracking: null,\n  text-field-supporting-text-weight: null\n);\n\n@mixin theme-styles($theme, $resolvers: resolvers.$material) {\n  @include theme.validate-theme-keys($_light-theme, $theme);\n\n  @include container-fill-color(\n    (\n      default: map.get($theme, text-field-container-color),\n      disabled: map.get($theme, text-field-disabled-container-color),\n    )\n  );\n  @include outline-color(\n    (\n      default: map.get($theme, text-field-outline-color),\n      hover: map.get($theme, text-field-hover-outline-color),\n      focus: map.get($theme, text-field-focus-outline-color),\n      disabled: map.get($theme, text-field-disabled-outline-color),\n    )\n  );\n  @include _error-outline-color(\n    (\n      default: map.get($theme, text-field-error-outline-color),\n      hover: map.get($theme, text-field-error-hover-outline-color),\n      focus: map.get($theme, text-field-error-focus-outline-color),\n    )\n  );\n  @include outline-width(\n    (\n      default: map.get($theme, text-field-outline-width),\n      hover: map.get($theme, text-field-hover-outline-width),\n      focus: map.get($theme, text-field-focus-outline-width),\n    )\n  );\n  @include _menu-container-color(map.get($theme, menu-container-color));\n  @include _menu-container-elevation(\n    map.get($resolvers, elevation),\n    $shadow-color: map.get($theme, menu-container-shadow-color),\n    $elevation: map.get($theme, menu-container-elevation)\n  );\n  @include _menu-container-shape(map.get($theme, menu-container-shape));\n  @include _menu-divider-color(map.get($theme, menu-divider-color));\n  @include _menu-divider-height(map.get($theme, menu-divider-height));\n  @include _menu-list-item-container-height(\n    map.get($theme, menu-list-item-container-height)\n  );\n  @include _menu-list-item-label-text-color(\n    map.get($theme, menu-list-item-label-text-color)\n  );\n  @include _menu-list-item-label-text-typography(\n    (\n      font: map.get($theme, menu-list-item-label-text-font),\n      line-height: map.get($theme, menu-list-item-label-text-line-height),\n      size: map.get($theme, menu-list-item-label-text-size),\n      tracking: map.get($theme, menu-list-item-label-text-tracking),\n      weight: map.get($theme, menu-list-item-label-text-weight),\n    )\n  );\n  @include _menu-list-item-selected-container-color(\n    map.get($theme, menu-list-item-selected-container-color)\n  );\n  @include _menu-list-item-with-leading-icon-leading-icon-color(\n    map.get($theme, menu-list-item-with-leading-icon-leading-icon-color)\n  );\n  @include _menu-list-item-with-leading-icon-leading-icon-size(\n    map.get($theme, menu-list-item-with-leading-icon-leading-icon-size)\n  );\n  // TODO: Create new mixin for trailing icon theming when select supports it.\n  @include _menu-list-item-with-leading-icon-leading-icon-color(\n    map.get($theme, menu-list-item-with-trailing-icon-trailing-icon-color)\n  );\n  @include _menu-list-item-with-leading-icon-leading-icon-size(\n    map.get($theme, menu-list-item-with-trailing-icon-trailing-icon-size)\n  );\n  @include bottom-line-color(\n    (\n      default: map.get($theme, text-field-active-indicator-color),\n      hover: map.get($theme, text-field-hover-active-indicator-color),\n      focus: map.get($theme, text-field-focus-active-indicator-color),\n      disabled: map.get($theme, text-field-disabled-indicator-color),\n    )\n  );\n  @include _text-field-error-active-indicator-color(\n    (\n      default: map.get($theme, text-field-error-active-indicator-color),\n      hover: map.get($theme, text-field-error-hover-active-indicator-color),\n      focus: map.get($theme, text-field-error-focus-active-indicator-color),\n    )\n  );\n  @include _text-field-active-indicator-height(\n    map.get($theme, text-field-active-indicator-height)\n  );\n  @include _text-field-caret-color(\n    (\n      default: map.get($theme, text-field-caret-color),\n      hover: map.get($theme, text-field-hover-caret-color),\n      focus: map.get($theme, text-field-focus-caret-color),\n    )\n  );\n  @include _text-field-error-caret-color(\n    (\n      default: map.get($theme, text-field-error-caret-color),\n      hover: map.get($theme, text-field-error-hover-caret-color),\n      focus: map.get($theme, text-field-error-focus-caret-color),\n    )\n  );\n  @include ink-color(\n    (\n      default: map.get($theme, text-field-input-text-color),\n      hover: map.get($theme, text-field-hover-input-text-color),\n      focus: map.get($theme, text-field-focus-input-text-color),\n      disabled: map.get($theme, text-field-disabled-input-text-color),\n    )\n  );\n  @include _error-input-text-color(\n    (\n      default: map.get($theme, text-field-error-input-text-color),\n      hover: map.get($theme, text-field-error-hover-input-text-color),\n      focus: map.get($theme, text-field-error-focus-input-text-color),\n    )\n  );\n  @include label-color(\n    (\n      default: map.get($theme, text-field-label-text-color),\n      hover: map.get($theme, text-field-hover-label-text-color),\n      focus: map.get($theme, text-field-focus-label-text-color),\n      disabled: map.get($theme, text-field-disabled-label-text-color),\n    )\n  );\n  @include label-floating-color(\n    (\n      default: map.get($theme, text-field-label-text-color),\n      hover: map.get($theme, text-field-hover-label-text-color),\n      focus: map.get($theme, text-field-focus-label-text-color),\n      disabled: map.get($theme, text-field-disabled-label-text-color),\n    )\n  );\n  @include _error-label-text-color(\n    (\n      default: map.get($theme, text-field-error-label-text-color),\n      hover: map.get($theme, text-field-error-hover-label-text-color),\n      focus: map.get($theme, text-field-error-focus-label-text-color),\n    )\n  );\n  @include _text-field-leading-icon-color(\n    (\n      default: map.get($theme, text-field-leading-icon-color),\n      hover: map.get($theme, text-field-hover-leading-icon-color),\n      focus: map.get($theme, text-field-focus-leading-icon-color),\n      disabled: map.get($theme, text-field-disabled-leading-icon-color),\n    )\n  );\n  @include _error-text-field-leading-icon-color(\n    (\n      default: map.get($theme, text-field-error-leading-icon-color),\n      hover: map.get($theme, text-field-error-hover-leading-icon-color),\n      focus: map.get($theme, text-field-error-focus-leading-icon-color),\n    )\n  );\n  @include select-helper-text-theme.helper-text-color(\n    (\n      default: map.get($theme, text-field-supporting-text-color),\n      disabled: map.get($theme, text-field-disabled-supporting-text-color),\n    )\n  );\n  @include select-helper-text-theme.helper-text-validation-color(\n    map.get($theme, text-field-error-supporting-text-color)\n  );\n  @include _text-field-input-text-typography(\n    (\n      font: map.get($theme, text-field-input-text-font),\n      line-height: map.get($theme, text-field-input-text-line-height),\n      size: map.get($theme, text-field-input-text-size),\n      tracking: map.get($theme, text-field-input-text-tracking),\n      weight: map.get($theme, text-field-input-text-weight),\n    )\n  );\n  @include _text-field-label-text-typography(\n    (\n      font: map.get($theme, text-field-label-text-font),\n      line-height: map.get($theme, text-field-label-text-line-height),\n      size: map.get($theme, text-field-label-text-size),\n      tracking: map.get($theme, text-field-label-text-tracking),\n      weight: map.get($theme, text-field-label-text-weight),\n    )\n  );\n  @include _text-field-label-text-populated-typography(\n    (\n      line-height: map.get($theme, text-field-label-text-populated-line-height),\n      size: map.get($theme, text-field-label-text-populated-size),\n    )\n  );\n  @include _text-field-supporting-text-typography(\n    (\n      font: map.get($theme, text-field-supporting-text-font),\n      line-height: map.get($theme, text-field-supporting-text-line-height),\n      size: map.get($theme, text-field-supporting-text-size),\n      tracking: map.get($theme, text-field-supporting-text-tracking),\n      weight: map.get($theme, text-field-supporting-text-weight),\n    )\n  );\n}\n\n@mixin _text-field-supporting-text-typography($typography-theme) {\n  & + .mdc-select-helper-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _text-field-input-text-typography($typography-theme) {\n  .mdc-select__selected-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _text-field-label-text-populated-typography($typography-theme) {\n  .mdc-floating-label--float-above,\n  // Used for CSS specificity to match with selector used in `outlined-height()`.\n  &.mdc-select--with-leading-icon .mdc-select__anchor .mdc-notched-outline .mdc-floating-label.mdc-floating-label--float-above {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _text-field-label-text-typography($typography-theme) {\n  .mdc-floating-label {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin _error-outline-color($color) {\n  &.mdc-select--invalid {\n    @include outline-color($color);\n  }\n}\n\n@mixin _error-text-field-leading-icon-color($color) {\n  &.mdc-select--invalid {\n    @include _text-field-leading-icon-color($color);\n  }\n}\n\n@mixin _text-field-leading-icon-color($color) {\n  @include _if-enabled {\n    @include _set-text-field-leading-icon-color(\n      state.get-default-state($color)\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _set-text-field-leading-icon-color(\n        state.get-hover-state($color)\n      );\n    }\n\n    @include _if-focused {\n      @include _set-text-field-leading-icon-color(\n        state.get-focus-state($color)\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _set-text-field-leading-icon-color(\n      state.get-disabled-state($color)\n    );\n  }\n}\n\n@mixin _set-text-field-leading-icon-color($color) {\n  .mdc-select__anchor .mdc-select__icon {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _error-label-text-color($color) {\n  &.mdc-select--invalid {\n    @include label-floating-color($color);\n  }\n}\n\n@mixin _error-input-text-color($color) {\n  &.mdc-select--invalid {\n    @include ink-color($color);\n  }\n}\n\n@mixin _text-field-caret-color($color) {\n  @include dropdown-icon-color($color);\n}\n\n@mixin _text-field-error-caret-color($color) {\n  &.mdc-select--invalid {\n    @include dropdown-icon-color($color);\n  }\n}\n\n@mixin _text-field-error-active-indicator-color($color) {\n  &.mdc-select--invalid {\n    @include bottom-line-color($color);\n  }\n}\n\n@mixin _text-field-active-indicator-height($height) {\n  .mdc-line-ripple {\n    @include line-ripple-mixins.height($height);\n  }\n}\n\n@mixin _menu-list-item-with-leading-icon-leading-icon-color($color) {\n  &:not(.mdc-select--disabled) .mdc-select__option .mdc-select__icon {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _menu-list-item-with-leading-icon-leading-icon-size($size) {\n  &:not(.mdc-select--disabled) .mdc-select__option .mdc-select__icon {\n    @include theme.property(font-size, $size);\n  }\n}\n\n@mixin _menu-list-item-selected-container-color($color) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-item-selected-container-color($color);\n  }\n}\n\n@mixin _menu-list-item-label-text-typography($typography-theme) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-primary-text-typography(\n      $typography-theme\n    );\n  }\n}\n\n@mixin _menu-list-item-label-text-color($color) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-primary-text-ink-color($color);\n  }\n}\n\n@mixin _menu-list-item-container-height($height) {\n  .mdc-select__option {\n    @include list-evolution-mixins.list-item-height($height);\n  }\n}\n\n@mixin _menu-divider-color($color) {\n  .mdc-select__list {\n    @include list-evolution-mixins.divider-color($color);\n  }\n}\n\n@mixin _menu-divider-height($height) {\n  .mdc-select__list {\n    @include list-evolution-mixins.divider-height($height);\n  }\n}\n\n@mixin _menu-container-color($color) {\n  .mdc-select__menu {\n    @include menu-surface-mixins.fill-color($color);\n  }\n}\n\n@mixin _menu-container-elevation($resolver, $shadow-color, $elevation) {\n  .mdc-select__menu {\n    @include elevation-theme.with-resolver(\n      $resolver,\n      $elevation: $elevation,\n      $shadow-color: $shadow-color\n    );\n  }\n}\n\n@mixin _menu-container-shape($shape) {\n  .mdc-select__menu {\n    @include menu-surface-mixins.shape-radius($shape);\n  }\n}\n\n@mixin menu-list-item-secondary-label-text-color($color) {\n  .mdc-select__list {\n    @include list-evolution-mixins.list-secondary-text-ink-color($color);\n  }\n}\n\n@mixin menu-list-item-secondary-label-text-typography($typography-theme) {\n  .mdc-select__list {\n    @include list-evolution-mixins.list-secondary-text-typography(\n      $typography-theme\n    );\n  }\n}\n\n/// Sets the min-width of the select.\n/// @param {Number} $min-width - The desired min-width.\n/// @deprecated using this mixin is no longer required, and clients may set\n///             the attribute directly\n@mixin min-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    min-width: $min-width;\n  }\n}\n\n/// Sets the select behavior to change width dynamically based on content.\n/// @param {Number} $min-width - The min-width of the select, which should be\n///     large enough to allow the label (if exists) to display in full.\n@mixin variable-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n      min-width: $min-width;\n    }\n  }\n}\n\n@mixin ink-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _ink-color(state.get-default-state($color-or-map), $query: $query);\n  }\n\n  @include _if-disabled {\n    @include _ink-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin container-fill-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _container-fill-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  @include _if-disabled {\n    @include _container-fill-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin dropdown-icon-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _dropdown-icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _dropdown-icon-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _if-focused {\n      @include _dropdown-icon-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _dropdown-icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin label-floating-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _label-floating-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused):hover {\n      @include _label-floating-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin bottom-line-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _bottom-line-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    // bottom line inactive/active are on different elements, does not need\n    // to check for :not() focused\n    &:hover {\n      @include _bottom-line-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _focused-line-ripple-color(\n      state.get-focus-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  @include _if-disabled {\n    @include _bottom-line-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin label-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _label-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    @include _if-focused {\n      @include _label-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    &:not(.mdc-select--focused):hover {\n      @include _label-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _label-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-color($color-or-map, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _outline-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:not(.mdc-select--focused) .mdc-select__anchor:hover {\n      @include _hover-outline-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include _if-focused {\n      @include _focused-outline-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  @include _if-disabled {\n    @include _outline-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-width($width) {\n  @include _if-enabled {\n    @include _outline-width(state.get-default-state($width));\n\n    &:not(.mdc-select--focused) .mdc-select__anchor:hover {\n      @include _outline-width(state.get-hover-state($width));\n    }\n\n    @include _if-focused {\n      .mdc-notched-outline {\n        @include _outline-width(state.get-focus-state($width));\n      }\n    }\n  }\n}\n\n@mixin _outline-width($width) {\n  @if $width {\n    @include notched-outline-mixins.stroke-width($width);\n  }\n}\n\n///\n/// Sets the dropdown icon to the specified size.\n///\n@mixin dropdown-icon-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__dropdown-icon {\n    @include feature-targeting.targets($feat-structure) {\n      width: $size;\n      height: $size;\n    }\n  }\n}\n\n@mixin filled-shape-radius(\n  $radius,\n  $density-scale: $density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @if meta.type-of($radius) == 'list' and list.length($radius) > 2 {\n    @error \"mdc-select: Invalid radius #{$radius}. Only top-left and top-right corners may be customized.\";\n  }\n\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  $masked-radius: shape-functions.mask-radius($radius, 1 1 0 0);\n\n  .mdc-select__anchor {\n    @include shape-mixins.radius(\n      $masked-radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n@mixin outline-shape-radius(\n  $radius,\n  $density-scale: $density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all(),\n  $height: null\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if not $height {\n    $height: density-functions.prop-value(\n      $density-config: $density-config,\n      $density-scale: $density-scale,\n      $property-name: height,\n    );\n  }\n\n  .mdc-notched-outline {\n    @include notched-outline-mixins.shape-radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $height\n  );\n  $unpacked-radius: shape-functions.unpack-radius($resolved-radius);\n  $top-left-radius: list.nth($unpacked-radius, 1);\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  @if (\n    $top-left-is-custom-prop or\n      $top-left-radius-px >\n      notched-outline-variables.$leading-width\n  ) {\n    .mdc-select__anchor {\n      @include _apply-outline-shape-padding(\n        padding-left,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n\n      @include rtl.rtl {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          padding-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          padding-right,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n      }\n    }\n\n    + .mdc-select-helper-text {\n      @include _apply-outline-shape-padding(\n        margin-left,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n\n      @include rtl.rtl {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          margin-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          margin-right,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n      }\n    }\n\n    // Unlike textfield, select does not need to re-apply leading icon padding.\n    // This is because select only has one potential leading class, not two\n    // extra classes like textfield (leading + trailing). Textfield's two extra\n    // classes can cause specificity conflicts, requiring everything to be\n    // re-applied.\n  }\n}\n\n///\n/// Sets density scale for filled select variant.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n///\n@mixin filled-density(\n  $density-scale,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include filled-height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for filled select variant with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n///\n@mixin filled-with-leading-icon-density(\n  $density-scale,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include filled-with-leading-icon-height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for outlined select (Excluding outlined select with leading icon).\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-height($height, $query: $query);\n  @include _list-density($density-scale, $query: $query);\n}\n\n///\n/// Sets density scale for outlined select with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-with-leading-icon-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-with-leading-icon-height($height, $query: $query);\n  @include _list-density($density-scale, $query: $query);\n}\n\n@mixin _list-density($density-scale, $query) {\n  @include list-mixins.deprecated-single-line-density(\n    $density-scale,\n    $query: $query\n  );\n  .mdc-select__one-line-option {\n    @include list-evolution-mixins.one-line-item-density(\n      $density-scale,\n      $exclude-variants: true,\n      $query: $query\n    );\n  }\n  .mdc-select__two-line-option {\n    @include list-evolution-mixins.two-line-item-density(\n      $density-scale,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets height of default select variant.\n///\n/// @param {Number} $new-height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n/// @param {Number} $filled-baseline-top The baseline from the top of the anchor\n///     that the input should be aligned to for a filled variant with a label\n/// @access public\n///\n@mixin filled-height(\n  $new-height,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $filled-baseline-top: $filled-baseline-top,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n\n    // Filled variant is aligned to baseline...\n    @include typography-mixins.baseline(\n      $top: $filled-baseline-top,\n      $display: flex,\n      $query: $query\n    );\n    // ...unless it is too small to display a label\n    @if $new-height < $minimum-height-for-filled-label {\n      @include center-aligned($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        .mdc-floating-label {\n          display: none;\n        }\n      }\n    }\n  }\n\n  // No-label variants are always centered\n  &.mdc-select--no-label .mdc-select__anchor {\n    @include center-aligned($query: $query);\n  }\n\n  @if $new-height < $height {\n    @include dropdown-icon-size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--filled {\n      @include truncate-floating-label-max-width(\n        $leading-icon-size: 0,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of filled select variant with leading icon.\n///\n/// @param {Number} $height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled selects at which to allow floating labels.\n/// @param {Number} $filled-baseline-top The baseline from the top of the anchor\n///     that the input should be aligned to for a filled variant with a label\n/// @access public\n///\n@mixin filled-with-leading-icon-height(\n  $new-height,\n  $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n  $filled-baseline-top: $filled-baseline-top,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include filled-height(\n    $new-height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $filled-baseline-top: $filled-baseline-top,\n    $query: $query\n  );\n\n  @if $new-height < $height {\n    @include select-icon-theme.size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--filled {\n      @include truncate-floating-label-max-width(\n        $leading-icon-size: select-icon-theme.$dense-icon-size,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n\n    .mdc-deprecated-list-item__graphic {\n      width: select-icon-theme.$dense-icon-size;\n      height: select-icon-theme.$dense-icon-size;\n    }\n\n    @include list-evolution-mixins.item-start-size(\n      $width: select-icon-theme.$dense-icon-size + 12px,\n      $height: select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    .mdc-select__anchor {\n      @include leading-icon-floating-label-position(\n        select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of outlined select variant (Excluding outlined select with leading icon).\n///\n/// @param {Number} $new-height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n///\n@mixin outlined-height(\n  $new-height,\n  $keyframe-suffix: select-outlined-#{$new-height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $positionY: get-outlined-label-position-y($new-height);\n\n  .mdc-select__anchor {\n    // Floating label position\n    @include notched-outline-mixins.floating-label-float-position-absolute(\n      $positionY,\n      $query: $query\n    );\n\n    // Floating label animation\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n    @at-root {\n      @include floating-label-mixins.shake-keyframes(\n        $keyframe-suffix,\n        $positionY,\n        $query: $query\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n  }\n\n  @if $new-height < $height {\n    @include dropdown-icon-size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--outlined {\n      @include truncate-notched-outline-max-width(\n        $leading-icon-size: 0,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n///\n/// Sets height of outlined select with leading icon variant.\n///\n/// @param {Number} $new-height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n///\n@mixin outlined-with-leading-icon-height(\n  $new-height,\n  $keyframe-suffix: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__anchor {\n    @if $new-height < $height {\n      @include dropdown-icon-size(\n        select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n      @include outlined-with-leading-icon-floating-label-position-animation(\n        $new-height,\n        select-icon-theme.$dense-icon-size,\n        $keyframe-suffix,\n        $query: $query\n      );\n    } @else {\n      @include outlined-with-leading-icon-floating-label-position-animation(\n        $new-height,\n        select-icon-theme.$icon-size,\n        $keyframe-suffix,\n        $query: $query\n      );\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      height: $new-height;\n    }\n  }\n\n  @if $new-height < $height {\n    .mdc-deprecated-list-item__graphic {\n      width: select-icon-theme.$dense-icon-size;\n      height: select-icon-theme.$dense-icon-size;\n    }\n\n    @include list-evolution-mixins.item-start-size(\n      $width: select-icon-theme.$dense-icon-size + 12px,\n      $height: select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    @include select-icon-theme.size(\n      select-icon-theme.$dense-icon-size,\n      $query: $query\n    );\n\n    &.mdc-select--outlined {\n      @include truncate-notched-outline-max-width(\n        $leading-icon-size: select-icon-theme.$dense-icon-size,\n        $dropdown-icon-size: select-icon-theme.$dense-icon-size,\n        $query: $query\n      );\n    }\n  }\n}\n\n// $add-label-padding is copied from textfield's mixin, even though select\n// always sets it to true. This is to try and keep things aligned between select\n// and textfield for when these styles are refactored into shared styles.\n@mixin _apply-outline-shape-padding(\n  $property,\n  $padding,\n  $add-label-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $padding-is-custom-prop: custom-properties.is-custom-prop($padding);\n  $padding-px: $padding;\n  @if ($padding-is-custom-prop) {\n    $padding-px: custom-properties.get-fallback($padding);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // The shape should only change the padding if the radius becomes greater\n    // than the default padding. That means we need to add more padding.\n    @if ($padding-px > notched-outline-variables.$leading-width) {\n      // Set a px value if it's greater. This is either the only value (if\n      // we're given an exact value), or an IE11 fallback if we're given a\n      // custom property and the fallback value is greater than the padding.\n      $value: $padding-px;\n      @if ($add-label-padding) {\n        // If this is for the top-left leading, add the notched outline padding\n        // to keep it aligned with the label\n        $value: $padding-px + notched-outline-variables.$padding;\n      }\n\n      @include rtl.ignore-next-line();\n      #{$property}: $value;\n      @include gss.annotate(\n        (\n          alternate: $padding-is-custom-prop,\n        )\n      );\n    }\n    @if ($padding-is-custom-prop) {\n      // If it's a custom property, always add it since the value may change\n      // to be greater than the padding at runtime, even if the fallback is\n      // not currently greater than the default padding.\n      $value: custom-properties.create-var($padding);\n      @if ($add-label-padding) {\n        $value: calc(#{$value} + #{notched-outline-variables.$padding});\n      }\n\n      // Interpolation is a workaround for sass/sass#3259.\n      @supports (top: max(#{0%})) {\n        // A max() function makes this runtime dynamic. The padding will be\n        // whichever is greater: the default horizontal padding, or the\n        // calculated custom property plus extra padding.\n        @include rtl.ignore-next-line();\n        #{$property}: max(#{$anchor-padding-left}, #{$value});\n      }\n    }\n  }\n}\n\n// Removes filled baseline alignment\n@mixin center-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-select__selected-text {\n    @include typography-mixins.zero-width-prefix($query: $query);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // In order for a flexbox container to participate in baseline alignment,\n    // it follows these rules to determine where its baseline is:\n    // https://www.w3.org/TR/css-flexbox-1/#flex-baselines\n    //\n    // In order to avoid leading icons \"controlling\" the baseline (since they\n    // are the first child), flexbox will generate a baseline from any child\n    // flex items that participate in baseline alignment.\n    //\n    // Icons are set to \"align-self: center\", while all other children are\n    // aligned to baseline. The next problem is deciding which child is\n    // used to determine the baseline.\n    //\n    // According to spec, the item with the largest distance between its\n    // baseline and the edge of the cross axis is placed flush with that edge,\n    // making it the baseline of the container.\n    // https://www.w3.org/TR/css-flexbox-1/#baseline-participation\n    //\n    // For the filled variant, the pseudo ::before strut is the \"largest\"\n    // child since the input has a height of 28px and the strut is 40px. We\n    // can emulate center alignment and force the baseline to use the input\n    // text by making the input the full height of the container and removing\n    // the baseline strut.\n    //\n    // IE11 does not respect this, and makes the leading icon (if present)\n    // the baseline.\n    .mdc-select__selected-text-container {\n      height: 100%;\n      display: inline-flex;\n      align-items: center;\n    }\n\n    &::before {\n      display: none;\n    }\n  }\n}\n\n///\n/// Sets the position of the floating label for a select with leading icon.\n/// @param {number} $icon-size - The size of the leading icon.\n///\n@mixin leading-icon-floating-label-position(\n  $icon-size: select-icon-theme.$icon-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $icon-total-width: $icon-size + 2 * select-icon-theme.$icon-horizontal-margin;\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $icon-total-width);\n    }\n  }\n}\n\n///\n/// Sets the floating label position and animations for a given height for an\n/// outlined select with leaing icon.\n/// @param {number} $icon-size - The size of the leading icon.\n/// @param {string} $keyframe-suffix - The suffix for the newly generated keyframes.\n///\n@mixin outlined-with-leading-icon-floating-label-position-animation(\n  $height,\n  $icon-size,\n  $keyframe-suffix: select-outlined-leading-icon-#{$height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $icon-total-width: $icon-size + 2 * select-icon-theme.$icon-horizontal-margin;\n  $resting-position-x: $icon-total-width -\n    select-icon-theme.$icon-horizontal-margin;\n  $float-position-y: get-outlined-label-position-y($height);\n  $float-position-x: $icon-size + select-icon-theme.$icon-horizontal-margin -\n    notched-outline-variables.$notch-gutter-size;\n\n  // Resting label position\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $resting-position-x);\n    }\n  }\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $float-position-y,\n    $float-position-x,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $float-position-y,\n      $float-position-x,\n      $query: $query\n    );\n  }\n\n  $keyframe-suffix-rtl: #{$keyframe-suffix}-rtl;\n  @include rtl.rtl {\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n  }\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix-rtl,\n      $float-position-y,\n      -($float-position-x),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Truncates the max-width of the floating label according to sizes of the\n/// leading icon and dropdown icon.\n///\n/// @param {Number} $leading-icon-size - Size of leading icon.\n/// @param {Number} $dropdown-icon-size - Size of dropdown icon.\n///\n@mixin truncate-floating-label-max-width(\n  $leading-icon-size,\n  $dropdown-icon-size,\n  $query: feature-targeting.all()\n) {\n  $truncation: select-icon-theme.$icon-horizontal-margin * 2 +\n    $dropdown-icon-size;\n\n  @if $leading-icon-size > 0 {\n    $truncation: $truncation +\n      select-icon-theme.$icon-horizontal-margin *\n      2 +\n      $leading-icon-size;\n  } @else {\n    $truncation: $truncation + $outline-label-offset;\n  }\n\n  .mdc-floating-label {\n    @include floating-label-mixins.max-width(\n      calc(100% - #{$truncation}),\n      $query: $query\n    );\n  }\n\n  .mdc-floating-label--float-above {\n    $scale: floating-label-variables.$float-scale;\n    @include floating-label-mixins.max-width(\n      calc(100% / #{$scale} - #{$truncation} / #{$scale}),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Truncates the max-width of the notched outline according to the sizes of\n/// the leading icon and dropdown icon.\n///\n/// @param {Number} $leading-icon-size - Size of leading icon.\n/// @param {Number} $dropdown-icon-size - Size of dropdown icon.\n///\n@mixin truncate-notched-outline-max-width(\n  $leading-icon-size,\n  $dropdown-icon-size,\n  $query: feature-targeting.all()\n) {\n  $truncation: select-icon-theme.$icon-horizontal-margin * 2 +\n    $dropdown-icon-size + notched-outline-variables.$leading-width;\n\n  @if $leading-icon-size > 0 {\n    $truncation: $truncation +\n      select-icon-theme.$icon-horizontal-margin +\n      $leading-icon-size;\n  }\n  .mdc-select__anchor {\n    @include notched-outline-mixins.notch-max-width(\n      calc(100% - #{$truncation}),\n      $query: $query\n    );\n  }\n}\n\n/// Selector for focused state\n/// @access private\n@mixin _if-focused {\n  &.mdc-select--focused {\n    @content;\n  }\n}\n\n/// Selector for enabled state\n/// @access private\n@mixin _if-enabled {\n  &:not(.mdc-select--disabled) {\n    @content;\n  }\n}\n\n/// Selector for disabled state\n/// @access private\n@mixin _if-disabled {\n  &.mdc-select--disabled {\n    @content;\n  }\n}\n\n@mixin _ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__selected-text {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _container-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__anchor {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(background-color, $color);\n      }\n    }\n  }\n}\n\n@mixin _bottom-line-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-line-ripple {\n      @include line-ripple-mixins.inactive-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _focused-line-ripple-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-line-ripple {\n      @include line-ripple-mixins.active-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n@mixin _hover-outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _focused-outline-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.stroke-width(\n        $outlined-stroke-width,\n        $query: $query\n      );\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _label-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-floating-label {\n      @include floating-label-mixins.ink-color($color, $query: $query);\n    }\n  }\n}\n\n@mixin _label-floating-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    .mdc-floating-label--float-above {\n      @include floating-label-mixins.ink-color($color, $query: $query);\n    }\n  }\n}\n\n///\n/// Sets the dropdown icon to the specified color.\n/// @access private\n///\n@mixin _dropdown-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      .mdc-select__dropdown-icon {\n        @include theme-mixins.property(fill, $color);\n      }\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/rtl/rtl';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/typography/typography';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define floating-label\n  .mdc-floating-label {\n    @include typography.typography(\n      subtitle1,\n      $exclude-props: (line-height),\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      @include rtl.ignore-next-line();\n      left: 0;\n      @include rtl.ignore-next-line();\n      -webkit-transform-origin: left top;\n      @include rtl.ignore-next-line();\n      transform-origin: left top;\n      line-height: 1.15rem;\n      text-align: left;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      cursor: text;\n      overflow: hidden;\n\n      /* @alternate */\n      // Force the label into its own layer to prevent visible layer promotion adjustments\n      // when the ripple is activated behind it.\n      will-change: transform;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        right: 0;\n        @include rtl.ignore-next-line();\n        left: auto;\n        @include rtl.ignore-next-line();\n        -webkit-transform-origin: right top;\n        @include rtl.ignore-next-line();\n        transform-origin: right top;\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: transform variables.$transition-duration\n          animation-variables.$standard-curve-timing-function,\n        color variables.$transition-duration\n          animation-variables.$standard-curve-timing-function;\n    }\n  }\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: auto;\n    }\n  }\n\n  .mdc-floating-label--required {\n    &::after {\n      @include _required-content($query);\n    }\n\n    @include rtl.rtl {\n      &::after {\n        @include _required-content-rtl($query);\n      }\n    }\n  }\n\n  @at-root {\n    @include float-position(variables.$position-y, $query: $query);\n    @include shake-animation(standard, $query: $query);\n  }\n\n  @include shake-keyframes(standard, variables.$position-y, $query: $query);\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n// Used for textarea in case of scrolling\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin shake-keyframes(\n  $modifier,\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-floating-label-shake-float-above-#{$modifier} {\n      0% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      33% {\n        animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      66% {\n        animation-timing-function: cubic-bezier(\n          0.302435,\n          0.381352,\n          0.55,\n          0.956352\n        );\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(-4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      100% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n    }\n  }\n}\n\n@mixin float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      @if $positionX > 0 or $positionX < 0 {\n        @include rtl.ignore-next-line();\n        transform: translateY(-1 * $positionY)\n          translateX(-1 * $positionX)\n          scale($scale);\n\n        @include rtl.rtl {\n          @include rtl.ignore-next-line();\n          transform: translateY(-1 * $positionY) translateX($positionX)\n            scale($scale);\n        }\n      } @else {\n        transform: translateY(-1 * $positionY) scale($scale);\n      }\n    }\n  }\n}\n\n@mixin shake-animation($modifier, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-floating-label--shake {\n    @include feature-targeting.targets($feat-animation) {\n      animation: mdc-floating-label-shake-float-above-#{$modifier} 250ms 1;\n    }\n  }\n}\n\n@mixin max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    max-width: $max-width;\n  }\n}\n\n///\n/// Sets the CSS transition for the floating animation.\n///\n/// @param {Number} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin float-transition(\n  $duration-ms,\n  $timing-function: animation-variables.$standard-curve-timing-function,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: color $duration-ms $timing-function,\n      transform $duration-ms $timing-function;\n  }\n}\n\n@mixin _required-content($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 1px;\n    @include rtl.ignore-next-line();\n    margin-right: 0px;\n    content: '*';\n  }\n}\n\n// Need to specify LTR/RTL manually since rtl mixins will add ::after[dir=rtl]\n// selector and that breaks some browsers\n@mixin _required-content-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 0;\n    @include rtl.ignore-next-line();\n    margin-right: 1px;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/mixins' as theme-mixins;\n@use '@material/theme/state';\n@use '@material/theme/variables' as theme-variables;\n\n$icon-size: 24px !default;\n$dense-icon-size: 20px !default;\n$icon-horizontal-margin: 12px !default;\n\n$icon-color: rgba(theme-variables.prop-value(on-surface), 0.54) !default;\n$disabled-icon-color: rgba(\n  theme-variables.prop-value(on-surface),\n  0.38\n) !default;\n\n///\n/// Customizes the size (both width and height) of the icon.\n/// @param {Number} $size - the intended icon size.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-select__icon {\n      width: $size;\n      height: $size;\n      font-size: $size;\n    }\n  }\n}\n\n@mixin icon-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(.mdc-select--disabled) {\n    @include _icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n  }\n\n  &.mdc-select--disabled {\n    @include _icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n@mixin icon-horizontal-margins($left, $right, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-select__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(margin, $left, $right);\n    }\n  }\n}\n\n@mixin _icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-select__icon {\n      @include feature-targeting.targets($feat-color) {\n        @include theme-mixins.property(color, $color);\n      }\n    }\n  }\n}\n","// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// NOTE: this is the implementation of the aforementioned classes.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use '@material/theme/theme';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme-color';\n@use './evolution-variables' as variables;\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode($query);\n\n  .mdc-list {\n    @include list-base($query: $query);\n  }\n\n  .mdc-list-item__wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      display: block;\n    }\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n\n    @include _one-line-item-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n    @include _three-line-item-density(\n      variables.$three-line-item-density-scale,\n      $query: $query\n    );\n\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before, // lint-disable-focus-psuedo-selector\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    // lint-disable-focus-psuedo-selector\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  // stylelint-disable selector-max-type,selector-no-qualifying-type\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type,selector-no-qualifying-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size(56px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include item-start-size(40px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-primary-baseline(32px, 20px, $query: $query);\n    @include _two-line-item-overline-baseline(28px, 20px, $query: $query);\n    @include _two-line-item-meta-baseline($top: 32px, $query: $query);\n    @include _one-line-item-tall-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _two-line-item-end-baseline($top: 28px, $query: $query);\n    @include _three-line-item-end-baseline($top: 28px, $query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include item-end-size(40px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include item-end-size(40px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n\n  .mdc-list-group__subheader {\n    $mdc-list-subheader-virtual-height: 3rem;\n    $mdc-list-subheader-leading: map.get(\n      map.get(typography.$styles, body1),\n      line-height\n    );\n    $mdc-list-subheader-margin: calc(\n      (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) /\n        2\n    );\n\n    @include typography.typography(subtitle1, $query);\n    @include feature-targeting.targets($feat-structure) {\n      margin: $mdc-list-subheader-margin variables.$side-padding;\n    }\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n  @include divider-height(1px, $query: $query);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n\n  .mdc-list-item--disabled {\n    @include ripple.surface(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple.radius-bounded(\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-base-color(\n      theme-color.prop-value(on-surface),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n    @include ripple-theme.states-focus-opacity(\n      ripple-theme.states-opacity(primary, focus),\n      $ripple-target: variables.$ripple-target,\n      $query: $query\n    );\n\n    #{variables.$ripple-target} {\n      @include ripple.target-common($query: $query);\n    }\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-height($height) {\n  &.mdc-list-item--with-one-line,\n  &.mdc-list-item--with-two-lines,\n  &.mdc-list-item--with-three-lines {\n    height: $height;\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-selected-container-color($color) {\n  &.mdc-list-item--selected {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin list-primary-text-typography($typography-theme) {\n  .mdc-list-item__primary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-typography($typography-theme) {\n  .mdc-list-item__secondary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include _item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        opacity: $opacity;\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-end-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: $top,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-end-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: $top,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-baseline($top, $query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin _item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n\n      @include feature-targeting.targets($feat-color) {\n        // Color ensures border is shown, but will be overridden by the browser.\n        @include theme.property(border-bottom-color, white);\n      }\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-keys($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n\n@mixin states-background-selector($ripple-target) {\n  #{$ripple-target}::before {\n    @content;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@material/animation/functions' as functions2;\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/color-custom-properties';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/shadow-dom';\n@use '@material/touch-target/touch-target';\n@use './checkbox-custom-properties';\n\n$baseline-theme-color: secondary !default;\n$mark-color: theme-color.prop-value(on-secondary) !default;\n$border-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$disabled-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n\n$ripple-size: 40px !default;\n$icon-size: 18px !default;\n$mark-stroke-size: math.div(2, 15) * $icon-size !default;\n$border-width: 2px !default;\n$transition-duration: 90ms !default;\n$item-spacing: 4px !default;\n$focus-indicator-opacity: map.get(\n  ripple-theme.$dark-ink-opacities,\n  focus\n) !default;\n\n$minimum-size: 28px !default;\n$maximum-size: $ripple-size !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    minimum: $minimum-size,\n    default: $ripple-size,\n    maximum: $maximum-size,\n  ),\n) !default;\n\n$ripple-target: '.mdc-checkbox__ripple';\n$custom-property-prefix: 'checkbox';\n\n// TODO(b/188417756): State layer (ripple) size token is missing including\n//     `state-layer-size`.\n// TODO(b/188529841): `selected-checkmark-color` and `disabled-selected-checkmark-color` does not exist in tokens.\n$light-theme: (\n  disabled-selected-checkmark-color: $mark-color,\n  disabled-selected-icon-color: $disabled-color,\n  disabled-selected-icon-opacity: null,\n  disabled-unselected-icon-color: $disabled-color,\n  disabled-unselected-icon-opacity: null,\n  selected-checkmark-color: $mark-color,\n  selected-focus-icon-color: $baseline-theme-color,\n  selected-focus-state-layer-color: theme-color.$on-surface,\n  selected-focus-state-layer-opacity: 0.12,\n  selected-hover-icon-color: $baseline-theme-color,\n  selected-hover-state-layer-color: $baseline-theme-color,\n  selected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  selected-icon-color: $baseline-theme-color,\n  selected-pressed-icon-color: $baseline-theme-color,\n  selected-pressed-state-layer-color: theme-color.$on-surface,\n  selected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n  state-layer-size: $ripple-size,\n  unselected-focus-icon-color: $baseline-theme-color,\n  unselected-focus-state-layer-color: theme-color.$on-surface,\n  unselected-focus-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, focus),\n  unselected-hover-icon-color: $baseline-theme-color,\n  unselected-hover-state-layer-color: theme-color.$on-surface,\n  unselected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  unselected-icon-color: $border-color,\n  unselected-pressed-icon-color: $border-color,\n  unselected-pressed-state-layer-color: theme-color.$on-surface,\n  unselected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n);\n\n$forced-colors-theme: (\n  disabled-selected-checkmark-color: ButtonFace,\n  disabled-selected-icon-color: GrayText,\n  disabled-selected-icon-opacity: 1,\n  disabled-unselected-icon-color: GrayText,\n  disabled-unselected-icon-opacity: 1,\n  selected-checkmark-color: ButtonText,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme-keys($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-keys($light-theme, $theme);\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include disabled-container-colors(\n    $unmarked-stroke-color: map.get($theme, disabled-unselected-icon-color),\n    $marked-fill-color: map.get($theme, disabled-selected-icon-color)\n  );\n\n  @include ink-color(map.get($theme, selected-checkmark-color));\n  @include disabled-ink-color(\n    map.get($theme, disabled-selected-checkmark-color)\n  );\n\n  @include _icon-color(\n    map.get($theme, unselected-icon-color),\n    map.get($theme, selected-icon-color)\n  );\n\n  &:hover {\n    @include _icon-color(\n      map.get($theme, unselected-hover-icon-color),\n      map.get($theme, selected-hover-icon-color)\n    );\n  }\n\n  @include ripple-theme.focus() {\n    @include _icon-color(\n      map.get($theme, unselected-focus-icon-color),\n      map.get($theme, selected-focus-icon-color)\n    );\n  }\n\n  @include ripple-theme.active() {\n    @include _icon-color(\n      map.get($theme, unselected-pressed-icon-color),\n      map.get($theme, selected-pressed-icon-color)\n    );\n  }\n\n  @include ripple-color(\n    $color: map.get($theme, unselected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, unselected-hover-state-layer-opacity),\n      focus: map.get($theme, unselected-focus-state-layer-opacity),\n      press: map.get($theme, unselected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include focus-indicator-color(\n    $color: map.get($theme, selected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, selected-hover-state-layer-opacity),\n      focus: map.get($theme, selected-focus-state-layer-opacity),\n      press: map.get($theme, selected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include ripple-size(map.get($theme, state-layer-size));\n  // Set touch target to ripple size.\n  @include touch-target(\n    map.get($theme, state-layer-size),\n    map.get($theme, state-layer-size)\n  );\n}\n\n$light-theme-deprecated: (\n  density-scale: 0,\n  checkmark-color: $mark-color,\n  container-checked-color: $baseline-theme-color,\n  container-checked-hover-color: null,\n  container-disabled-color: $disabled-color,\n  outline-color: $border-color,\n  outline-hover-color: null,\n  ripple-color: theme-color.$on-surface,\n  ripple-opacity: ripple-theme.$dark-ink-opacities,\n  ripple-checked-color: $baseline-theme-color,\n  ripple-checked-opacity: ripple-theme.$dark-ink-opacities,\n);\n\n/// Sets theme to checkbox based on provided theme configuration.\n/// Only emits theme related styles.\n/// @param {Map} $theme - Theme configuration to use for theming checkbox.\n@mixin theme-deprecated($theme, $query: feature-targeting.all()) {\n  @include theme.validate-theme($light-theme-deprecated, $theme);\n\n  $ripple-color: map.get($theme, ripple-color);\n  $ripple-opacity: map.get($theme, ripple-opacity);\n  @if $ripple-opacity == null {\n    $ripple-opacity: ();\n  }\n  @if $ripple-color {\n    @include ripple-color(\n      $color: $ripple-color,\n      $opacity-map: $ripple-opacity,\n      $query: $query\n    );\n  }\n\n  $ripple-checked-color: map.get($theme, ripple-checked-color);\n  $ripple-checked-opacity: map.get($theme, ripple-checked-opacity);\n  @if $ripple-checked-opacity == null {\n    $ripple-checked-opacity: ();\n  }\n  @if $ripple-checked-color {\n    @include focus-indicator-color(\n      $color: $ripple-checked-color,\n      $opacity-map: $ripple-checked-opacity,\n      $query: $query\n    );\n  }\n\n  $density-scale: map.get($theme, density-scale);\n  @if $density-scale != null {\n    @include density($density-scale: $density-scale, $query: $query);\n  }\n\n  $outline-color: map.get($theme, outline-color);\n  $container-checked-color: map.get($theme, container-checked-color);\n  @if (\n    ($outline-color and not $container-checked-color) or\n      (not $outline-color and $container-checked-color)\n  ) {\n    @error 'Both `outline-color` and `container-checked-color` keys should be provided.';\n  }\n  @if ($outline-color and $container-checked-color) {\n    @include container-colors(\n      $unmarked-stroke-color: $outline-color,\n      $marked-stroke-color: $container-checked-color,\n      $marked-fill-color: $container-checked-color,\n      $query: $query\n    );\n  }\n\n  $outline-hover-color: map.get($theme, outline-hover-color);\n  $container-checked-hover-color: map.get(\n    $theme,\n    container-checked-hover-color\n  );\n  @if (\n    ($outline-hover-color and not $container-checked-hover-color) or\n      (not $outline-hover-color and $container-checked-hover-color)\n  ) {\n    @error 'Both `outline-hover-color` and `container-checked-hover-color` keys should be provided.';\n  }\n  @if ($outline-hover-color and $container-checked-hover-color) {\n    @include ripple-theme.states-selector() {\n      @include container-colors(\n        $unmarked-stroke-color: $outline-hover-color,\n        $marked-stroke-color: $container-checked-hover-color,\n        $marked-fill-color: $container-checked-hover-color,\n        $query: $query\n      );\n    }\n  }\n\n  $container-disabled-color: map.get($theme, container-disabled-color);\n  @if $container-disabled-color {\n    @include disabled-container-colors(\n      $unmarked-stroke-color: $container-disabled-color,\n      $marked-fill-color: $container-disabled-color,\n      $query: $query\n    );\n  }\n\n  $checkmark-color: map.get($theme, checkmark-color);\n  @if $checkmark-color {\n    @include ink-color($checkmark-color, $query: $query);\n    @include disabled-ink-color($checkmark-color, $query: $query);\n  }\n}\n\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values `-3`, `-2`, `-1`, `0`.\n/// @return Returns ripple size of checkbox for given density scale.\n///\n@function get-ripple-size($density-scale) {\n  @return density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size\n  );\n}\n\n///\n/// Sets density scale for checkbox.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values\n///     `-3`, `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: get-ripple-size($density-scale);\n\n  @include ripple-size($size, $query: $query);\n  @include touch-target($size, $ripple-size: $size, $query: $query);\n}\n\n/// Sets ripple size of checkbox and optionally set touch target size which can\n/// be more than the size of ripple.\n/// @param {Number} $ripple-size - Visual ripple size of checkbox.\n@mixin ripple-size($ripple-size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $ripple-size and not custom-properties.is-custom-prop($ripple-size) {\n    $ripple-size: custom-properties.create(\n      checkbox-custom-properties.$ripple-size,\n      $ripple-size\n    );\n  }\n  $checkbox-padding: 'calc((_ripple-size - _icon-size) / 2)';\n  $replace: (\n    _ripple-size: $ripple-size,\n    _icon-size: $icon-size,\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(padding, $checkbox-padding, $replace: $replace);\n  }\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(top, $checkbox-padding, $replace: $replace);\n      @include theme.property(left, $checkbox-padding, $replace: $replace);\n    }\n  }\n}\n\n/// Sets the touch target size and appropriate margin to accommodate the\n/// touch target.\n/// @param {Number} $touch-target-size Size of touch target (Native input) in `px`.\n/// @param {Number} $ripple-size Size of ripple in `px`.\n@mixin touch-target(\n  $touch-target-size,\n  $ripple-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $touch-target-size {\n    @if not custom-properties.is-custom-prop($touch-target-size) {\n      $touch-target-size: custom-properties.create(\n        checkbox-custom-properties.$touch-target-size,\n        $touch-target-size\n      );\n    }\n\n    $margin: 'calc((_touch-target-size - _ripple-size) / 2)';\n    $replace: (\n      _touch-target-size: $touch-target-size,\n      _ripple-size: $ripple-size,\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(margin, $margin, $replace: $replace);\n    }\n\n    $offset: 'calc((_ripple-size - _touch-target-size) / 2)';\n\n    @include feature-targeting.targets($feat-structure) {\n      .mdc-checkbox__native-control {\n        @include theme.property(top, $offset, $replace: $replace);\n        @include theme.property(right, $offset, $replace: $replace);\n        @include theme.property(left, $offset, $replace: $replace);\n        @include theme.property(width, $touch-target-size);\n        @include theme.property(height, $touch-target-size);\n      }\n    }\n  }\n}\n\n@mixin _icon-color($unselected-color, $selected-color) {\n  @if $unselected-color and $selected-color {\n    @include container-colors(\n      $unmarked-stroke-color: $unselected-color,\n      $marked-stroke-color: $selected-color,\n      $marked-fill-color: $selected-color\n    );\n  } @else if $unselected-color or $selected-color {\n    @error 'Both unselected and selected icon colors should be provided.';\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of enabled checkbox.\n/// Set $generate-keyframes to false to prevent the mixin from generating @keyframes\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n/// @param {Boolean} $generate-keyframes [true] - Whether animation keyframes should be generated\n///\n@mixin container-colors(\n  $unmarked-stroke-color: $border-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: $baseline-theme-color,\n  $marked-fill-color: $baseline-theme-color,\n  $generate-keyframes: true,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Unchecked colors\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$unchecked-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @include if-unmarked-enabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  // Checked colors\n  @if (\n    $marked-stroke-color and not\n      custom-properties.is-custom-prop($marked-stroke-color)\n  ) {\n    $marked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-stroke-color)\n      )\n    );\n  }\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-fill-color)\n      )\n    );\n  }\n\n  @include if-marked-enabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if $generate-keyframes and\n    $unmarked-stroke-color and\n    $marked-stroke-color and\n    $unmarked-fill-color and\n    $marked-fill-color\n  {\n    $uid: theme-color.color-hash($unmarked-stroke-color) +\n      theme-color.color-hash($marked-stroke-color) +\n      theme-color.color-hash($unmarked-fill-color) +\n      theme-color.color-hash($marked-fill-color);\n\n    $anim-selector: if(&, '&.mdc-checkbox--anim', '.mdc-checkbox--anim');\n\n    @include feature-targeting.targets($feat-animation, $feat-color) {\n      @include container-keyframes_(\n        $from-stroke-color: $unmarked-stroke-color,\n        $to-stroke-color: $marked-stroke-color,\n        $from-fill-color: $unmarked-fill-color,\n        $to-fill-color: $marked-fill-color,\n        $uid: #{$uid}\n      );\n    }\n\n    #{$anim-selector} {\n      &-unchecked-checked,\n      &-unchecked-indeterminate {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-in-background-#{$uid};\n          }\n        }\n      }\n\n      &-checked-unchecked,\n      &-indeterminate-unchecked {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-out-background-#{$uid};\n          }\n        }\n      }\n    }\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of disabled checkbox.\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n///\n@mixin disabled-container-colors(\n  $unmarked-stroke-color: $disabled-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: transparent,\n  $marked-fill-color: $disabled-color,\n  $query: feature-targeting.all()\n) {\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @if $unmarked-stroke-color == null {\n    $unmarked-fill-color: null;\n  }\n\n  @include if-unmarked-disabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($marked-fill-color)\n    );\n  }\n\n  @if $marked-fill-color and\n    custom-properties.get-fallback($marked-fill-color) ==\n    GrayText\n  {\n    // Transparent appears white in HCM\n    $marked-stroke-color: GrayText;\n  }\n\n  @if $marked-fill-color == null {\n    $marked-stroke-color: null;\n  }\n\n  @include if-marked-disabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for an enabled checkbox\n/// @param {Color} $color - The desired ink color in enabled state\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-enabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a disabled checkbox\n/// @param {Color} $color - The desired ink color in disabled state\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n/// Sets ripple color when checkbox is not in checked state.\n@mixin ripple-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  @include ripple-theme.states(\n    $color: $color,\n    $opacity-map: $opacity-map,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n/// Sets focus indicator color when checkbox is in checked state.\n@mixin focus-indicator-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-checkbox--selected {\n    @include ripple-theme.states(\n      $color: $color,\n      $opacity-map: $opacity-map,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n\n  &.mdc-ripple-upgraded--background-focused.mdc-checkbox--selected {\n    @include ripple-theme.states-base-color(\n      $color: $color,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n//\n// Private\n//\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// enabled state.\n/// @access private\n///\n@mixin if-enabled_ {\n  .mdc-checkbox__native-control:enabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  .mdc-checkbox__native-control:disabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & enabled state.\n/// @access private\n///\n@mixin if-unmarked-enabled_ {\n  .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & disabled state.\n/// @access private\n///\n@mixin if-unmarked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & enabled state.\n/// @access private\n///\n@mixin if-marked-enabled_ {\n  .mdc-checkbox__native-control:enabled:checked,\n  .mdc-checkbox__native-control:enabled:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true']:enabled {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & disabled state.\n/// @access private\n///\n@mixin if-marked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:checked,\n  .mdc-checkbox__native-control[disabled]:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true'][disabled] {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Sets the stroke & fill colors for the checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked-enabled_`.\n/// @access private\n///\n@mixin container-colors_(\n  $stroke-color,\n  $fill-color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $stroke-color);\n      @include theme.property(background-color, $fill-color);\n    }\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    .mdc-checkbox__checkmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(border-color, $color);\n      }\n    }\n  }\n}\n\n@mixin container-keyframes_(\n  $from-stroke-color,\n  $to-stroke-color,\n  $from-fill-color,\n  $to-fill-color,\n  $uid\n) {\n  @keyframes mdc-checkbox-fade-in-background-#{$uid} {\n    0% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n\n    50% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n  }\n\n  @keyframes mdc-checkbox-fade-out-background-#{$uid} {\n    0%,\n    80% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n\n    100% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}