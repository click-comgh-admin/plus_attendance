{"version":3,"file":"../../production_public/assets/v2/prod-files/js/login.js","mappings":";cAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAwB,eAAID,IAE5BD,EAAqB,eAAIC,GAC1B,CATD,CASGK,MAAM,wHCTF,MAKMC,EAA0B,CAACC,EAAYC,GAAW,KAE7D,GAAIC,MAAMC,QAAQH,GAAQ,CAExB,IAAII,GADUH,EARS,yOAQgB,IAChB,OAavB,OAZ0BD,EAGpBK,SAASC,IAGXF,GADkB,iBAATE,EACG,OAAOA,WAEP,OAAOA,EAAKN,kBAIrBI,GAAsB,QAE7B,MAAM,IAAIG,MAAM,mECxBb,MAAMC,EAAmB,CAC9BC,EACAC,KACyB,IAArBC,UAAUC,OACLH,EAAO,UAEPC,EAAQ,iGCFnB,MAAMG,EAAgB,oBAETC,EAA2BR,IACtC,MAAMS,EAAaC,KAAKC,UAAUX,IAGlC,QAAYO,EAAe,IAAK,IAChC,QAAYA,GAAe,OAAaE,GAAa,KAAK,EAGrD,SAASG,KACd,QAAYL,EAAe,IAAK,EAClC,CAEO,MAAMM,EAA0B,KAIrC,GAAkB,MAHA,QAAWN,GAI3B,OAAO,KACF,CACL,MAAMO,GAAU,QAAa,QAAWP,IACtCQ,EAASL,KAAKM,MAAMF,GAEtB,OAAO,OAAmBC,gFCvBvB,SAAeE,EAAyBC,EAAe,2CAE5D,MAAMC,GAAc,UACdC,EAAM,8BAAsC,kBACpC,OAATF,EAAgB,GAAK,IAAMA,GAC9BG,QAAa,OAAKD,EAAK,CACrBE,OAAQ,MACRC,QAAS,CACPC,cAAe,SAAWL,EAAYM,SAEvC,GACL,IACE,OAAO,IAAI,IAA2B,MAAOJ,GAC7C,MAAO3B,GACPgC,QAAQhC,MAAM,CAAEA,UAChB,IAAIiC,EAAYN,EAEhB,OADAM,EAAiB,MAAIjC,EACd,IAAI,IAA2B,MAAOiC,GAAW,GAE5D,yWCrBA,IAAIC,EAAmH,GACvH,MAAMC,EAAgB,gBAETC,EAAuB,CAACZ,EAAkC,WACvDa,SAASC,iBAAiBd,EAAO,qBAGzCnB,SAAQ,CAACkC,EAAoCC,KAEjD,MAAMC,EAAgBF,EAAKE,cAC3BA,EAAcC,aAAa,QAASD,EAAcE,aAAa,SAAW,wCAC1E,MAAMC,EAAQP,SAASQ,cAAc,SACrCD,EAAMF,aAAa,QAASE,EAAMD,aAAa,SAAnBC,iHAI5B,MAAME,EAAOT,SAASQ,cAAc,QACpCC,EAAKJ,aAAa,QAASI,EAAKH,aAAa,SAAlBG,0FAG3BA,EAAKC,UAAYZ,EAEjB,MAAMa,EAAYX,SAASQ,cAAc,QACzCC,EAAKJ,aAAa,QAASI,EAAKH,aAAa,SAAlBG,0FAI3B,MAAMG,EAAWZ,SAASQ,cAAc,SACxCI,EAASzB,KAAO,WAChByB,EAASC,GAAK,wBAA0BV,EACxCS,EAASP,aAAa,QAASO,EAASN,aAAa,SAAtBM,kLAK/BL,EAAMO,YAAYH,GAClBJ,EAAMO,YAAYF,GAClBL,EAAMO,YAAYL,GAElBP,EAAKa,MAAMR,GAEX,MAAMS,EAAkB,CAAEH,GAAID,EAASC,GAAII,SAAS,EAAOC,KAAMhB,EAAMO,KAAMA,GACxEZ,EAAkBsB,SAASH,IAC9BnB,EAAkBuB,KAAKJ,GAEzBJ,EAASS,iBAAiB,SAAUC,EAAmB,GACvD,EAGEA,EAAsBC,IAC1BA,EAAEC,iBACF,MAAMZ,EAA6BW,EAAEE,cAErCb,EAASc,QACT7B,EAAkB7B,SAAQgD,IACpBJ,EAASC,KAAOG,EAAgBH,MACF,IAA5BG,EAAgBC,SAClBD,EAAgBE,KAAK/B,KAAO,OAC5B6B,EAAgBP,KAAKC,UAzD0B,gBA0D/CM,EAAgBC,SAAU,IAE1BD,EAAgBE,KAAK/B,KAAO,WAC5B6B,EAAgBP,KAAKC,UAAYZ,EACjCkB,EAAgBC,SAAU,MAI9B,kwBC1DG,IAAMU,EAAN,cAA2B,KAChCC,cAAgBC,OAAS,CAEzBC,oBACED,MAAMC,mBACR,CAEAC,uBAAyB,CAOzBC,SACE,OAAO,IAAI;;;;;;;;;;;;;;sBAcO;;;;;;;oEAO8CC,KAAKC;;;;;;;;;;;cAYvE,CAEAC,eACEpC,IACAA,EAAqB,gBACvB,CAEMmC,WAAWX,wCACfA,EAAEC,uBCvDC,oDAEL,MAAMnC,EAAM,8BAAsC,gBAChD+C,EAAiCpC,SAASqC,cAAc,uCACxDC,EAAW,IAAIC,SAASH,IAE1B,QAAiBhE,GAGR,SAAU,CACfoE,MAAO,SAEPC,KAAM,OACNC,UAAW,UACXC,kBAAkB,EAClBC,kBAAmB,MACnBC,iBAAkB,SAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,gBAAgB,EAChBC,qBAAqB,EACrBC,UAAU,EACVC,WAAmBC,GAAU,EAAD,gCAC1B,aAAa,EAAAC,EAAA,GAAKhE,EAAK,CACrBE,OAAQ,OACR+D,KAAMhB,IACL,GAAOiB,MAAMjE,IAEd,MAAMkE,EAAiB,IAAI,IAAqB,OAAQlE,GAAM,EAAO8C,GAC/DqB,EAAYD,EAAeE,SAEjC,GAAI,cAAeD,GAAa,iBAAkBA,GAC5CA,EAAUE,aAAaC,OAAS,EAAG,CAGrC,IAAIC,EAAmC,GACvCJ,EAAUE,aAAa3F,SAAQuD,IACbA,EAAEsC,OACV7F,SAAQ8F,IACd,IAAIC,EAAW,CAAEpG,MAAO4D,EAAEV,GAAK,KAAOiD,GACzB,qBAATvC,EAAEV,KACJkD,EAAW,CAAEpG,MAAOmG,IAGtBD,EAAOzC,KAAK2C,EAAS,GACrB,IAGJ,MAAMC,GAAM,EAAAtG,EAAA,GAAwBmG,GACpC,0BACE,GAAGG,KAIT,OAAOR,CAAc,IACpBS,OAAMtG,IACP,0BACE,GAAGuG,OAAOvG,KACX,GAEL,IACAwG,kBAAmB,KAAO,kBACzBZ,MAAMa,IAEP,GAAIA,EAAOC,YAAa,CACtB,IAEEpG,EAFEqG,EAAa,UACfC,GAAY,EAEd,MAAMC,EAASJ,EAAOK,MACtB,GAAID,aAAkBE,OAAQ,CAC5B,MAAMC,EAAwCH,EAAOd,SACrDY,EAAa,mBAEbrG,EAAO0G,EAAM1G,KACbsG,EAAYC,EAAOd,SAASkB,QAE9BL,GAAY,SAAU,CACpB/B,MAAO8B,EACP7B,KAAM8B,EAAY,UAAY,QAC9B7B,UAAW6B,EAAY,UAAY,UACnCzB,mBAAoB,YAEtByB,GAAYM,YAAW,IAAY,EAAD,gCAChC,MAAMrG,GAAgB,OAAgBP,IACtC,QAAuBO,IACvB,UAEA,IACE,MAAMsG,QAAkB,OAAqCtG,EAAcuG,KAAKC,UAC3EnH,MAAMC,QAAQgH,EAAUpB,SAASzF,QACpC,QAAwB6G,EAAUpB,SAASzF,MAE7C,MAAON,GACPgC,QAAQhC,MAAM,CAAEA,UAGlBsH,OAAOC,SAASC,QAClB,KAAG,WAGN9G,IAED,SAAU,CACRmE,MAAO,4BACP4C,KAAM,mBACN3C,KAAM,OACNC,UAAW,UACXI,mBAAoB,WACpB,GAEN,IDrDUuC,EACR,iSAEAC,mBACE,OAAOrD,IACT,GAvDO,EAAAsD,OAAS,CACd,IAAG;;KATM5D,EAAY,IADxB,QAAc,wJACFA,qEEPV,MAAM6D,EAAEC,GAAG,KAAEC,EAAEC,GAAG,OAAOA,GAAG,iBAAiBA,GAAG,mBAAmBA,EAAuMpE,EAAEoE,QAAG,IAASA,EAAEC,QAA6eC,EAAE,CAAC,EAAEC,EAAE,CAACH,EAAEF,EAAEI,IAAIF,EAAEI,KAAKN,8ICA9xB,MAAMA,GAAE,QAAE,cAAc,KAAE7D,YAAYoE,GAAG,GAAGnE,MAAMmE,GAAGA,EAAE7G,OAAO,eAAY6G,EAAE7G,OAAO,gBAAa6G,EAAE7G,OAAO,uBAAoB,MAAMjB,MAAM,kEAAkE,KAAI,QAAE8H,GAAG,MAAM9H,MAAM,uDAAuD,CAAC8D,OAAOgE,GAAG,OAAOA,CAAC,CAACC,OAAO9F,GAAGuF,IAAI,GAAGA,IAAI,MAAGA,IAAI,KAAE,OAAOA,EAAE,MAAMC,EAAExF,EAAE+F,QAAQT,EAAEtF,EAAEgG,KAAK,GAAGhG,EAAEhB,OAAO,eAAY,GAAGuG,IAAIC,EAAEF,GAAG,OAAO,UAAO,GAAGtF,EAAEhB,OAAO,wBAAqB,KAAKuG,IAAIC,EAAES,aAAaX,GAAG,OAAO,UAAO,GAAGtF,EAAEhB,OAAO,gBAAawG,EAAErF,aAAamF,KAAKC,EAAE,GAAG,OAAO,KAAE,OAAO,QAAEvF,GAAGuF,CAAC","sources":["webpack://webpackNumbers/webpack/universalModuleDefinition","webpack://webpackNumbers/./src/addons/functions/https/https_swal_error_format.ts","webpack://webpackNumbers/./src/addons/functions/https/network_status.ts","webpack://webpackNumbers/./src/addons/functions/views/home/branch/index.ts","webpack://webpackNumbers/./src/addons/network/clients/branches/index.ts","webpack://webpackNumbers/./src/addons/functions/toggle_pswd_visibility/index.ts","webpack://webpackNumbers/./src/view/login/index.ts","webpack://webpackNumbers/./src/addons/network/login/index.ts","webpack://webpackNumbers/./node_modules/lit-html/directive-helpers.js","webpack://webpackNumbers/./node_modules/lit-html/directives/live.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webpackNumbers\"] = factory();\n\telse\n\t\troot[\"webpackNumbers\"] = factory();\n})(self, () => {\nreturn ","export const __swalStyle = `<style>#swal2-validation-message{\r\n  display: flex !important;\r\n  justify-content: flex-start !important;\r\n  font-weight: 600 !important;\r\n}#swal2-validation-message>ul{list-style: inside !important; margin: 0 !important;}</style>`;\r\nexport const https_swal_error_format = (error: any, addStyle = true) => {\r\n  // console.log({\"errorerror\": error})\r\n  if (Array.isArray(error)) {\r\n    const style = addStyle ? __swalStyle : ``;\r\n    let errorMsg = style + \"<ul>\";\r\n    const DATAS: Array<any> = error\r\n    // console.log({ DATAS });\r\n\r\n    DATAS.forEach((data) => {\r\n      // console.log({ data });\r\n      if (typeof data === \"string\") {\r\n        errorMsg += `<li>${data}</li>` + \"\\n\";\r\n      } else {\r\n        errorMsg += `<li>${data.error}</li>` + \"\\n\";\r\n      }\r\n\r\n    });\r\n    return errorMsg = errorMsg + \"</ul>\";\r\n  } else {\r\n    throw new Error(\"Unknown error response format\");\r\n  }\r\n}","export const GetNetworkStatus = (\r\n  online: (status: string) => void,\r\n  offline: (status: string) => void) => {\r\n  if (navigator.onLine === true) {\r\n    return online(\"online\");\r\n  } else {\r\n    return offline(\"offline\");\r\n  }\r\n}\r\n\r\nexport const GetNetworkStatusEvent = (self: { dispatchEvent: (arg0: CustomEvent<{ onlineStatus: boolean; }>) => void; }) => {\r\n  let newMessage = new CustomEvent('get-online-status', {\r\n    cancelable: true,\r\n    detail: { onlineStatus: navigator.onLine }\r\n  });\r\n\r\n  // dispatchEvent(newMessage);\r\n  self.dispatchEvent(newMessage);\r\n}","import { base64Encode, base64Decode } from \"@@addons/functions/base64\";\r\nimport { set_cookies, get_cookie } from \"@@addons/functions/cookies\";\r\nimport { clientBranchInfo_S, ClientBranchShort_I } from \"@@addons/interfaces/clients/branches\";\r\n\r\nconst userLoginInfo = 'pdb-active-branch';\r\n\r\nexport const setActiveBranchIdCookie = (data: ClientBranchShort_I) => {\r\n  const stringData = JSON.stringify(data);\r\n  // console.log({data, stringData});\r\n  \r\n  set_cookies(userLoginInfo, \"\", -1);\r\n  set_cookies(userLoginInfo, base64Encode(stringData), 3500);\r\n}\r\n\r\nexport function removeActiveBranchIdCookie() {\r\n  set_cookies(userLoginInfo, \"\", -1);\r\n}\r\n\r\nexport const getActiveBranchIdCookie = (): ClientBranchShort_I => {\r\n  const rawCookie = get_cookie(userLoginInfo);\r\n  // console.log({\"rawCookie-getActiveBranchId\": rawCookie, userLoginInfo});\r\n  \r\n  if (rawCookie === \"\") {\r\n    return null;\r\n  } else {\r\n    const _cookie = base64Decode(get_cookie(userLoginInfo)),\r\n      cookie = JSON.parse(_cookie);\r\n\r\n    return clientBranchInfo_S(cookie);\r\n  }\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_ClientBranches<Type>(type: Number = null) {\r\n  \r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/branch'\r\n    + (type === null ? \"\" : \"/\" + type),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import '@material/mwc-icon-button';\r\nimport { TextField } from '@material/mwc-textfield';\r\n\r\nlet showingCheckBoxes: { id: string, showing: boolean, elem: HTMLInputElement | TextField, span: HTMLSpanElement }[] = [];\r\nconst labelTextShow = \"Show Password\", labelTextHide = \"Hide Password\";\r\n\r\nexport const togglePswdVisibility = (type: \"mwc-textfield\" | \"input\" = \"input\") => {\r\n  const PSWDs = document.querySelectorAll(type + '[type=\"password\"]');\r\n  // console.log({ PSWDs });\r\n\r\n  PSWDs.forEach((PSWD: HTMLInputElement | TextField, i) => {\r\n    // console.log({ PSWD });\r\n    const parentElement = PSWD.parentElement;\r\n    parentElement.setAttribute('style', parentElement.getAttribute('style') + \"; flex-direction: column !important;\")\r\n    const label = document.createElement('label');\r\n    label.setAttribute('style', label.getAttribute('style') + \"; display: inline-flex;\" +\r\n      \"width: 100%; cursor: pointer; align-items: center; margin-top: 10px; margin-bottom: 0;\"\r\n    );\r\n\r\n    const span = document.createElement('span');\r\n    span.setAttribute('style', span.getAttribute('style') + \"; margin-left: 0.5rem;\" +\r\n      \"font-size: 0.875rem; line-height: 1.25rem; color: rgb(75 85 99);\"\r\n    );\r\n    span.innerText = labelTextShow;\r\n\r\n    const spanDummy = document.createElement('span');\r\n    span.setAttribute('style', span.getAttribute('style') + \"; margin-left: 0.5rem;\" +\r\n      \"font-size: 0.875rem; line-height: 1.25rem; color: rgb(75 85 99);\"\r\n    );\r\n\r\n    const checkbox = document.createElement('input');\r\n    checkbox.type = \"checkbox\";\r\n    checkbox.id = \"pswd-visibility-btn--\" + i;\r\n    checkbox.setAttribute('style', checkbox.getAttribute('style') + \"; -moz-appearance: auto !important;\" +\r\n      \"-webkit-appearance: auto !important; -ms-appearance: auto !important; appearance: auto !important;\" +\r\n      \"opacity: 1; margin-right: 0; z-index: 10;\"\r\n    );\r\n\r\n    label.appendChild(spanDummy);\r\n    label.appendChild(checkbox);\r\n    label.appendChild(span);\r\n\r\n    PSWD.after(label);\r\n\r\n    const showingCheckBox = { id: checkbox.id, showing: false, elem: PSWD, span: span };\r\n    if (!showingCheckBoxes.includes(showingCheckBox)) {\r\n      showingCheckBoxes.push(showingCheckBox);\r\n    }\r\n    checkbox.addEventListener('change', __toggleVisibility)\r\n  });\r\n}\r\n\r\nconst __toggleVisibility = (e: { preventDefault: () => void; currentTarget: any; }) => {\r\n  e.preventDefault();\r\n  const checkbox: HTMLInputElement = e.currentTarget;\r\n  // console.log({ checkbox, e })\r\n  checkbox.checked\r\n  showingCheckBoxes.forEach(showingCheckBox => {\r\n    if (checkbox.id === showingCheckBox.id) {\r\n      if (showingCheckBox.showing === false) {\r\n        showingCheckBox.elem.type = \"text\";\r\n        showingCheckBox.span.innerText = labelTextHide;\r\n        showingCheckBox.showing = true;\r\n      } else {\r\n        showingCheckBox.elem.type = \"password\";\r\n        showingCheckBox.span.innerText = labelTextShow;\r\n        showingCheckBox.showing = false;\r\n      }\r\n      // console.log({ showingCheckBox, button });\r\n    }\r\n  });\r\n}","import \"@@assets/styles/views/login/main.scss\";\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { togglePswdVisibility } from '@@addons/functions/toggle_pswd_visibility';\r\nimport { POST_Login } from '@@addons/network/login';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport '@material/mwc-icon';\r\nimport '@material/mwc-button';\r\nimport '@material/mwc-textfield';\r\n\r\n\r\n@customElement('pdb-login-form')\r\nexport class PdbLoginForm extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <form method=\"post\" action=\"#\" class=\"form\" make-general-posts=\"client-login\">\r\n        <div class=\"form-input-container\">\r\n          <mwc-textfield name=\"phone_email\" id=\"phone_email\" label=\"E-mail/ Phone Number\" icon=\"person\" outlined type=\"text\" required>\r\n          </mwc-textfield>\r\n        </div>\r\n        <div class=\"form-input-container\">\r\n          <mwc-textfield name=\"password\" id=\"password\" label=\"Password\" icon=\"lock\" outlined type=\"password\" required>\r\n          </mwc-textfield>\r\n        </div>\r\n      \r\n        <div class=\"form-input-container flex\">      \r\n          <div class=\"w-full text-right\">\r\n            <a class=\"underline text-sm !text-gray-800 hover:!text-gray-900\"\r\n              href=\"${CONSTANTS.URLS.FORGOT_PASSWORD_URL}\">\r\n              forgot password?\r\n            </a>\r\n          </div>\r\n        </div>\r\n      \r\n        <div class=\"form-input-container\">\r\n          <mwc-button label=\"Login\" raised class=\"button\" @click=\"${this.submitForm}\">\r\n          </mwc-button>\r\n        </div>\r\n      \r\n        <div class=\"flex form-input-container items-center text-center\">\r\n          <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n          <label class=\"block font-medium text-sm text-gray-600 w-full\">\r\n            Lets go digital...\r\n          </label>\r\n          <hr class=\"border-gray-300 border-1 w-full rounded-md\">\r\n        </div>\r\n      </form>`;\r\n  }\r\n\r\n  firstUpdated() {\r\n    togglePswdVisibility();\r\n    togglePswdVisibility(\"mwc-textfield\");\r\n  }\r\n\r\n  async submitForm(e: PointerEvent) {\r\n    e.preventDefault();\r\n    // console.log({ e });\r\n    await POST_Login();\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { GetNetworkStatus } from \"@@addons/functions/https/network_status\";\r\nimport { setUserLoginInfoCookie } from \"@@addons/functions/login\";\r\nimport { removeActiveBranchIdCookie, setActiveBranchIdCookie } from \"@@addons/functions/views/home/branch\";\r\nimport { ClientBranches_I } from \"@@addons/interfaces/clients/branches\";\r\nimport { userLoginInfo_S } from \"@@addons/interfaces/network_calls/login\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport Swal from \"sweetalert2\";\r\nimport { GET_ClientBranches } from \"../clients/branches\";\r\n\r\nexport async function POST_Login(): Promise<any> {\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'clients/login',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"client-login\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  GetNetworkStatus(online => {\r\n    // console.log({ \"networkStatus\": online });\r\n    // console.log({ \"networkStatus\": \"we are online\" });\r\n    return Swal.fire({\r\n      title: 'Login?',\r\n      // text: \"You won't be able to revert this!\",\r\n      icon: 'info',\r\n      iconColor: '#f97817',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes',\r\n      cancelButtonText: 'Cancel',\r\n      confirmButtonColor: '#f97817',\r\n      cancelButtonColor: '#ddd',\r\n      reverseButtons: true,\r\n      showLoaderOnConfirm: true,\r\n      backdrop: true,\r\n      preConfirm: async (login) => {\r\n        return await http(url, {\r\n          method: \"POST\",\r\n          body: formData,\r\n        }, false).then((HTTP) => {\r\n\r\n          const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n          const _RESPONSE = networkCallRes.response;\r\n          // console.log({\"_RESPONSE\": _RESPONSE});\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  let errormsg = { error: e.id + \": \" + err };\r\n                  if (e.id === \"non_field_errors\") {\r\n                    errormsg = { error: err };\r\n                  }\r\n\r\n                  errors.push(errormsg);\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        }).catch(error => {\r\n          Swal.showValidationMessage(\r\n            `${String(error)}`\r\n          );\r\n        });\r\n      },\r\n      allowOutsideClick: () => !Swal.isLoading()\r\n    }).then((result) => {\r\n      // console.log({result})\r\n      if (result.isConfirmed) {\r\n        let successMsg = \"Success\",\r\n          isSuccess = false,\r\n          data: any;\r\n        const _VALUE = result.value;\r\n        if (_VALUE instanceof Object) {\r\n          const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n          successMsg = \"Login Successful\";\r\n\r\n          data = VALUE.data;\r\n          isSuccess = _VALUE.response.success;\r\n        }\r\n        isSuccess ? Swal.fire({\r\n          title: successMsg,\r\n          icon: isSuccess ? 'success' : 'error',\r\n          iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n          confirmButtonColor: '#f97817',\r\n        }) : null;\r\n        isSuccess ? setTimeout(async () => {\r\n          const userLoginInfo = userLoginInfo_S(data);\r\n          setUserLoginInfoCookie(userLoginInfo);\r\n          removeActiveBranchIdCookie();\r\n\r\n          try {\r\n            const _branches = await GET_ClientBranches<ClientBranches_I>(userLoginInfo.user.branchId);\r\n            if (!Array.isArray(_branches.response.data)) {\r\n              setActiveBranchIdCookie(_branches.response.data);\r\n            }\r\n          } catch (error) {\r\n            console.error({ error });\r\n          }\r\n\r\n          window.location.reload();\r\n        }, 500) : null;\r\n      }\r\n    });\r\n  }, offline => {\r\n    // console.log({ \"networkStatus\": \"we are offline\" });\r\n    Swal.fire({\r\n      title: \"Looks like you're offline\",\r\n      text: \"Try again later!\",\r\n      icon: 'info',\r\n      iconColor: '#f97817',\r\n      confirmButtonColor: '#f97817',\r\n    });\r\n  });\r\n}","import{_$LH as o}from\"./lit-html.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const{I:l}=o,t=o=>null===o||\"object\"!=typeof o&&\"function\"!=typeof o,i={HTML:1,SVG:2},n=(o,l)=>void 0===l?void 0!==(null==o?void 0:o._$litType$):(null==o?void 0:o._$litType$)===l,d=o=>void 0!==(null==o?void 0:o._$litDirective$),v=o=>null==o?void 0:o._$litDirective$,e=o=>void 0===o.strings,c=()=>document.createComment(\"\"),r=(o,t,i)=>{var n;const d=o._$AA.parentNode,v=void 0===t?o._$AB:t._$AA;if(void 0===i){const t=d.insertBefore(c(),v),n=d.insertBefore(c(),v);i=new l(t,n,o,o.options)}else{const l=i._$AB.nextSibling,t=i._$AM,e=t!==o;if(e){let l;null===(n=i._$AQ)||void 0===n||n.call(i,o),i._$AM=o,void 0!==i._$AP&&(l=o._$AU)!==t._$AU&&i._$AP(l)}if(l!==v||e){let o=i._$AA;for(;o!==l;){const l=o.nextSibling;d.insertBefore(o,v),o=l}}}return i},u=(o,l,t=o)=>(o._$AI(l,t),o),f={},s=(o,l=f)=>o._$AH=l,m=o=>o._$AH,p=o=>{var l;null===(l=o._$AP)||void 0===l||l.call(o,!1,!0);let t=o._$AA;const i=o._$AB.nextSibling;for(;t!==i;){const o=t.nextSibling;t.remove(),t=o}},a=o=>{o._$AR()};export{i as TemplateResultType,a as clearPart,m as getCommittedValue,v as getDirectiveClass,r as insertPart,d as isDirectiveResult,t as isPrimitive,e as isSingleExpression,n as isTemplateResult,p as removePart,u as setChildPartValue,s as setCommittedValue};\n//# sourceMappingURL=directive-helpers.js.map\n","import{noChange as r,nothing as e}from\"../lit-html.js\";import{directive as i,Directive as t,PartType as n}from\"../directive.js\";import{isSingleExpression as o,setCommittedValue as s}from\"../directive-helpers.js\";\n/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */const l=i(class extends t{constructor(r){if(super(r),r.type!==n.PROPERTY&&r.type!==n.ATTRIBUTE&&r.type!==n.BOOLEAN_ATTRIBUTE)throw Error(\"The `live` directive is not allowed on child or event bindings\");if(!o(r))throw Error(\"`live` bindings can only contain a single expression\")}render(r){return r}update(i,[t]){if(t===r||t===e)return t;const o=i.element,l=i.name;if(i.type===n.PROPERTY){if(t===o[l])return r}else if(i.type===n.BOOLEAN_ATTRIBUTE){if(!!t===o.hasAttribute(l))return r}else if(i.type===n.ATTRIBUTE&&o.getAttribute(l)===t+\"\")return r;return s(i),t}});export{l as live};\n//# sourceMappingURL=live.js.map\n"],"names":["root","factory","exports","module","define","amd","self","https_swal_error_format","error","addStyle","Array","isArray","errorMsg","forEach","data","Error","GetNetworkStatus","online","offline","navigator","onLine","userLoginInfo","setActiveBranchIdCookie","stringData","JSON","stringify","removeActiveBranchIdCookie","getActiveBranchIdCookie","_cookie","cookie","parse","GET_ClientBranches","type","_get_cookie","url","HTTP","method","headers","Authorization","token","console","errorHttp","showingCheckBoxes","labelTextShow","togglePswdVisibility","document","querySelectorAll","PSWD","i","parentElement","setAttribute","getAttribute","label","createElement","span","innerText","spanDummy","checkbox","id","appendChild","after","showingCheckBox","showing","elem","includes","push","addEventListener","__toggleVisibility","e","preventDefault","currentTarget","checked","PdbLoginForm","constructor","super","connectedCallback","disconnectedCallback","render","this","submitForm","firstUpdated","formContainer","querySelector","formData","FormData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","http","body","then","networkCallRes","_RESPONSE","response","unknownError","length","errors","err","errormsg","res","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","success","setTimeout","_branches","user","branchId","window","location","reload","text","POST_Login","createRenderRoot","styles","I","l","t","o","strings","f","s","_$AH","r","update","element","name","hasAttribute"],"sourceRoot":""}