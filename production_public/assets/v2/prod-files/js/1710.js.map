{"version":3,"file":"../../production_public/assets/v2/prod-files/js/1710.js","mappings":"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","sources":["webpack://webpackNumbers/./src/addons/network/attendance/setup/member/delete.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/member/post.ts","webpack://webpackNumbers/./src/addons/network/attendance/setup/schedule/index.ts","webpack://webpackNumbers/./src/addons/widgets/datatables/index.ts","webpack://webpackNumbers/./src/view/attendance/setup/schedules/title_card/index.ts"],"sourcesContent":["import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function DELETE_AttendanceDeleteScheduleMember(meetingEventId: Number,): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/member/' + meetingEventId,\r\n    formData = {};\r\n\r\n  return Swal.fire({\r\n    title: 'Remove Member?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n          method: \"DELETE\",\r\n          body: JSON.stringify(formData),\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        try {\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", HTTP, false);\r\n          const _RESPONSE = networkCallRes.response;\r\n          if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n            if (_RESPONSE.unknownError.length > 0) {\r\n              // console.log({\"_RESPONSE.unknownError\": _RESPONSE.unknownError});\r\n\r\n              let errors: Array<{ error: string }> = [];\r\n              _RESPONSE.unknownError.forEach(e => {\r\n                const _errors = e.errors;\r\n                _errors.forEach(err => {\r\n                  errors.push({ error: err });\r\n                });\r\n              });\r\n\r\n              const res = https_swal_error_format(errors);\r\n              Swal.showValidationMessage(\r\n                `${res}`\r\n              );\r\n            }\r\n          }\r\n          return networkCallRes;\r\n        } catch (error) {\r\n          console.error({ error });\r\n          let errorHttp = HTTP;\r\n          errorHttp['error'] = error;\r\n          const networkCallRes = new NetWorkCallResponses(\"delete\", errorHttp, true);\r\n          networkCallRes.postForm\r\n          return networkCallRes;\r\n        }\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess? 'success': 'error',\r\n        iconColor: '#f97817',\r\n        confirmButtonColor: '#f97817',\r\n      });\r\n      isSuccess? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500): null;\r\n    }\r\n  });\r\n}","import Swal from \"sweetalert2\";\r\nimport { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { NetworkCallResponse_I } from \"@@addons/interfaces/network_calls/response\";\r\nimport { https_swal_error_format } from \"@@addons/functions/https/https_swal_error_format\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\n\r\nexport async function POST_AttendanceAddScheduleMember(): Promise<any> {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n\r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/member',\r\n    formContainer: HTMLFormElement = document.querySelector('[make-general-posts=\"add-schedule-member\"]'),\r\n    formData = new FormData(formContainer);\r\n\r\n  return Swal.fire({\r\n    title: 'Add Member?',\r\n    // text: \"You won't be able to revert this!\",\r\n    icon: 'info',\r\n    iconColor: '#f97817',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Yes',\r\n    cancelButtonText: 'Cancel',\r\n    confirmButtonColor: '#f97817',\r\n    cancelButtonColor: '#ddd',\r\n    reverseButtons: true,\r\n    showLoaderOnConfirm: true,\r\n    backdrop: true,\r\n    preConfirm: async (login) => {\r\n      return await http(url, {\r\n        method: \"POST\",\r\n        body: formData,\r\n        headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n        }\r\n      }, false).then((HTTP) => {\r\n        // console.log({ HTTP });\r\n\r\n        const networkCallRes = new NetWorkCallResponses(\"post\", HTTP, false, formContainer);\r\n        const _RESPONSE = networkCallRes.response;\r\n        // console.log({\"_RESPONSE\": _RESPONSE});\r\n        if ('nameError' in _RESPONSE && 'unknownError' in _RESPONSE) {\r\n          if (_RESPONSE.unknownError.length > 0) {\r\n            // console.log({ \"_RESPONSE.unknownError\": _RESPONSE.unknownError });\r\n\r\n            let errors: Array<{ error: string }> = [];\r\n            _RESPONSE.unknownError.forEach(e => {\r\n              const _errors = e.errors;\r\n              _errors.forEach(err => {\r\n                let errormsg = { error: e.id + \": \" + err };\r\n                if (e.id === \"non_field_errors\") {\r\n                  errormsg = { error: err };\r\n                }\r\n\r\n                errors.push(errormsg);\r\n              });\r\n            });\r\n\r\n            const res = https_swal_error_format(errors);\r\n            Swal.showValidationMessage(\r\n              `${res}`\r\n            );\r\n          }\r\n        }\r\n        return networkCallRes;\r\n      }).catch(error => {\r\n        Swal.showValidationMessage(\r\n          `${String(error)}`\r\n        );\r\n      });\r\n    },\r\n    allowOutsideClick: () => !Swal.isLoading()\r\n  }).then((result) => {\r\n    // console.log({ result });\r\n    if (result.isConfirmed) {\r\n      let successMsg = \"Success\",\r\n        isSuccess = false;\r\n      const _VALUE = result.value;\r\n      if (_VALUE instanceof Object) {\r\n        const VALUE: NetworkCallResponse_I<unknown> = _VALUE.response;\r\n        successMsg = String(VALUE.message);\r\n\r\n        isSuccess = _VALUE.response.success;\r\n      }\r\n      isSuccess ? Swal.fire({\r\n        title: successMsg,\r\n        icon: isSuccess ? 'success' : 'error',\r\n        iconColor: isSuccess ? '#f97817' : '#dc2626',\r\n        confirmButtonColor: '#f97817',\r\n      }) : null;\r\n      isSuccess ? setTimeout(() => {\r\n        window.location.reload();\r\n      }, 500) : null;\r\n    }\r\n  });\r\n}","import { CONSTANTS } from \"@@addons/constants\";\r\nimport { http } from \"@@addons/functions/https/http\";\r\nimport { NetWorkCallResponses } from \"@@addons/classes/network_calls/response\";\r\nimport { getUserLoginInfoCookie } from \"@@addons/functions/login\";\r\n\r\nexport async function GET_AttendanceSchedule<Type>(ID: Number = null, url_params: string = \"\", ) {\r\n\r\n  const _get_cookie = getUserLoginInfoCookie();\r\n  // console.log({_get_cookie});\r\n  \r\n  const url = CONSTANTS.URLS.AKWAABA_API_BASE_URL + 'attendance/meeting-event/schedule'\r\n    + (ID === null ? \"\" : \"/\" + ID) + (url_params),\r\n    HTTP = await http(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n          Authorization: \"Token \" + _get_cookie.token\r\n      }\r\n    }, true);\r\n  try {\r\n    return new NetWorkCallResponses<Type>(\"get\", HTTP);\r\n  } catch (error) {\r\n    console.error({ error });\r\n    let errorHttp = HTTP;\r\n    errorHttp['error'] = error;\r\n    return new NetWorkCallResponses<Type>(\"get\", errorHttp, true);\r\n  }\r\n}","import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport '../../interfaces/datatables';\r\nimport \"../../../assets/styles/views/datatable/main.scss\";\r\n// import * as $ from 'jquery'\r\nimport { CONSTANTS } from '@@addons/constants';\r\n\r\n@customElement('datatables-new')\r\nexport class _DATATABLES_ extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: Number })\r\n  private randomID1: number = Math.floor(Math.random() * 12345);\r\n\r\n  @property({ type: Number })\r\n  private randomID2: number = Math.floor(Math.random() * 678910);\r\n\r\n  @property({ type: String })\r\n  private ID: string = \"datatable\";\r\n\r\n  @property({ type: Object })\r\n  public datatable?: DataTables_Settings_I;\r\n\r\n  @property({ type: Array })\r\n  public dt_head?: DataTables_ColumnSettings_I[];\r\n\r\n  @property({ type: Array })\r\n  public dt_foot?: DataTables_ColumnSettings_I[];\r\n\r\n  @property({ type: Array })\r\n  public dt_body?: DataTables_ColumnSettings_I[][];\r\n\r\n  private _init?: DataTables_Api_I<any>;\r\n\r\n  public set init(value: DataTables_Api_I<any>,) {\r\n    \r\n    let oldVal = this._init;\r\n    this._init = value;\r\n    console.log(\"public set init\", {oldVal, value});\r\n    this.requestUpdate(\"init\", oldVal);\r\n  }\r\n\r\n  public get init(): DataTables_Api_I<any> {\r\n    return this._init;\r\n  }\r\n\r\n  @property()\r\n  public ajaxHeader?: any;\r\n\r\n  // public _ajaxHeader: any = null;\r\n\r\n  // public set ajaxHeader(value: any) {\r\n  //   this._ajaxHeader = value;\r\n  //   this.requestUpdate();\r\n  // }\r\n\r\n  // public get ajaxHeader(): any {\r\n  //   return this._ajaxHeader;\r\n  // }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    // console.log({\"ajaxHeader\": this.ajaxHeader})\r\n\r\n    this.ID = this.randomID1 + \"-\" + this.ID + \"-\" + this.randomID2;\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n      :host { display: block; }\r\n      input, select {\r\n        box-shadow: 0 0 0 1px !important;\r\n        padding: 2.5px !important;\r\n        margin: 2.5px !important;\r\n      }\r\n    `\r\n  ];\r\n\r\n  render() {\r\n    // console.log({\"this.ID\": this.ID, \"datatable\": this.datatable});\r\n    return html`\r\n    <table  class=\"align-middle mb-0 table table-borderless table-striped table-hover\" style=\"width:100%\" datatable=\"${this.ID}\">\r\n      <thead>\r\n        <tr>\r\n          ${this.thead()}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n          ${this.tbody()}\r\n      </tbody>\r\n      <tfoot>\r\n        <tr>\r\n          ${this.tfoot()}\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  `;\r\n  }\r\n\r\n  private thead() {\r\n    return html`\r\n      ${this.dt_head.map(head => {\r\n        // console.log({\"headhead\": head});\r\n        \r\n        return html`<th>${head.title}</th>`\r\n      })}\r\n    `;\r\n  }\r\n\r\n  private tbody() {\r\n    return html`\r\n      ${this.dt_body.map(row => {\r\n        // console.log({\"bodybody1\": row});\r\n        \r\n        return html`<tr>${row.map(column => {\r\n          // console.log({\"bodybody2\": column});\r\n          \r\n          return html`<td>${column.title}</td>`\r\n        })}</tr>`\r\n      })}\r\n    `;\r\n  }\r\n\r\n  private tfoot() {\r\n    return html`\r\n    ${this.dt_foot.map(foot => {\r\n      return html`<th>${foot.title}</th>`\r\n    })}\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    const table = this.querySelector('[datatable=\"'+this.ID+'\"]');\r\n    \r\n    if (typeof this.datatable.ajax === \"object\") {\r\n      let AJAX = this.datatable.ajax;\r\n      // console.log({ \"typeof AJAX\": typeof AJAX });\r\n      AJAX.headers = {\r\n        \"Access-Control-Allow-Origin\": \"*/*\",\r\n        \"Accept\": \"application/json, text/plain, */*\"\r\n      };\r\n      let _headers = AJAX.headers;\r\n      // for (const header in this.ajaxHeader) {\r\n      //   // console.log({header})\r\n      //   // @ts-ignore\r\n      //   _headers[header] = this.ajaxHeader[header];\r\n      // }\r\n      // console.log({ \"this.ajaxHeader\": this.ajaxHeader })\r\n      for (const key in this.ajaxHeader) {\r\n        if (Object.prototype.hasOwnProperty.call(this.ajaxHeader, key)) {\r\n          const element = this.ajaxHeader[key];\r\n          _headers[key] = element;\r\n        }\r\n      }\r\n      // console.log({ \"_headers\": _headers, $ })\r\n      // for (const iterator of this.ajaxHeader) {\r\n      //   // @ts-ignore\r\n      //   _headers[iterator] = this.ajaxHeader.get(iterator);\r\n      // }\r\n      AJAX.headers = _headers;\r\n      this.datatable.ajax = AJAX;\r\n      // console.log({\"this.datatable\": this.datatable, \"$\": $})\r\n    }\r\n    // console.log({$, table, \"this.datatable\": this.datatable});\r\n    \r\n    // @ts-ignore\r\n    $(table).DataTable(this.datatable);\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n","import \"@material/mwc-button\"\r\n// @ts-ignore\r\nimport { QueryOptions } from 'select2';\r\nimport '@@addons/widgets/form/new/select';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { CONSTANTS } from '@@addons/constants';\r\nimport { getUserLoginInfoCookie } from '@@addons/functions/login';\r\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\r\nimport { GET_AttendanceSchedule } from '@@addons/network/attendance/setup/schedule';\r\nimport { MeetingEventSchedule_I } from '@@addons/interfaces/attendance/meeting_event/schedules';\r\nimport { NetworkCallResponse_I } from '@@addons/interfaces/network_calls/response';\r\nimport { SelectInputProcessedAjaxResponse_I, SelectInputProcessedAjaxUrlParam_I } from '@@addons/interfaces/form/select-input';\r\n\r\n\r\n@customElement(\"schedule-title-card\")\r\nexport class ScheduleTitleCard extends LitElement {\r\n  constructor() { super(); }\r\n\r\n  @property({ type: String })\r\n  public currentMeetingEventName?: string;\r\n\r\n  @property({ type: Number })\r\n  public meetingEventId: number = 0;\r\n\r\n  @property({ type: Number })\r\n  public CLIENT_ID: number = 0;\r\n\r\n  @property({ type: Number })\r\n  private startSearchPage: number = 0;\r\n\r\n  private __schedule: NetworkCallResponse_I<MeetingEventSchedule_I> = null;\r\n\r\n  public set _schedule(value: NetworkCallResponse_I<MeetingEventSchedule_I>) {\r\n    this.__schedule = value;\r\n    this.requestUpdate();\r\n  }\r\n\r\n  public get _schedule(): NetworkCallResponse_I<MeetingEventSchedule_I> {\r\n    return this.__schedule;\r\n  }\r\n\r\n  async connectedCallback() {\r\n    super.connectedCallback();\r\n\r\n    await this.getAttendanceSchedule();\r\n  }\r\n\r\n  disconnectedCallback() { }\r\n  static styles = [\r\n    css`\r\n   :host { display: block; }\r\n  `\r\n  ];\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"flex justify-end\">\r\n        <div class=\"col-md-6 col-lg-4 px-0 my-2\">\r\n          <div class=\"m-1 border rounded-md\">\r\n            <div class=\"p-2 shadow-sm border rounded-md\">\r\n              <h4 class=\"text-lg font-bold\">${\r\n                // @ts-ignore\r\n                `${this.currentMeetingEventName ?? this._schedule == null? \"...\": this._schedule.data.name}`.replace(/\\b\\w/g, (match) => match.toUpperCase())\r\n              }</h4>\r\n            </div>\r\n            <div class=\"p-2\">\r\n              ${this.meetingEventField}\r\n            </div>\r\n            <div class=\"p-2 shadow-sm border rounded-md\">\r\n              <div class=\"flex justify-end \">\r\n                <mwc-button raised class=\"button success\" @click=\"${this.changeCurrentSchedule}\">\r\n                  Change Meeting/ Event\r\n                </mwc-button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  firstUpdated() { }\r\n\r\n  private get meetingEventField() {\r\n    let ajaxHeader: { Authorization?: string } = {};\r\n    // const _get_cookie = base64Decode(get_cookie('client_tokenLogin'));\r\n    const _get_cookie = getUserLoginInfoCookie();\r\n    ajaxHeader.Authorization = \"Token \" + _get_cookie.token;\r\n    // ajaxHeader.Authorization = \"Token \" + _get_cookie;\r\n    // console.log({ajaxHeader: ajaxHeader});\r\n    // console.log({ \"this._meetingEvents\": this._meetingEvents });\r\n    return html`\r\n      <div class=\"container\">\r\n        <div class=\"row justify-center\">\r\n          <div class=\"col-md-12\">\r\n            <h4 class=\"font-semibold my-2\">Select Meeting/ Event</h4>\r\n            <select-input class=\"w-100\" id=\"change_schedule_input_box\" name=\"change_schedule_input_box\" label=\"Select Schedule\"\r\n              .ajaxFetchProcessResponse=\"${this.processClientScheduleSearch}\" startSearchPage=\"${this.startSearchPage}\"\r\n              .ajaxHeader=\"${ajaxHeader}\" .ajaxFetchUrlParams=\"${this.ajaxFetchUrlParams}\"\r\n              ajaxFetchUrl=\"${CONSTANTS.URLS.AKWAABA_API_BASE_URL}attendance/meeting-event/schedule\"></select-input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  private processClientScheduleSearch(data: any, params: QueryOptions): SelectInputProcessedAjaxResponse_I {\r\n    params.page = params.page || 0;\r\n    const TOTAL = data.count,\r\n      RESULTS = data.results,\r\n      SELECTOR = document.querySelector('[id=\"change_schedule_input_box\"]');\r\n    // console.log({ data, params, RESULTS, SELECTOR });\r\n\r\n    let processedData: { id: number; text: string; }[] = [];\r\n    if (TOTAL > 0) {\r\n      var _data = RESULTS;\r\n      // console.log({ \"smbfl-_data\": _data });\r\n      for (let i = 0; i < _data.length; i++) {\r\n        const item = _data[i];\r\n        const id = item['id'];\r\n        const fullName = item['name'];\r\n        const _new = {\r\n          id: id,\r\n          text: fullName,\r\n        }\r\n        if (!processedData.includes(_new)) {\r\n          processedData.push(_new)\r\n        }\r\n      }\r\n    }\r\n    // console.log({processedData});\r\n\r\n\r\n\r\n    return {\r\n      results: processedData,\r\n      total: TOTAL,\r\n      // @ts-ignore\r\n      totalShowing: SELECTOR.totalShowing,\r\n    };\r\n  }\r\n\r\n  private get ajaxFetchUrlParams(): SelectInputProcessedAjaxUrlParam_I[] {\r\n    return [\r\n      { param: \"isRecuring\", value: \"both\" },\r\n      { param: \"branchId\", value: String(getUserLoginInfoCookie().user.branchId) }\r\n    ]\r\n  }\r\n\r\n  private changeCurrentSchedule(event: Event) {\r\n    event.preventDefault();\r\n    this.querySelectorAll('[id=\"change_schedule_input_box\"][name=\"change_schedule_input_box\"]').forEach((input) => {\r\n\r\n      // @ts-ignore\r\n      if (input.value.length > 0) {\r\n        // Get the current URL.\r\n        const currentUrl = window.location.href;\r\n\r\n        // Create a new URL with the meeting-event-id query parameter set to the new value.\r\n        const newUrl = new URL(currentUrl);\r\n\r\n        // @ts-ignore\r\n        newUrl.searchParams.set(\"meeting-event-id\", input.value);\r\n\r\n        // Reload the page with the new URL.\r\n        // @ts-ignore\r\n        window.location.href = newUrl;\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  private async getAttendanceSchedule() {\r\n    const _networkResponse = await GET_AttendanceSchedule<MeetingEventSchedule_I>(this.meetingEventId);\r\n    if (_networkResponse === null) {\r\n      this._schedule = undefined;\r\n    } else {\r\n      this._schedule = _networkResponse.response;\r\n    }\r\n  }\r\n\r\n  createRenderRoot() {\r\n    return this;\r\n  }\r\n}\r\n"],"names":["DELETE_AttendanceDeleteScheduleMember","meetingEventId","_get_cookie","url","formData","title","icon","iconColor","showCancelButton","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","reverseButtons","showLoaderOnConfirm","backdrop","preConfirm","login","method","body","JSON","stringify","headers","Authorization","token","then","HTTP","networkCallRes","_RESPONSE","response","unknownError","length","errors","forEach","e","err","push","error","res","console","errorHttp","postForm","catch","String","allowOutsideClick","result","isConfirmed","successMsg","isSuccess","_VALUE","value","Object","VALUE","message","success","setTimeout","window","location","reload","POST_AttendanceAddScheduleMember","formContainer","document","querySelector","FormData","errormsg","id","GET_AttendanceSchedule","ID","url_params","_DATATABLES_","constructor","super","randomID1","Math","floor","random","randomID2","init","oldVal","this","_init","log","requestUpdate","connectedCallback","disconnectedCallback","render","thead","tbody","tfoot","dt_head","map","head","dt_body","row","column","dt_foot","foot","firstUpdated","table","datatable","ajax","AJAX","_headers","key","ajaxHeader","prototype","hasOwnProperty","call","element","$","DataTable","createRenderRoot","styles","type","Number","DataTables_Settings_I","Array","ScheduleTitleCard","CLIENT_ID","startSearchPage","__schedule","_schedule","getAttendanceSchedule","currentMeetingEventName","data","name","replace","match","toUpperCase","meetingEventField","changeCurrentSchedule","processClientScheduleSearch","ajaxFetchUrlParams","params","page","TOTAL","count","RESULTS","results","SELECTOR","processedData","_data","i","item","_new","text","includes","total","totalShowing","param","user","branchId","event","preventDefault","querySelectorAll","input","currentUrl","href","newUrl","URL","searchParams","set","_networkResponse","undefined"],"sourceRoot":""}